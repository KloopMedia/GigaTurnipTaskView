{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","util/Auth.js","components/text-editor/TextViewer.tsx","util/Util.tsx","components/custom-widgets/autocomplete/AutoCompleteWidget.tsx","components/custom-widgets/fixed-radio-widget/FixedRadioWidget.tsx","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/QuckTaskContent.tsx","components/tasks/QuickTask.tsx","components/tasks/TaskList.tsx","components/notifications/Notifications.tsx","components/tasks/TaskFilter.tsx","components/tasks/TaskMenu.tsx","components/campaigns/About.tsx","components/notifications/NotificationContent.tsx","components/tasks/IntegratedTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","taskstagesUrl","tasksUrl","notificationsUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","returnNewState","prevState","update","multiple","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","filename","name","replace","console","log","snap","child","put","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","ref","getDownloadURL","downloadURL","fullPath","filePath","fileLink","url","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomFileWidget","schema","uiSchema","disabled","required","formContext","id","campaignId","chainId","stageId","userId","taskId","useState","uploadedFiles","setUploadedFiles","fileLinks","currentFile","setCurrentFile","isImageOpen","setIsImageOpen","isVideoOpen","setIsVideoOpen","fileType","setFileType","parsedValue","setParsedValue","privateUpload","private","multipleSelect","hasUploadedFiles","Object","keys","length","isInputRequired","pathToFolder","undefined","useEffect","parsed","JSON","parse","forEach","getDownloadUrl","handleChange","event","target","_onBlur","onBlur","path","updateFormResponses","stringify","allFiles","onChange","deleteFile","links","uploaded","handleFileClick","getMetadata","metadata","type","contentType","split","open","closeViewer","src","disableScroll","backgroundStyle","backgroundColor","closeOnClickOutside","onClose","Dialog","fullWidth","height","controls","className","title","onFocus","i","style","onClick","fontSize","padding","margin","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","TextViewer","data","inline","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","paginatedDataHandler","setDataFunction","setCountFunction","results","count","numOfPages","ceil","createPaginationURL","page","formatDateString","date","d","Date","year","getFullYear","month","addZeroesToDate","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","a11yProps","index","requestTaskAssignment","post","getSelectableTasks","get","res","getCompleteTasks","getOpenTasks","getPreviousTasks","getTask","getUserNotifications","viewed","importance","AutoCompleteWidget","placeholder","readonly","label","autofocus","options","rawErrors","searchField","responseField","params","examples","setExamples","updateExamples","webhook","catch","err","inputType","Form","Group","Label","Control","autoFocus","readOnly","list","emptyValue","example","RadioWidget","enumOptions","enumDisabled","_onChange","_onFocus","Boolean","option","itemDisabled","Array","isArray","indexOf","checked","Check","Task","useParams","history","useHistory","useContext","setSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","editorData","setEditorData","loader","setLoader","ready","setReady","widgets","customfile","autocomplete","FixedRadioWidget","task","stage","rich_text","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","responses","previousTasks","setData","message","action","patch","paddingBottom","Grid","formData","liveOmit","omitExtraData","alert","push","e","onSubmit","Button","paddingLeft","CircularProgress","projectName","drawerWidth","openedMixin","theme","transition","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","justifyContent","mixins","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","useTheme","setOpen","redirect","DrawerItems","icon","sx","CssBaseline","position","Toolbar","IconButton","edge","marginRight","noWrap","component","cursor","flexGrow","email","direction","Divider","List","item","ListItem","button","ListItemIcon","ListItemText","primary","p","ParentCard","description","campaign","onCardButtonClick","openCampaignInfo","selectable","Card","CardContent","gutterBottom","CardActions","size","Builder","userCampaigns","setUserCampaigns","selectableCampaigns","setSelectableCampaigns","handleCardRedirect","align","container","TabPanel","other","role","hidden","SimpleTabs","bgcolor","Tabs","centered","Tab","showSelectable","TaskCard","creatable","integrated","handleOpen","pathname","handleCreate","requestTaskCreation","handleSelectable","QuickTaskContent","taskData","isAssigned","refreshTasks","displayed_prev_tasks","sm","xs","ExpandMore","expand","transform","shortest","QuickTask","excluded","handleAction","expanded","setExpanded","setAssigned","CardHeader","Stack","borderRadius","returnButton","py","px","background","subheader","titleTypographyProps","subheaderTypographyProps","Collapse","in","timeout","unmountOnExit","TaskList","tasks","expandAll","setExpandAll","integrator_group","Notifications","onlyNew","viewedNotifications","setViewedNotifications","notViewedNotifications","setNotViewedNotifications","totalPages","setTotalPages","setPage","tab","setTab","matches","useMediaQuery","openMessage","created_at","newValue","Pagination","showFirstButton","showLastButton","TaskFilter","setChainId","setStageId","formStageId","setFormStageId","chains","setChains","stages","setStages","jsonSchema","setJsonSchema","Axios","savedChain","savedStage","savedFormStage","filter","ui","savedResponses","FormGroup","FormControl","m","InputLabel","Select","labelId","MenuItem","TaskMenu","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","creatableTasks","setCreatableTasks","getCreatableTasks","pb","About","setName","setDescription","richText","setRichText","requestCampaignInfo","requestCampaignJoin","NotificationContent","getNotificationContent","text","IntegratedTask","taskList","setTaskList","setTaskActionId","listOfExcludedTasks","setListOfExcludedTasks","setDialogOpen","handleActionClick","includeTask","newList","splice","parsedList","from","Set","includes","Chip","App","exact","Appbar","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb5bd2fb.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\nconst notificationsUrl = \"/api/v1/notifications/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl,\r\n    notificationsUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload())\r\n}\r\n\r\nexport default firebase;","import firebase from '../../../util/Firebase'\r\n\r\nconst returnNewState = (prevState, update, multiple) => {\r\n    if (multiple) {\r\n        if (prevState) {\r\n            return {...prevState, ...update}\r\n        } else {\r\n            return update\r\n        }\r\n    } else {\r\n        return update\r\n    }\r\n}\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks, multiple) => {\r\n    if (storageRef) {\r\n        if (!multiple) {\r\n            setFileBeingUploaded({})\r\n            setFileLinks({})\r\n        }\r\n        await Promise.all(files.map(async file => {\r\n            const filename = file.name.replace(/\\./g, '_').replace(/ /g, '_');\r\n            console.log(filename)\r\n            const snap = storageRef.child(filename).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[filename]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[filename]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        console.log(\"FILE PATH\", snap.snapshot.ref.fullPath)\r\n                        const filePath = snap.snapshot.ref.fullPath\r\n                        const fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[filename]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[filename]: filePath}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    };\r\n}\r\n\r\nexport default upload","import React from 'react'\r\nimport {Box, LinearProgress, Typography} from \"@mui/material\"\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport ImageViewer from 'react-simple-image-viewer';\r\nimport {Dialog} from \"@mui/material\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, disabled, required, formContext, value, id} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [uploadedFiles, setUploadedFiles] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState<any>({})\r\n    const [currentFile, setCurrentFile] = useState(\"\")\r\n    const [isImageOpen, setIsImageOpen] = useState(false);\r\n    const [isVideoOpen, setIsVideoOpen] = useState(false);\r\n    const [fileType, setFileType] = useState(\"\")\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    const privateUpload = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].private ? uiSchema[\"ui:options\"].private : false\r\n    const multipleSelect = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].multiple ? uiSchema[\"ui:options\"].multiple : false\r\n    const hasUploadedFiles = Object.keys(uploadedFiles).length > 0\r\n    const isInputRequired = required && !hasUploadedFiles\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        pathToFolder = firebase.storage()\r\n        if (privateUpload) {\r\n            pathToFolder = pathToFolder.ref(\"private\")\r\n        } else {\r\n            pathToFolder = pathToFolder.ref(\"public\")\r\n        }\r\n        pathToFolder = pathToFolder.child(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (value && Object.keys(value).length > 0) {\r\n            console.log(\"value\", value)\r\n            const parsed = JSON.parse(value)\r\n            setParsedValue(parsed)\r\n            Object.keys(parsed).forEach(filename => {\r\n                getDownloadUrl(parsed[filename])\r\n                    .then(url => setUploadedFiles((prevState: any) => ({\r\n                        ...prevState,\r\n                        [filename]: {url: url, status: \"complete\"}\r\n                    })))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        await upload([...event.target.files], pathToFolder, setUploadedFiles, setFileLinks, multipleSelect)\r\n        event.target.value = null;\r\n    };\r\n\r\n    const _onBlur = () => props.onBlur(id, uploadedFiles);\r\n    const _onFocus = () => props.onFocus(id, uploadedFiles);\r\n\r\n    const getDownloadUrl = (path: string) => {\r\n        return firebase.storage().ref(path).getDownloadURL()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const updateFormResponses = async () => {\r\n            try {\r\n                let stringify = \"\";\r\n                if (multipleSelect) {\r\n                    const parsed = JSON.parse(value);\r\n                    const allFiles = {...parsed, ...fileLinks};\r\n                    stringify = JSON.stringify(allFiles);\r\n                } else {\r\n                    stringify = JSON.stringify(fileLinks);\r\n                }\r\n                await props.onChange(stringify);\r\n            } catch (error) {\r\n                const stringify = JSON.stringify(fileLinks)\r\n                console.error(error)\r\n                await props.onChange(stringify)\r\n            }\r\n        }\r\n\r\n        if (fileLinks && Object.keys(fileLinks).length > 0) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            updateFormResponses().then(() => _onBlur())\r\n        }\r\n    }, [fileLinks])\r\n\r\n    const deleteFile = async (filename: string) => {\r\n        const parsed = parsedValue\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            await props.onChange(stringify)\r\n            _onBlur()\r\n        }\r\n\r\n        const links = {...fileLinks}\r\n        if (filename in links) {\r\n            delete links[filename]\r\n            setFileLinks(links)\r\n        }\r\n\r\n        const uploaded = {...uploadedFiles}\r\n        if (filename in uploaded) {\r\n            delete uploaded[filename]\r\n            setUploadedFiles(uploaded)\r\n        }\r\n        console.log(\"DELETE LOG\", uploaded)\r\n    };\r\n\r\n    const handleFileClick = async (filename: string) => {\r\n        const parsed = parsedValue;\r\n        console.log(\"FILE CLICK VALUE\", parsed)\r\n        _onBlur()\r\n        if (filename in parsed) {\r\n            const path = parsed[filename];\r\n            console.log(path)\r\n            const metadata = await firebase.storage().ref().child(path).getMetadata()\r\n            const type = metadata.contentType.split(\"/\")[0]\r\n            console.log(\"FILE TYPE\", type)\r\n            switch (type) {\r\n                case \"image\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsImageOpen(true);\r\n                    break;\r\n                case \"video\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsVideoOpen(true);\r\n                    break;\r\n                default:\r\n                    window.open(uploadedFiles[filename].url, '_blank');\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeViewer = () => {\r\n        setCurrentFile(\"\")\r\n        setFileType(\"\");\r\n        setIsImageOpen(false);\r\n        setIsVideoOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isImageOpen && <ImageViewer\r\n                src={[currentFile]}\r\n                disableScroll={false}\r\n                backgroundStyle={{\r\n                    backgroundColor: \"rgba(0,0,0,0.8)\"\r\n                }}\r\n                closeOnClickOutside={true}\r\n                onClose={closeViewer}\r\n            />}\r\n            <Dialog\r\n                open={isVideoOpen}\r\n                onClose={closeViewer}\r\n                fullWidth={true}\r\n            >\r\n                <video height=\"360px\" controls>\r\n                    <source src={currentFile} type={fileType}/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </Dialog>\r\n\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} required={isInputRequired} multiple={multipleSelect} type=\"file\"\r\n                   onChange={handleChange} onBlur={_onBlur} onFocus={_onFocus}/>\r\n\r\n            {Object.keys(uploadedFiles).map((filename, i) =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                        <p>{filename}</p>\r\n                        {uploadedFiles[filename].status === 'complete' &&\r\n                        <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                            <button\r\n                                onClick={() => handleFileClick(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-success\"\r\n                            >\r\n                                посмотреть файл\r\n                            </button>\r\n                            {!disabled &&\r\n                            <button\r\n                                onClick={() => deleteFile(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-danger\"\r\n                            >\r\n                                удалить\r\n                            </button>}\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    {uploadedFiles[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={uploadedFiles[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import axios from \"./Axios\";\r\nimport {campaignsUrl, notificationsUrl, taskstagesUrl, tasksUrl} from \"../config/Urls\";\r\nimport Axios from \"./Axios\";\r\n\r\nexport const IS_PAGINATION_ON = false\r\n\r\n\r\n// Pagination Functions\r\nexport const paginatedDataHandler = (\r\n    data: any,\r\n    setDataFunction: (res: any) => void,\r\n    setCountFunction: (count: number) => void,\r\n) => {\r\n    const {results, count} = data;\r\n    const numOfPages = Math.ceil(count / 10)\r\n    console.log(\"numOfPages\", numOfPages)\r\n    console.log(\"results\", results)\r\n    setDataFunction(results)\r\n    setCountFunction(numOfPages)\r\n}\r\n\r\nconst createPaginationURL = (request: string, page?: number) => {\r\n    if (page && page > 0) {\r\n        return `${request}&limit=10&offset=${(page - 1) * 10}`\r\n    } else {\r\n        return request\r\n    }\r\n}\r\n\r\n// Date Functions\r\nexport const formatDateString = (date: string) => {\r\n    const d = new Date(date)\r\n    const year = d.getFullYear()\r\n    const month = addZeroesToDate(d.getMonth() + 1)\r\n    const day = addZeroesToDate(d.getDate())\r\n    const hours = addZeroesToDate(d.getHours())\r\n    const minutes = addZeroesToDate(d.getMinutes())\r\n    const seconds = addZeroesToDate(d.getSeconds())\r\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`\r\n}\r\n\r\nconst addZeroesToDate = (date: number) => {\r\n    return date < 10 ? '0' + date : date\r\n}\r\n\r\n// Tab function\r\nexport const a11yProps = (index: any) => ({\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n});\r\n\r\n// Campaigns Functions\r\nexport const getCampaigns = () => {\r\n    return axios.get(campaignsUrl)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getUserCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_campaigns/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"user_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getSelectableCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_selectable/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"selectable_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const requestCampaignJoin = (id: string | number) => {\r\n    return axios.post(campaignsUrl + id + '/join_campaign/')\r\n}\r\n\r\nexport const requestCampaignInfo = (id: string | number) => {\r\n    return axios.get(campaignsUrl + id + '/')\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\n// TaskCard Functions\r\nexport const requestTaskCreation = (id: string | number) => {\r\n    return axios.post(taskstagesUrl + id + '/create_task/')\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const requestTaskAssignment = (id: string | number) => {\r\n    return axios.post(tasksUrl + id + '/request_assignment/')\r\n}\r\n\r\n\r\n// TaskMenu Functions\r\nexport const getSelectableTasks = (campaignId: string | number, page?: number) => {\r\n    console.log(page)\r\n    const url = createPaginationURL(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}`, page)\r\n    return axios.get(url).then(res => {\r\n        console.log(\"getSelectableTasks\", res.data)\r\n        return res.data;\r\n    })\r\n};\r\n\r\nexport const getCompleteTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${true}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getCompleteTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getOpenTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${false}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getOpenTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getCreatableTasks = (campaignId: string | number) => {\r\n    return axios.get(`${taskstagesUrl}user_relevant/?chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\n\r\n// Task Functions\r\nexport const getPreviousTasks = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/list_displayed_previous/`)\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const getTask = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/`).then((res: any) => res.data)\r\n}\r\n\r\n\r\n// Notifications Functions\r\nexport const getUserNotifications = (campaignId: string | number, viewed: boolean, importance?: number, page?: number) => {\r\n    console.log(page)\r\n    const url = createPaginationURL(`${notificationsUrl}list_user_notifications/?campaign=${campaignId}&viewed=${viewed}`, page)\r\n    console.log(\"IMPORTANCE\", importance)\r\n    if (importance === 0) {\r\n        return axios.get(`${url}&importance=${importance}`)\r\n            .then(res => res.data)\r\n    } else {\r\n        return axios.get(url)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const getNotificationContent = (id: string | number) => {\r\n    return axios.get(`${notificationsUrl + id}/`).then(res => res.data)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {WidgetProps} from \"@rjsf/core\";\r\nimport axios from \"axios\";\r\n\r\nconst AutoCompleteWidget = (props: WidgetProps) => {\r\n    const {\r\n        id,\r\n        placeholder,\r\n        required,\r\n        readonly,\r\n        disabled,\r\n        label,\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        onFocus,\r\n        autofocus,\r\n        options,\r\n        schema,\r\n        rawErrors = []\r\n    } = props;\r\n\r\n    const searchField = options.searchField ?? 'search'\r\n    const responseField = options.responseField ?? 'text'\r\n    const params = options?.params ?? ''\r\n\r\n    const [examples, setExamples] = useState<string[]>([])\r\n\r\n    const updateExamples = () => {\r\n        if (options.webhook) {\r\n            const url = `${options.webhook}?${searchField}=${value + params}`\r\n            axios.get(url).then(res => res.data).then(res => setExamples(res.results)).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const _onChange = ({\r\n                           target: {value},\r\n                       }: React.ChangeEvent<HTMLInputElement>) => {\r\n        updateExamples()\r\n        return onChange(value === \"\" ? options.emptyValue : value)\r\n    };\r\n    const _onBlur = ({target: {value}}: React.FocusEvent<HTMLInputElement>) =>\r\n        onBlur(id, value);\r\n    const _onFocus = ({\r\n                          target: {value},\r\n                      }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n    const inputType = (schema.type) === 'string' ? 'text' : `${schema.type}`\r\n\r\n    return (\r\n        <Form.Group className=\"mb-0\">\r\n            <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                {label || schema.title}\r\n                {(label || schema.title) && required ? \"*\" : null}\r\n            </Form.Label>\r\n            <Form.Control\r\n                id={id}\r\n                placeholder={placeholder}\r\n                autoFocus={autofocus}\r\n                required={required}\r\n                disabled={disabled}\r\n                readOnly={readonly}\r\n                className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n                list={`examples_${id}`}\r\n                type={inputType}\r\n                value={value || value === 0 ? value : \"\"}\r\n                onChange={_onChange}\r\n                onBlur={_onBlur}\r\n                onFocus={_onFocus}\r\n            />\r\n            {examples && examples.length > 0 ? (\r\n                <datalist id={`examples_${id}`}>\r\n                    {(examples as string[])\r\n                        .map((example: any, index) => {\r\n                            return <option key={`${example[responseField as string]}_${index}`} value={example[responseField as string]}/>;\r\n                        })}\r\n                </datalist>\r\n            ) : null}\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst RadioWidget = ({\r\n  id,\r\n  schema,\r\n  options,\r\n  value,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  label,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled } = options;\r\n\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  const inline = Boolean(options && options.inline);\r\n\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label className=\"d-block\">\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      {(enumOptions as any).map((option: any, i: number) => {\r\n        const itemDisabled =\r\n          Array.isArray(enumDisabled) &&\r\n          enumDisabled.indexOf(option.value) !== -1;\r\n        const checked = option.value == value;\r\n\r\n        const radio = (\r\n          <Form.Check\r\n            inline={inline}\r\n            label={option.label}\r\n            id={`${id}_${option.label}`}\r\n            key={i}\r\n            name={id}\r\n            type=\"radio\"\r\n            disabled={disabled || itemDisabled || readonly}\r\n            checked={checked}\r\n            required={required}\r\n            value={option.value}\r\n            onChange={_onChange}\r\n            onBlur={_onBlur}\r\n            onFocus={_onFocus}\r\n          />\r\n        );\r\n        return radio;\r\n      })}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default RadioWidget;","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Prompt, useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {getPreviousTasks, getTask} from \"../../util/Util\";\r\nimport AutoCompleteWidget from \"../custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"../custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [editorData, setEditorData] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n    const [ready, setReady] = useState(false)\r\n    const [changeCount, setChangeCount] = useState(0)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget,\r\n        autocomplete: AutoCompleteWidget,\r\n        RadioWidget: FixedRadioWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            let task = await getTask(id)\r\n            let stage = task.stage\r\n\r\n            console.log(task)\r\n\r\n            if (stage && stage.rich_text) {\r\n                setEditorData(stage.rich_text)\r\n            }\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n            let parsed_ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n\r\n            const previousTasks = await getPreviousTasks(id).then(res => res.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            })))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n            setReady(true)\r\n        }\r\n        if (id && currentUser) {\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n            .catch((err) => {\r\n                setLoader(false)\r\n                history.push(path)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        // const data = {responses: e.formData}\r\n        // if (changeCount === 5) {\r\n        //     axios.patch(tasksUrl + id + '/', data).catch((err) => {\r\n        //         alert(\"Изменения не доступны.\")\r\n        //         history.push(path)\r\n        //     })\r\n        //     setChangeCount(0)\r\n        //     console.log(\"SEND CHANGE\")\r\n        // } else {\r\n        //     setChangeCount(changeCount + 1)\r\n        // }\r\n    }\r\n\r\n    const handleBlur = () => {\r\n        const data = {responses: formResponses}\r\n        console.log(\"Saving data\", data)\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .catch((err) => {\r\n                alert(\"Изменения не доступны.\")\r\n                history.push(path)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Prompt\r\n                message={(location, action) => {\r\n                    console.log(\"Backing up...\")\r\n                    const data = {responses: formResponses}\r\n                    if (!complete) {\r\n                        axios.patch(tasksUrl + id + '/', data).then(() => console.log(\"Data Saved\"))\r\n                    }\r\n                    return true\r\n                }}\r\n            />\r\n\r\n            {editorData !== \"\" && <div style={{paddingBottom: 20}}>\r\n                <TextViewer data={editorData}/>\r\n            </div>}\r\n\r\n            {prevTasks.length > 0 &&\r\n            <Grid>\r\n                {prevTasks.map((task: any, i: number) =>\r\n                    <Form\r\n                        key={`prev_task_${i}`}\r\n                        schema={task.json_schema ?? {}}\r\n                        uiSchema={task.ui_schema ?? {}}\r\n                        formData={task.responses ?? {}}\r\n                        widgets={widgets}\r\n                        disabled={true}\r\n                        children={\" \"}\r\n                    />\r\n                )}\r\n            </Grid>\r\n            }\r\n            <Grid>\r\n                <Form\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formResponses}\r\n                    formContext={dataForStoragePath}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete || loader || !ready}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                    {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                </Form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import * as React from 'react';\r\nimport {styled, useTheme, Theme, CSSObject} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport {projectName} from \"../../config/Config\";\r\nimport {signInWithGoogle, signOut} from \"../../util/Firebase\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {getUserCampaigns} from \"../../util/Util\";\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst openedMixin = (theme: Theme): CSSObject => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme: Theme): CSSObject => ({\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: `calc(${theme.spacing(7)} + 1px)`,\r\n    },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({theme, open}) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\r\n    ({theme, open}) => ({\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        boxSizing: 'border-box',\r\n        ...(open && {\r\n            ...openedMixin(theme),\r\n            '& .MuiDrawer-paper': openedMixin(theme),\r\n        }),\r\n        ...(!open && {\r\n            ...closedMixin(theme),\r\n            '& .MuiDrawer-paper': closedMixin(theme),\r\n        }),\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const redirect = (page?: string) => {\r\n        if (page) {\r\n            history.push(`/campaign/${campaignId}/${page}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n\r\n    }\r\n\r\n    const DrawerItems = [\r\n        {page: \"tasks\", title: \"Задания\", icon: <AssignmentIcon/>},\r\n        {page: \"notifications\", title: \"Уведомления\", icon: <NotificationsIcon/>}\r\n    ]\r\n\r\n\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" open={open}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        sx={{\r\n                            marginRight: '36px',\r\n                            ...(open && {display: 'none'}),\r\n                        }}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{cursor: \"pointer\", flexGrow: 1}}\r\n                                onClick={() => redirect()}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\" open={open}>\r\n                <DrawerHeader>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </DrawerHeader>\r\n                <Divider/>\r\n                <List>\r\n                    {DrawerItems.map(item => (\r\n                        <ListItem button key={item.page} onClick={() => redirect(item.page)}>\r\n                            <ListItemIcon>\r\n                                {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={item.title}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 0}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {AppBar, Box, Button, Toolbar, Typography} from \"@mui/material\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{flexGrow: 1}}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 3}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {CardParams} from \"../../util/Types\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ParentCard = (props: CardParams) => {\r\n    const {id, name, description, campaign} = props.data;\r\n    const {onCardButtonClick, openCampaignInfo, selectable} = props;\r\n\r\n    const handleOpen = () => {\r\n        onCardButtonClick(id)\r\n    }\r\n\r\n    const redirectToInfoPage = () => {\r\n        if (openCampaignInfo) {\r\n            openCampaignInfo(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ width: 300 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} {campaign && `Campaign: ${campaign}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {selectable ?\r\n                    <Button size=\"small\" onClick={redirectToInfoPage}>Подробнее</Button>\r\n                    :\r\n                    <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ParentCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport Card from \"./CampaignCard\";\r\nimport {CampaignParams} from \"../../util/Types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getSelectableCampaigns, getUserCampaigns} from \"../../util/Util\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [userCampaigns, setUserCampaigns] = useState<CampaignParams[]>([])\r\n    const [selectableCampaigns, setSelectableCampaigns] = useState<CampaignParams[]>([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getUserCampaigns().then(res => setUserCampaigns(res))\r\n        getSelectableCampaigns().then(res => setSelectableCampaigns(res))\r\n\r\n    }, [])\r\n\r\n    const openCampaignInfo = (id: string | number) => {\r\n        history.push(`/campaign/about/${id}`)\r\n    }\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            {userCampaigns && userCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Мои кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {userCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={false}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            {selectableCampaigns && selectableCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Доступные кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {selectableCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={true}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {Box, Grid, Tab, Tabs} from \"@mui/material\";\r\nimport {a11yProps} from \"../../util/Util\";\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n            <Tabs value={value} onChange={handleChange} centered variant={\"fullWidth\"}>\r\n                <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n            </Tabs>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {requestTaskAssignment, requestTaskCreation} from \"../../util/Util\";\r\nimport {CardProps} from \"../../util/Types\";\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const {id, complete, name, description, creatable, selectable, integrated} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        if (integrated) {\r\n            history.push(`${history.location.pathname}/${id}/integrated`)\r\n        } else {\r\n            history.push(`${history.location.pathname}/${id}`)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        requestTaskCreation(id)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n            .catch(err => alert(err))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Открыть</Button>\r\n        } else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Создать</Button>\r\n        } else {\r\n            return <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{width: 300}}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"span\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"subtitle2\" component=\"span\">\r\n                    {id && !creatable ? `ID: ${id}` : <br/>}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport AutoCompleteWidget from \"../custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"../custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst QuickTaskContent = (props: { id: string, taskData: any, isAssigned: boolean, integrated?: boolean, refreshTasks?: () => void }) => {\r\n    const {id, taskData, isAssigned, integrated, refreshTasks} = props;\r\n    let {campaignId} = useParams<RouterParams>();\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget,\r\n        autocomplete: AutoCompleteWidget,\r\n        RadioWidget: FixedRadioWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            const task = taskData\r\n            const stage = task.stage\r\n\r\n            console.log(task)\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            const previousTasks = task.displayed_prev_tasks?.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            }))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (taskData && currentUser) {\r\n            setData()\r\n        }\r\n    }, [taskData, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => refreshTasks && refreshTasks())\r\n            .catch(error => {\r\n                alert(error)\r\n                setLoader(false)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => window.location.reload())\r\n            .catch(error => alert(error))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid direction='row' container spacing={1}>\r\n                {prevTasks?.length > 0 &&\r\n                <Grid container item sm={6} xs={12} sx={{display: 'block'}}>\r\n                    {prevTasks.map((task: any, i: number) =>\r\n                        <Form\r\n                            key={`prev_task_${i}`}\r\n                            schema={task.json_schema ?? {}}\r\n                            uiSchema={task.ui_schema ?? {}}\r\n                            formData={task.responses ?? {}}\r\n                            widgets={widgets}\r\n                            disabled={true}\r\n                            children={\" \"}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                }\r\n                <Grid container item sm={prevTasks?.length > 0 ? 6 : 12} xs={12} sx={{display: 'block'}}>\r\n                    <Form\r\n                        schema={schema ?? {}}\r\n                        uiSchema={uiSchema ?? {}}\r\n                        formData={formResponses ?? {}}\r\n                        formContext={dataForStoragePath}\r\n                        liveOmit={true}\r\n                        omitExtraData={true}\r\n                        widgets={widgets}\r\n                        disabled={complete || !isAssigned}\r\n                        onChange={handleChange}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {integrated ? \" \" :\r\n                            <Box display={\"flex\"}>\r\n                                <Button type=\"submit\" disabled={complete || !isAssigned}>Submit</Button>\r\n                                {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                            </Box>}\r\n                        {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                    </Form>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default QuickTaskContent\r\n","import React, {useEffect, useState} from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton, {IconButtonProps} from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {QuickTaskProps} from \"../../util/Types\";\r\nimport QuickTaskContent from \"./QuckTaskContent\";\r\nimport {Button, Stack} from \"@mui/material\";\r\nimport {requestTaskAssignment} from \"../../util/Util\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n    expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n    const {expand, ...other} = props;\r\n    return <IconButton {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nconst QuickTask = (props: QuickTaskProps) => {\r\n    const {\r\n        id,\r\n        name,\r\n        creatable,\r\n        task,\r\n        expand,\r\n        refreshTasks,\r\n        integrated,\r\n        handleAction,\r\n        excluded\r\n    } = props;\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [isAssigned, setAssigned] = useState(integrated ?? false);\r\n\r\n    useEffect(() => {\r\n        setExpanded(expand)\r\n    }, [expand])\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => setAssigned(true))\r\n            .catch(err => {\r\n                alert(err)\r\n                if (refreshTasks) {\r\n                    refreshTasks()\r\n                }\r\n            })\r\n    }\r\n\r\n    const isDisabled = () => {\r\n        if (integrated) {\r\n            if (excluded) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        } else {\r\n            return isAssigned\r\n        }\r\n    }\r\n\r\n    const handleActionClick = () => {\r\n        if (id && handleAction && excluded !== undefined) {\r\n            handleAction(parseInt(id), excluded)\r\n        }\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (integrated) {\r\n            // return <Button size={\"small\"} variant={\"outlined\"}\r\n            //                sx={{borderRadius: \"5em\"}}\r\n            //                hidden={!expanded}\r\n            //                onClick={handleActionClick}>\r\n            //     {excluded ? \"Include\" : \"Exclude\"}\r\n            // </Button>\r\n        } else {\r\n            return <Button size={\"small\"} variant={isAssigned ? \"text\" : \"outlined\"} disabled={isAssigned}\r\n                           sx={{borderRadius: \"5em\"}}\r\n                           onClick={handleSelectable}>\r\n                {isAssigned ? <DoneIcon color={\"primary\"}/> : \"Get\"}\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                action={\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                        {returnButton()}\r\n                        <ExpandMore\r\n                            expand={expanded}\r\n                            onClick={handleExpandClick}\r\n                            disabled={creatable}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon/>\r\n                        </ExpandMore>\r\n                    </Stack>\r\n                }\r\n                sx={{py: 1, px: 2, background: excluded ? \"lightgrey\" : \"\"}}\r\n                title={name}\r\n                subheader={`ID: ${id}`}\r\n                titleTypographyProps={{variant: \"h6\"}}\r\n                subheaderTypographyProps={{variant: \"caption\"}}\r\n            />\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <QuickTaskContent id={id} taskData={task} integrated={integrated} isAssigned={isDisabled()} refreshTasks={refreshTasks}/>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default QuickTask\r\n","import React, {useState} from \"react\";\r\nimport {Button, Grid, TextField} from \"@mui/material\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport QuickTask from \"./QuickTask\";\r\nimport Axios from \"../../util/Axios\";\r\n\r\n\r\ntype TaskListProps = {\r\n    complete?: boolean,\r\n    selectable?: boolean,\r\n    creatable?: boolean,\r\n    tasks: any[],\r\n    refreshTasks?: () => void\r\n}\r\n\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {complete, selectable, tasks, creatable, refreshTasks} = props;\r\n    const [expandAll, setExpandAll] = useState(false)\r\n\r\n    const listTasks = () => {\r\n        return tasks.map((task: any) => {\r\n                if (creatable) {\r\n                    const id = task.id\r\n                    const name = task.name\r\n                    const description = task.description\r\n                    return (\r\n                        <Grid item key={task.id} sx={{p: 1}}>\r\n                            <TaskCard\r\n                                id={id}\r\n                                name={name}\r\n                                description={description}\r\n                                complete={complete}\r\n                                selectable={selectable}\r\n                                creatable={creatable}\r\n                                integrated={false}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                } else {\r\n                    const id = task.id.toString()\r\n                    const name = task.stage.name\r\n                    const description = task.stage.description\r\n                    const integrated = !!task.integrator_group\r\n\r\n                    if (selectable) {\r\n                        if (integrated) {\r\n                            return (\r\n                                <Grid item key={task.id} style={{padding: 10}}>\r\n                                    <TaskCard\r\n                                        id={id}\r\n                                        name={name}\r\n                                        description={description}\r\n                                        complete={complete}\r\n                                        selectable={selectable}\r\n                                        creatable={creatable}\r\n                                        integrated={integrated}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Grid item key={task.id} sx={{p: 1, width: \"100%\"}}>\r\n                                    <QuickTask\r\n                                        id={id}\r\n                                        name={name}\r\n                                        description={description}\r\n                                        complete={complete}\r\n                                        selectable={selectable}\r\n                                        creatable={creatable}\r\n                                        task={task}\r\n                                        expand={expandAll}\r\n                                        refreshTasks={refreshTasks}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    } else {\r\n                        return (\r\n                            <Grid item key={task.id} style={{padding: 10}}>\r\n                                <TaskCard\r\n                                    id={id}\r\n                                    name={name}\r\n                                    description={description}\r\n                                    complete={complete}\r\n                                    selectable={selectable}\r\n                                    creatable={creatable}\r\n                                    integrated={integrated}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleExpand = () => {\r\n        setExpandAll(!expandAll)\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={creatable ? \"row\" : \"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={creatable ? \"flex-start\" : \"center\"}\r\n        >\r\n            {selectable && <Button variant={\"contained\"} onClick={handleExpand}>\r\n                {expandAll ? \"Свернуть все\" : \"Развернуть все\"}\r\n            </Button>}\r\n            {listTasks()}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useEffect, useState} from 'react';\r\nimport {a11yProps, formatDateString, getUserNotifications, paginatedDataHandler} from \"../../util/Util\";\r\nimport {Box, Card, CardContent, Grid, Pagination, Tab, Tabs, Typography, useMediaQuery} from \"@mui/material\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\n\r\n\r\nconst Notifications = ({importance, onlyNew}: { importance?: number, onlyNew?: boolean }) => {\r\n    const [viewedNotifications, setViewedNotifications] = useState<any[]>([]);\r\n    const [notViewedNotifications, setNotViewedNotifications] = useState<any[]>([]);\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const matches = useMediaQuery('(min-width:600px)');\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        if (tab === 0) {\r\n            getUserNotifications(campaignId, false, importance).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n        } else if (tab === 1) {\r\n            getUserNotifications(campaignId, true, importance).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n        }\r\n        setPage(1);\r\n    }, [tab])\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        console.log(tab)\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getUserNotifications(campaignId, false, importance, value).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n            } else if (tab === 1) {\r\n                getUserNotifications(campaignId, true, importance, value).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n\r\n    const openMessage = (id: number) => {\r\n        history.push(`notifications/${id}`)\r\n    }\r\n\r\n    return (\r\n        onlyNew ?\r\n            <div>\r\n                {notViewedNotifications.map(message =>\r\n                    <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                        <Card onClick={() => openMessage(message.id)}\r\n                              sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">\r\n                                    {message.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    {formatDateString(message.created_at)}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n            </div>\r\n            :\r\n            <div>\r\n                <Typography align={\"center\"} variant={\"h5\"} p={2}>Уведомления</Typography>\r\n                <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n                    <Tabs value={tab} onChange={handleTabChange} centered variant={\"fullWidth\"}>\r\n                        <Tab label=\"Непрочитанные\" {...a11yProps(0)} />\r\n                        <Tab label=\"Прочитанные\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                    <TabPanel value={tab} index={0}>\r\n                        {notViewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                    <TabPanel value={tab} index={1}>\r\n                        {viewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                </Box>\r\n                {totalPages > 1 && <Box p={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                    <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                showLastButton/>\r\n                </Box>}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Notifications","import React, {useEffect, useState} from \"react\";\r\nimport Axios from \"../../util/Axios\";\r\nimport {chainsUrl, taskstagesUrl} from \"../../config/Urls\";\r\nimport {Box, Button, FormControl, FormGroup, InputLabel, MenuItem, Select, SelectChangeEvent} from \"@mui/material\";\r\nimport {Form} from \"@rjsf/bootstrap-4\";\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport AutoCompleteWidget from \"../custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"../custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\n\r\nconst TaskFilter = (props: { campaign: string }) => {\r\n\r\n    const {campaign} = props;\r\n\r\n    const [chainId, setChainId] = useState(\"\")\r\n    const [stageId, setStageId] = useState(\"\")\r\n    const [formStageId, setFormStageId] = useState(\"\")\r\n    const [chains, setChains] = useState([])\r\n    const [stages, setStages] = useState([])\r\n    const [jsonSchema, setJsonSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget,\r\n        autocomplete: AutoCompleteWidget,\r\n        RadioWidget: FixedRadioWidget\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const savedChain = localStorage.getItem(\"selectable_filter_chain\");\r\n    //     const savedStage = localStorage.getItem(\"selectable_filter_stage\");\r\n    //     if (savedChain) {\r\n    //         setChainId(savedChain)\r\n    //     }\r\n    //     if (savedStage) {\r\n    //         setStageId(savedStage)\r\n    //     }\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${chainsUrl}?campaign=${campaign}`)\r\n            .then(res => res.data)\r\n            .then(res => setChains(res.results))\r\n            .then(() => {\r\n                if (!chainId) {\r\n                    const savedChain = localStorage.getItem(\"selectable_filter_chain\");\r\n                    if (savedChain) {\r\n                        setChainId(savedChain)\r\n                    }\r\n                }\r\n            })\r\n    }, [campaign])\r\n\r\n    useEffect(() => {\r\n        if (chainId && chains.length > 0) {\r\n            Axios.get(`${taskstagesUrl}?chain=${chainId}&chain__campaign=${campaign}`)\r\n                .then(res => res.data)\r\n                .then(res => setStages(res.results))\r\n                .then(() => {\r\n                    if (!formStageId) {\r\n                        const savedStage = localStorage.getItem(\"selectable_filter_stage\");\r\n                        const savedFormStage = localStorage.getItem(\"selectable_filter_form_stage\");\r\n                        if (savedStage) {\r\n                            setStageId(savedStage)\r\n                        }\r\n                        if (savedFormStage) {\r\n                            setFormStageId(savedFormStage)\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }, [chainId])\r\n\r\n    useEffect(() => {\r\n        console.log(formStageId)\r\n        if (formStageId && stages.length > 0) {\r\n            const stage = stages.filter((item: any) => item.id == formStageId)[0] as any\r\n            console.log(stage)\r\n            if (stage) {\r\n                const schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n                const ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n                setJsonSchema(schema)\r\n                setUiSchema(ui)\r\n                const savedResponses = localStorage.getItem(\"selectable_filter_responses\");\r\n                if (savedResponses) {\r\n                    setFormResponses(JSON.parse(savedResponses))\r\n                }\r\n            }\r\n        }\r\n    }, [formStageId])\r\n\r\n\r\n    const handleChainChange = (event: SelectChangeEvent) => {\r\n        setChainId(event.target.value);\r\n        setStageId(\"\")\r\n        setFormStageId(\"\");\r\n        setFormResponses({})\r\n        setJsonSchema({})\r\n        setUiSchema({})\r\n        localStorage.setItem(\"selectable_filter_chain\", event.target.value);\r\n        localStorage.setItem(\"selectable_filter_stage\", \"\");\r\n        localStorage.setItem(\"selectable_filter_form_stage\", \"\");\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify({}));\r\n    };\r\n\r\n    const handleStageChange = (event: SelectChangeEvent) => {\r\n        setStageId(event.target.value)\r\n        localStorage.setItem(\"selectable_filter_stage\", event.target.value);\r\n    }\r\n\r\n    const handleFormStageChange = (event: SelectChangeEvent) => {\r\n        setFormStageId(event.target.value);\r\n        setFormResponses({})\r\n        localStorage.setItem(\"selectable_filter_form_stage\", event.target.value);\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify({}));\r\n    };\r\n\r\n    const handleFormChange = (e: { formData: object }) => {\r\n        setFormResponses(e.formData)\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify(e.formData));\r\n    }\r\n\r\n    const handleFormSubmit = () => {\r\n\r\n    };\r\n\r\n    return (\r\n        <FormGroup>\r\n            <FormControl sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-chain-filter\">Chain</InputLabel>\r\n                <Select\r\n                    labelId=\"select-chain-label\"\r\n                    id=\"select-chain\"\r\n                    value={chainId}\r\n                    label=\"Chain\"\r\n                    onChange={handleChainChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {chains.map((item: any) => <MenuItem key={`filter_chain_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl disabled={chainId === \"\"} sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-stage-filter\">Stage</InputLabel>\r\n                <Select\r\n                    labelId=\"select-stage-label\"\r\n                    id=\"select-stage\"\r\n                    value={stageId}\r\n                    label=\"Stage\"\r\n                    onChange={handleStageChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {stages.map((item: any) => <MenuItem key={`filter_stage_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl disabled={chainId === \"\"} sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-form-stage-filter\">Form Stage</InputLabel>\r\n                <Select\r\n                    labelId=\"select-stage-label\"\r\n                    id=\"select-stage\"\r\n                    value={formStageId}\r\n                    label=\"Form Stage\"\r\n                    onChange={handleFormStageChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {stages.map((item: any) => <MenuItem key={`filter_form_stage_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <Box sx={{m: 1, minWidth: 120}}>\r\n                <Form\r\n                    schema={jsonSchema}\r\n                    uiSchema={uiSchema}\r\n                    widgets={widgets}\r\n                    formData={formResponses}\r\n                    onChange={handleFormChange}\r\n                    onSubmit={handleFormSubmit}\r\n                />\r\n            </Box>\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport default TaskFilter","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Box, Grid, Pagination} from \"@mui/material\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {\r\n    getCompleteTasks,\r\n    getCreatableTasks,\r\n    getOpenTasks,\r\n    getSelectableTasks,\r\n    paginatedDataHandler\r\n} from \"../../util/Util\";\r\nimport Notifications from \"../notifications/Notifications\";\r\nimport TaskFilter from \"./TaskFilter\";\r\n\r\n\r\ntype RouterParams = { campaignId: string }\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {campaignId} = useParams<RouterParams>();\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [tab, setTab] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n    const [creatableTasks, setCreatableTasks] = useState([])\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n            } else if (tab === 1) {\r\n                getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n            } else if (tab === 2) {\r\n                getSelectableTasks(campaignId, value).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n        refreshTasks();\r\n    };\r\n\r\n    const refreshTasks = () => {\r\n        getSelectableTasks(campaignId).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n        getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n        getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n        getCreatableTasks(campaignId).then(res => setCreatableTasks(res))\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshTasks()\r\n    }, [campaignId]);\r\n\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <Notifications importance={0} onlyNew={true}/>\r\n            <TaskList creatable={true} tasks={creatableTasks}/>\r\n            <SimpleTabs value={tab} handleChange={handleTabChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={tab} index={0}>\r\n                    <TaskList complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                    <TaskList complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={tab} index={2}>\r\n                    <Box pb={2}>\r\n                        <TaskFilter\r\n                            campaign={campaignId}\r\n                        />\r\n                    </Box>\r\n                    <TaskList selectable={true} tasks={selectableTasks} refreshTasks={refreshTasks}/>\r\n                    <Box pb={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                        <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                    showLastButton/>\r\n                    </Box>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {campaignsUrl} from \"../../config/Urls\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {Button, Grid, Typography} from \"@mui/material\";\r\nimport {requestCampaignInfo, requestCampaignJoin} from \"../../util/Util\";\r\n\r\n\r\nconst About = () => {\r\n    const {id}: { id: string } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [richText, setRichText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(campaignsUrl, id)\r\n        requestCampaignInfo(id)\r\n            .then(res => {\r\n                const {richText, name, description} = res;\r\n                if (name) {\r\n                    setName(name)\r\n                }\r\n                if (description) {\r\n                    setDescription(description)\r\n                }\r\n                if (richText) {\r\n                    setRichText(richText)\r\n                }\r\n            })\r\n    }, [id])\r\n\r\n    const joinCampaign = () => {\r\n        requestCampaignJoin(id).then(() => history.push(`/campaign/${id}/tasks`))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Typography variant={\"h3\"} align={\"center\"}>{name}</Typography>\r\n            <Typography variant={\"h6\"} align={\"center\"}>{description}</Typography>\r\n            {richText && <TextViewer data={richText}/>}\r\n            <Grid container justifyContent={\"center\"} style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} onClick={joinCampaign}>Присоединиться / Кошулуу</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {getNotificationContent} from \"../../util/Util\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\n\r\n\r\nconst NotificationContent = () => {\r\n    const {id} = useParams<RouterParams>();\r\n    const [data, setData] = useState<any>({})\r\n\r\n    useEffect(() => {\r\n        getNotificationContent(id).then(res => setData(res))\r\n    }, [id])\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item xs={12} p={1}>\r\n                <Typography align={\"center\"} variant={\"h6\"}>{data.title}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextViewer data={data.text}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NotificationContent","import React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport QuickTask from \"./QuickTask\";\r\nimport {Box, Chip, CircularProgress, Divider, Grid} from \"@mui/material\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport AutoCompleteWidget from \"../custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {getOpenTasks, getTask} from \"../../util/Util\";\r\nimport FixedRadioWidget from \"../custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\nimport IntegratedTaskDialog from \"./IntegratedTaskDialog\";\r\nimport Axios from \"../../util/Axios\";\r\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\r\n\r\n\r\nconst IntegratedTask = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [taskList, setTaskList] = useState<any>([])\r\n    const [taskActionId, setTaskActionId] = useState<number | null>(null)\r\n    const [listOfExcludedTasks, setListOfExcludedTasks] = useState<number[]>([])\r\n\r\n    const [dialogOpen, setDialogOpen] = React.useState(false);\r\n    const [removalReason, setRemovalReason] = useState(\"\")\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n        setRemovalReason(\"\")\r\n        setTaskActionId(null)\r\n    };\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget,\r\n        autocomplete: AutoCompleteWidget,\r\n        RadioWidget: FixedRadioWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            let task = await getTask(id)\r\n            let stage = task.stage\r\n            console.log(\"TASK\", task)\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        const getIntegratedData = () => {\r\n            Axios.get(`${tasksUrl + id}/get_integrated_tasks/`).then(res => setTaskList(res.data))\r\n        }\r\n        if (id && currentUser) {\r\n            getIntegratedData()\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    console.log(\"INTEGRATED LIST\", taskList)\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    const handleActionClick = (taskId: number, excluded: boolean) => {\r\n        setTaskActionId(taskId)\r\n        if (excluded) {\r\n            includeTask(taskId)\r\n        } else {\r\n            handleDialogOpen()\r\n        }\r\n    }\r\n\r\n    const handleRemovalReasonChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRemovalReason(event.target.value)\r\n    }\r\n\r\n    const excludeTask = () => {\r\n        if (taskActionId !== null) {\r\n            const newList = [...listOfExcludedTasks]\r\n            newList.push(taskActionId)\r\n            const parsedList = Array.from(new Set(newList))\r\n            setListOfExcludedTasks(parsedList)\r\n            alert(removalReason)\r\n        }\r\n        handleDialogClose()\r\n    }\r\n\r\n    const includeTask = (taskId: number) => {\r\n        if (taskId !== null) {\r\n            const newList = [...listOfExcludedTasks]\r\n            const index = newList.indexOf(taskId);\r\n            if (index > -1) {\r\n                newList.splice(index, 1);\r\n            }\r\n            const parsedList = Array.from(new Set(newList))\r\n            setListOfExcludedTasks(parsedList)\r\n        }\r\n    }\r\n\r\n    const triggerWebhook = () => {\r\n        Axios.get(`${tasksUrl + id}/trigger_webhook/`).then(res => console.log(res))\r\n    }\r\n\r\n    return (\r\n        <Grid m={2}>\r\n            {/*<IntegratedTaskDialog*/}\r\n            {/*    open={dialogOpen}*/}\r\n            {/*    handleExclude={excludeTask}*/}\r\n            {/*    handleClose={handleDialogClose}*/}\r\n            {/*    handleReasonChange={handleRemovalReasonChange}*/}\r\n            {/*    reason={removalReason}*/}\r\n            {/*/>*/}\r\n            {taskList.map((task: any) =>\r\n                <Grid key={task.id} py={1}>\r\n                    <QuickTask\r\n                        integrated={true}\r\n                        excluded={listOfExcludedTasks.includes(task.id)}\r\n                        task={task}\r\n                        expand={false}\r\n                        id={task.id}\r\n                        name={task.name}\r\n                        handleAction={handleActionClick}\r\n                    />\r\n                </Grid>\r\n            )}\r\n            <Divider sx={{py: 1}}>\r\n                <Chip icon={<ArrowCircleDownIcon />} label=\"Обобщающая форма\" />\r\n            </Divider>\r\n            <Button onClick={triggerWebhook}>Сгенерировать форму</Button>\r\n            <Grid py={1}>\r\n                <Form\r\n                    schema={schema ?? {}}\r\n                    uiSchema={uiSchema ?? {}}\r\n                    formData={formResponses ?? {}}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                </Form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IntegratedTask","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\nimport About from \"./components/campaigns/About\";\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Notifications from \"./components/notifications/Notifications\";\r\nimport NotificationContent from \"./components/notifications/NotificationContent\";\r\nimport IntegratedTask from \"./components/tasks/IntegratedTask\";\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    if (currentUser) {\r\n        const token = localStorage.getItem(\"token\");\r\n        currentUser.getIdToken(false).then((idToken: string) => {\r\n            if (token) {\r\n                if (idToken !== token) {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                localStorage.setItem(\"token\", idToken);\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={\"/campaign/about/:id\"}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id/integrated\">\r\n                                <IntegratedTask/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications\"}>\r\n                                <Notifications/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications/:id\"}>\r\n                                <NotificationContent/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}