{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","util/Auth.js","components/text-editor/TextViewer.tsx","util/Util.tsx","components/custom-widgets/autocomplete/AutoCompleteWidget.tsx","components/custom-widgets/fixed-radio-widget/FixedRadioWidget.tsx","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/QuckTaskContent.tsx","components/tasks/QuickTask.tsx","components/tasks/TaskList.tsx","components/notifications/Notifications.tsx","components/tasks/TaskMenu.tsx","components/campaigns/About.tsx","components/notifications/NotificationContent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","taskstagesUrl","tasksUrl","notificationsUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","returnNewState","prevState","update","multiple","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","filename","name","replace","console","log","snap","child","put","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","ref","getDownloadURL","downloadURL","fullPath","filePath","fileLink","url","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomFileWidget","schema","uiSchema","disabled","required","formContext","id","campaignId","chainId","stageId","userId","taskId","useState","uploadedFiles","setUploadedFiles","fileLinks","currentFile","setCurrentFile","isImageOpen","setIsImageOpen","isVideoOpen","setIsVideoOpen","fileType","setFileType","parsedValue","setParsedValue","privateUpload","private","multipleSelect","hasUploadedFiles","Object","keys","length","isInputRequired","pathToFolder","undefined","useEffect","parsed","JSON","parse","forEach","getDownloadUrl","handleChange","event","target","_onBlur","onBlur","path","updateFormResponses","stringify","allFiles","onChange","deleteFile","links","uploaded","handleFileClick","getMetadata","metadata","type","contentType","split","alert","closeViewer","src","disableScroll","backgroundStyle","backgroundColor","closeOnClickOutside","onClose","Dialog","open","fullWidth","height","controls","className","title","onFocus","i","style","onClick","fontSize","padding","margin","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","TextViewer","data","inline","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","paginatedDataHandler","setDataFunction","setCountFunction","results","count","numOfPages","ceil","createPaginationURL","page","formatDateString","date","d","Date","year","getFullYear","month","addZeroesToDate","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","a11yProps","index","requestTaskAssignment","post","getSelectableTasks","get","res","getCompleteTasks","getOpenTasks","getPreviousTasks","getUserNotifications","viewed","importance","AutoCompleteWidget","placeholder","readonly","label","autofocus","options","rawErrors","searchField","responseField","params","examples","setExamples","updateExamples","webhook","catch","err","inputType","Form","Group","Label","Control","autoFocus","readOnly","list","emptyValue","example","RadioWidget","enumOptions","enumDisabled","_onChange","_onFocus","Boolean","option","itemDisabled","Array","isArray","indexOf","checked","Check","Task","useParams","history","useHistory","useContext","setSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","editorData","setEditorData","loader","setLoader","ready","setReady","widgets","customfile","autocomplete","FixedRadioWidget","task","stage","rich_text","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","responses","previousTasks","setData","message","action","patch","paddingBottom","Grid","formData","liveOmit","omitExtraData","push","e","onSubmit","Button","paddingLeft","CircularProgress","projectName","drawerWidth","openedMixin","theme","transition","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","justifyContent","mixins","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","useTheme","setOpen","redirect","DrawerItems","icon","sx","CssBaseline","position","Toolbar","IconButton","edge","marginRight","noWrap","component","cursor","flexGrow","email","direction","Divider","List","item","ListItem","button","ListItemIcon","ListItemText","primary","p","ParentCard","description","campaign","onCardButtonClick","openCampaignInfo","selectable","Card","CardContent","gutterBottom","CardActions","size","Builder","userCampaigns","setUserCampaigns","selectableCampaigns","setSelectableCampaigns","handleCardRedirect","align","container","TabPanel","other","role","hidden","SimpleTabs","bgcolor","Tabs","centered","Tab","showSelectable","TaskCard","creatable","handleOpen","pathname","handleCreate","requestTaskCreation","handleSelectable","QuickTaskContent","taskData","isAssigned","refreshTasks","displayed_prev_tasks","sm","xs","ExpandMore","expand","transform","shortest","QuickTask","expanded","setExpanded","setAssigned","CardHeader","Stack","borderRadius","py","px","subheader","titleTypographyProps","subheaderTypographyProps","Collapse","in","timeout","unmountOnExit","TaskList","tasks","expandAll","setExpandAll","Notifications","onlyNew","viewedNotifications","setViewedNotifications","notViewedNotifications","setNotViewedNotifications","totalPages","setTotalPages","setPage","tab","setTab","matches","useMediaQuery","openMessage","background","created_at","newValue","Pagination","showFirstButton","showLastButton","TaskMenu","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","creatableTasks","setCreatableTasks","getCreatableTasks","pb","About","setName","setDescription","richText","setRichText","requestCampaignInfo","requestCampaignJoin","NotificationContent","getNotificationContent","text","App","exact","Appbar","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07dd88c1.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\nconst notificationsUrl = \"/api/v1/notifications/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl,\r\n    notificationsUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload())\r\n}\r\n\r\nexport default firebase;","import firebase from '../../../util/Firebase'\r\n\r\nconst returnNewState = (prevState, update, multiple) => {\r\n    if (multiple) {\r\n        if (prevState) {\r\n            return {...prevState, ...update}\r\n        } else {\r\n            return update\r\n        }\r\n    } else {\r\n        return update\r\n    }\r\n}\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks, multiple) => {\r\n    if (storageRef) {\r\n        if (!multiple) {\r\n            setFileBeingUploaded({})\r\n            setFileLinks({})\r\n        }\r\n        await Promise.all(files.map(async file => {\r\n            const filename = file.name.replace(/\\./g, '_').replace(/ /g, '_');\r\n            console.log(filename)\r\n            const snap = storageRef.child(filename).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[filename]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[filename]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        console.log(\"FILE PATH\", snap.snapshot.ref.fullPath)\r\n                        const filePath = snap.snapshot.ref.fullPath\r\n                        const fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[filename]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[filename]: filePath}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    };\r\n}\r\n\r\nexport default upload","import React from 'react'\r\nimport {Box, LinearProgress, Typography} from \"@mui/material\"\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport ImageViewer from 'react-simple-image-viewer';\r\nimport {Dialog} from \"@mui/material\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, disabled, required, formContext, value, id} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [uploadedFiles, setUploadedFiles] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState<any>({})\r\n    const [currentFile, setCurrentFile] = useState(\"\")\r\n    const [isImageOpen, setIsImageOpen] = useState(false);\r\n    const [isVideoOpen, setIsVideoOpen] = useState(false);\r\n    const [fileType, setFileType] = useState(\"\")\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    const privateUpload = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].private ? uiSchema[\"ui:options\"].private : false\r\n    const multipleSelect = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].multiple ? uiSchema[\"ui:options\"].multiple : false\r\n    const hasUploadedFiles = Object.keys(uploadedFiles).length > 0\r\n    const isInputRequired = required && !hasUploadedFiles\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        pathToFolder = firebase.storage()\r\n        if (privateUpload) {\r\n            pathToFolder = pathToFolder.ref(\"private\")\r\n        } else {\r\n            pathToFolder = pathToFolder.ref(\"public\")\r\n        }\r\n        pathToFolder = pathToFolder.child(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (value && Object.keys(value).length > 0) {\r\n            console.log(\"value\", value)\r\n            const parsed = JSON.parse(value)\r\n            setParsedValue(parsed)\r\n            Object.keys(parsed).forEach(filename => {\r\n                getDownloadUrl(parsed[filename])\r\n                    .then(url => setUploadedFiles((prevState: any) => ({\r\n                        ...prevState,\r\n                        [filename]: {url: url, status: \"complete\"}\r\n                    })))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        await upload([...event.target.files], pathToFolder, setUploadedFiles, setFileLinks, multipleSelect)\r\n        event.target.value = null;\r\n    };\r\n\r\n    const _onBlur = () => props.onBlur(id, uploadedFiles);\r\n    const _onFocus = () => props.onFocus(id, uploadedFiles);\r\n\r\n    const getDownloadUrl = (path: string) => {\r\n        return firebase.storage().ref(path).getDownloadURL()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const updateFormResponses = async () => {\r\n            try {\r\n                let stringify = \"\";\r\n                if (multipleSelect) {\r\n                    const parsed = JSON.parse(value);\r\n                    const allFiles = {...parsed, ...fileLinks};\r\n                    stringify = JSON.stringify(allFiles);\r\n                } else {\r\n                    stringify = JSON.stringify(fileLinks);\r\n                }\r\n                await props.onChange(stringify);\r\n            } catch (error) {\r\n                const stringify = JSON.stringify(fileLinks)\r\n                console.error(error)\r\n                await props.onChange(stringify)\r\n            }\r\n        }\r\n\r\n        if (fileLinks && Object.keys(fileLinks).length > 0) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            updateFormResponses().then(() => _onBlur())\r\n        }\r\n    }, [fileLinks])\r\n\r\n    const deleteFile = async (filename: string) => {\r\n        const parsed = parsedValue\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            await props.onChange(stringify)\r\n            _onBlur()\r\n        }\r\n\r\n        const links = {...fileLinks}\r\n        if (filename in links) {\r\n            delete links[filename]\r\n            setFileLinks(links)\r\n        }\r\n\r\n        const uploaded = {...uploadedFiles}\r\n        if (filename in uploaded) {\r\n            delete uploaded[filename]\r\n            setUploadedFiles(uploaded)\r\n        }\r\n        console.log(\"DELETE LOG\", uploaded)\r\n    };\r\n\r\n    const handleFileClick = async (filename: string) => {\r\n        const parsed = parsedValue;\r\n        console.log(\"FILE CLICK VALUE\", parsed)\r\n        _onBlur()\r\n        if (filename in parsed) {\r\n            const path = parsed[filename];\r\n            console.log(path)\r\n            const metadata = await firebase.storage().ref().child(path).getMetadata()\r\n            const type = metadata.contentType.split(\"/\")[0]\r\n            console.log(\"FILE TYPE\", type)\r\n            switch (type) {\r\n                case \"image\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsImageOpen(true);\r\n                    break;\r\n                case \"video\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsVideoOpen(true);\r\n                    break;\r\n                default:\r\n                    // window.open(uploadedFiles[filename].url, '_blank');\r\n                    alert(\"Файл не является фото или видео\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeViewer = () => {\r\n        setCurrentFile(\"\")\r\n        setFileType(\"\");\r\n        setIsImageOpen(false);\r\n        setIsVideoOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isImageOpen && <ImageViewer\r\n                src={[currentFile]}\r\n                disableScroll={false}\r\n                backgroundStyle={{\r\n                    backgroundColor: \"rgba(0,0,0,0.8)\"\r\n                }}\r\n                closeOnClickOutside={true}\r\n                onClose={closeViewer}\r\n            />}\r\n            <Dialog\r\n                open={isVideoOpen}\r\n                onClose={closeViewer}\r\n                fullWidth={true}\r\n            >\r\n                <video height=\"360px\" controls>\r\n                    <source src={currentFile} type={fileType}/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </Dialog>\r\n\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} required={isInputRequired} multiple={multipleSelect} type=\"file\"\r\n                   onChange={handleChange} onBlur={_onBlur} onFocus={_onFocus}/>\r\n\r\n            {Object.keys(uploadedFiles).map((filename, i) =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                        <p>{filename}</p>\r\n                        {uploadedFiles[filename].status === 'complete' &&\r\n                        <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                            <button\r\n                                onClick={() => handleFileClick(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-success\"\r\n                            >\r\n                                посмотреть файл\r\n                            </button>\r\n                            {!disabled &&\r\n                            <button\r\n                                onClick={() => deleteFile(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-danger\"\r\n                            >\r\n                                удалить\r\n                            </button>}\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    {uploadedFiles[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={uploadedFiles[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import axios from \"./Axios\";\r\nimport {campaignsUrl, notificationsUrl, taskstagesUrl, tasksUrl} from \"../config/Urls\";\r\nimport Axios from \"./Axios\";\r\n\r\nexport const IS_PAGINATION_ON = false\r\n\r\n\r\n// Pagination Functions\r\nexport const paginatedDataHandler = (\r\n    data: any,\r\n    setDataFunction: (res: any) => void,\r\n    setCountFunction: (count: number) => void,\r\n) => {\r\n    const {results, count} = data;\r\n    const numOfPages = Math.ceil(count / 10)\r\n    console.log(\"numOfPages\", numOfPages)\r\n    console.log(\"results\", results)\r\n    setDataFunction(results)\r\n    setCountFunction(numOfPages)\r\n}\r\n\r\nconst createPaginationURL = (request: string, page?: number) => {\r\n    if (page && page > 0) {\r\n        return `${request}&limit=10&offset=${(page - 1) * 10}`\r\n    } else {\r\n        return request\r\n    }\r\n}\r\n\r\n// Date Functions\r\nexport const formatDateString = (date: string) => {\r\n    const d = new Date(date)\r\n    const year = d.getFullYear()\r\n    const month = addZeroesToDate(d.getMonth() + 1)\r\n    const day = addZeroesToDate(d.getDate())\r\n    const hours = addZeroesToDate(d.getHours())\r\n    const minutes = addZeroesToDate(d.getMinutes())\r\n    const seconds = addZeroesToDate(d.getSeconds())\r\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`\r\n}\r\n\r\nconst addZeroesToDate = (date: number) => {\r\n    return date < 10 ? '0' + date : date\r\n}\r\n\r\n// Tab function\r\nexport const a11yProps = (index: any) => ({\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n});\r\n\r\n// Campaigns Functions\r\nexport const getCampaigns = () => {\r\n    return axios.get(campaignsUrl)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getUserCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_campaigns/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"user_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getSelectableCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_selectable/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"selectable_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const requestCampaignJoin = (id: string | number) => {\r\n    return axios.post(campaignsUrl + id + '/join_campaign/')\r\n}\r\n\r\nexport const requestCampaignInfo = (id: string | number) => {\r\n    return axios.get(campaignsUrl + id + '/')\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\n// TaskCard Functions\r\nexport const requestTaskCreation = (id: string | number) => {\r\n    return axios.post(taskstagesUrl + id + '/create_task/')\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const requestTaskAssignment = (id: string | number) => {\r\n    return axios.post(tasksUrl + id + '/request_assignment/')\r\n}\r\n\r\n\r\n// TaskMenu Functions\r\nexport const getSelectableTasks = (campaignId: string | number, page?: number) => {\r\n    console.log(page)\r\n    const url = createPaginationURL(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}`, page)\r\n    return axios.get(url).then(res => res.data)\r\n};\r\n\r\nexport const getCompleteTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${true}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getCompleteTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getOpenTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${false}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getOpenTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getCreatableTasks = (campaignId: string | number) => {\r\n    return axios.get(`${taskstagesUrl}user_relevant/?chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\n\r\n// Task Functions\r\nexport const getPreviousTasks = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/list_displayed_previous/`)\r\n        .then(res => res.data)\r\n}\r\n\r\n// Notifications Functions\r\nexport const getUserNotifications = (campaignId: string | number, viewed: boolean, importance?: number, page?: number) => {\r\n    console.log(page)\r\n    const url = createPaginationURL(`${notificationsUrl}list_user_notifications/?campaign=${campaignId}&viewed=${viewed}`, page)\r\n    console.log(\"IMPORTANCE\", importance)\r\n    if (importance === 0) {\r\n        return axios.get(`${url}&importance=${importance}`)\r\n            .then(res => res.data)\r\n    } else {\r\n        return axios.get(url)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const getNotificationContent = (id: string | number) => {\r\n    return axios.get(`${notificationsUrl + id}/`).then(res => res.data)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {WidgetProps} from \"@rjsf/core\";\r\nimport axios from \"axios\";\r\n\r\nconst AutoCompleteWidget = (props: WidgetProps) => {\r\n    const {\r\n        id,\r\n        placeholder,\r\n        required,\r\n        readonly,\r\n        disabled,\r\n        label,\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        onFocus,\r\n        autofocus,\r\n        options,\r\n        schema,\r\n        rawErrors = []\r\n    } = props;\r\n\r\n    const searchField = options.searchField ?? 'search'\r\n    const responseField = options.responseField ?? 'text'\r\n    const params = options?.params ?? ''\r\n\r\n    const [examples, setExamples] = useState<string[]>([])\r\n\r\n    const updateExamples = () => {\r\n        if (options.webhook) {\r\n            const url = `${options.webhook}?${searchField}=${value + params}`\r\n            axios.get(url).then(res => res.data).then(res => setExamples(res.results)).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const _onChange = ({\r\n                           target: {value},\r\n                       }: React.ChangeEvent<HTMLInputElement>) => {\r\n        updateExamples()\r\n        return onChange(value === \"\" ? options.emptyValue : value)\r\n    };\r\n    const _onBlur = ({target: {value}}: React.FocusEvent<HTMLInputElement>) =>\r\n        onBlur(id, value);\r\n    const _onFocus = ({\r\n                          target: {value},\r\n                      }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n    const inputType = (schema.type) === 'string' ? 'text' : `${schema.type}`\r\n\r\n    return (\r\n        <Form.Group className=\"mb-0\">\r\n            <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                {label || schema.title}\r\n                {(label || schema.title) && required ? \"*\" : null}\r\n            </Form.Label>\r\n            <Form.Control\r\n                id={id}\r\n                placeholder={placeholder}\r\n                autoFocus={autofocus}\r\n                required={required}\r\n                disabled={disabled}\r\n                readOnly={readonly}\r\n                className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n                list={`examples_${id}`}\r\n                type={inputType}\r\n                value={value || value === 0 ? value : \"\"}\r\n                onChange={_onChange}\r\n                onBlur={_onBlur}\r\n                onFocus={_onFocus}\r\n            />\r\n            {examples && examples.length > 0 ? (\r\n                <datalist id={`examples_${id}`}>\r\n                    {(examples as string[])\r\n                        .map((example: any, index) => {\r\n                            return <option key={`${example[responseField as string]}_${index}`} value={example[responseField as string]}/>;\r\n                        })}\r\n                </datalist>\r\n            ) : null}\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst RadioWidget = ({\r\n  id,\r\n  schema,\r\n  options,\r\n  value,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  label,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled } = options;\r\n\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  const inline = Boolean(options && options.inline);\r\n\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label className=\"d-block\">\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      {(enumOptions as any).map((option: any, i: number) => {\r\n        const itemDisabled =\r\n          Array.isArray(enumDisabled) &&\r\n          enumDisabled.indexOf(option.value) !== -1;\r\n        const checked = option.value == value;\r\n\r\n        const radio = (\r\n          <Form.Check\r\n            inline={inline}\r\n            label={option.label}\r\n            id={`${id}_${option.label}`}\r\n            key={i}\r\n            name={id}\r\n            type=\"radio\"\r\n            disabled={disabled || itemDisabled || readonly}\r\n            checked={checked}\r\n            required={required}\r\n            value={option.value}\r\n            onChange={_onChange}\r\n            onBlur={_onBlur}\r\n            onFocus={_onFocus}\r\n          />\r\n        );\r\n        return radio;\r\n      })}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default RadioWidget;","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Prompt, useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {getPreviousTasks} from \"../../util/Util\";\r\nimport AutoCompleteWidget from \"../custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"../custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = (props: { id?: string }) => {\r\n    let {id, campaignId} = useParams<RouterParams>();\r\n    if (!id && props.id) {\r\n        id = props.id\r\n    }\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [editorData, setEditorData] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n    const [ready, setReady] = useState(false)\r\n    const [changeCount, setChangeCount] = useState(0)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget,\r\n        autocomplete: AutoCompleteWidget,\r\n        RadioWidget: FixedRadioWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id + '/').then((res: any) => res.data)\r\n        }\r\n        const setData = async () => {\r\n            let task = await getTask()\r\n            let stage = task.stage\r\n\r\n            if (stage && stage.rich_text) {\r\n                setEditorData(stage.rich_text)\r\n            }\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n            let parsed_ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n\r\n            const previousTasks = await getPreviousTasks(id).then(res => res.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            })))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n            setReady(true)\r\n        }\r\n        if (id && currentUser) {\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n            .catch((err) => {\r\n                setLoader(false)\r\n                history.push(path)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        // const data = {responses: e.formData}\r\n        // if (changeCount === 5) {\r\n        //     axios.patch(tasksUrl + id + '/', data).catch((err) => {\r\n        //         alert(\"Изменения не доступны.\")\r\n        //         history.push(path)\r\n        //     })\r\n        //     setChangeCount(0)\r\n        //     console.log(\"SEND CHANGE\")\r\n        // } else {\r\n        //     setChangeCount(changeCount + 1)\r\n        // }\r\n    }\r\n\r\n    const handleBlur = () => {\r\n        const data = {responses: formResponses}\r\n        console.log(\"Saving data\", data)\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .catch((err) => {\r\n                alert(\"Изменения не доступны.\")\r\n                history.push(path)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Prompt\r\n                message={(location, action) => {\r\n                    console.log(\"Backing up...\")\r\n                    const data = {responses: formResponses}\r\n                    axios.patch(tasksUrl + id + '/', data).then(() => console.log(\"Data Saved\"))\r\n                    return true\r\n                }}\r\n            />\r\n\r\n            {editorData !== \"\" && <div style={{paddingBottom: 20}}>\r\n                <TextViewer data={editorData}/>\r\n            </div>}\r\n\r\n            {prevTasks.length > 0 &&\r\n            <Grid>\r\n                {prevTasks.map((task: any, i: number) =>\r\n                    <Form\r\n                        key={`prev_task_${i}`}\r\n                        schema={task.json_schema ?? {}}\r\n                        uiSchema={task.ui_schema ?? {}}\r\n                        formData={task.responses ?? {}}\r\n                        widgets={widgets}\r\n                        disabled={true}\r\n                        children={\" \"}\r\n                    />\r\n                )}\r\n            </Grid>\r\n            }\r\n            <Grid>\r\n                <Form\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formResponses}\r\n                    formContext={dataForStoragePath}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete || loader || !ready}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                    {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                </Form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import * as React from 'react';\r\nimport {styled, useTheme, Theme, CSSObject} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport {projectName} from \"../../config/Config\";\r\nimport {signInWithGoogle, signOut} from \"../../util/Firebase\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {getUserCampaigns} from \"../../util/Util\";\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst openedMixin = (theme: Theme): CSSObject => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme: Theme): CSSObject => ({\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: `calc(${theme.spacing(7)} + 1px)`,\r\n    },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({theme, open}) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\r\n    ({theme, open}) => ({\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        boxSizing: 'border-box',\r\n        ...(open && {\r\n            ...openedMixin(theme),\r\n            '& .MuiDrawer-paper': openedMixin(theme),\r\n        }),\r\n        ...(!open && {\r\n            ...closedMixin(theme),\r\n            '& .MuiDrawer-paper': closedMixin(theme),\r\n        }),\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const redirect = (page?: string) => {\r\n        if (page) {\r\n            history.push(`/campaign/${campaignId}/${page}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n\r\n    }\r\n\r\n    const DrawerItems = [\r\n        {page: \"tasks\", title: \"Задания\", icon: <AssignmentIcon/>},\r\n        {page: \"notifications\", title: \"Уведомления\", icon: <NotificationsIcon/>}\r\n    ]\r\n\r\n\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" open={open}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        sx={{\r\n                            marginRight: '36px',\r\n                            ...(open && {display: 'none'}),\r\n                        }}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{cursor: \"pointer\", flexGrow: 1}}\r\n                                onClick={() => redirect()}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\" open={open}>\r\n                <DrawerHeader>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </DrawerHeader>\r\n                <Divider/>\r\n                <List>\r\n                    {DrawerItems.map(item => (\r\n                        <ListItem button key={item.page} onClick={() => redirect(item.page)}>\r\n                            <ListItemIcon>\r\n                                {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={item.title}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 0}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {AppBar, Box, Button, Toolbar, Typography} from \"@mui/material\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{flexGrow: 1}}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 3}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {CardParams} from \"../../util/Types\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ParentCard = (props: CardParams) => {\r\n    const {id, name, description, campaign} = props.data;\r\n    const {onCardButtonClick, openCampaignInfo, selectable} = props;\r\n\r\n    const handleOpen = () => {\r\n        onCardButtonClick(id)\r\n    }\r\n\r\n    const redirectToInfoPage = () => {\r\n        if (openCampaignInfo) {\r\n            openCampaignInfo(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ width: 300 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} {campaign && `Campaign: ${campaign}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {selectable ?\r\n                    <Button size=\"small\" onClick={redirectToInfoPage}>Подробнее</Button>\r\n                    :\r\n                    <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ParentCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport Card from \"./CampaignCard\";\r\nimport {CampaignParams} from \"../../util/Types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getSelectableCampaigns, getUserCampaigns} from \"../../util/Util\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [userCampaigns, setUserCampaigns] = useState<CampaignParams[]>([])\r\n    const [selectableCampaigns, setSelectableCampaigns] = useState<CampaignParams[]>([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getUserCampaigns().then(res => setUserCampaigns(res))\r\n        getSelectableCampaigns().then(res => setSelectableCampaigns(res))\r\n\r\n    }, [])\r\n\r\n    const openCampaignInfo = (id: string | number) => {\r\n        history.push(`/campaign/about/${id}`)\r\n    }\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            {userCampaigns && userCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Мои кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {userCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={false}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            {selectableCampaigns && selectableCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Доступные кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {selectableCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={true}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {Box, Grid, Tab, Tabs} from \"@mui/material\";\r\nimport {a11yProps} from \"../../util/Util\";\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n            <Tabs value={value} onChange={handleChange} centered variant={\"fullWidth\"}>\r\n                <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n            </Tabs>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {requestTaskAssignment, requestTaskCreation} from \"../../util/Util\";\r\nimport {CardProps} from \"../../util/Types\";\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const {id, complete, name, description, creatable, selectable} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        requestTaskCreation(id)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n            .catch(err => alert(err))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Открыть</Button>\r\n        } else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Создать</Button>\r\n        } else {\r\n            return <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{width: 300}}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"span\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"subtitle2\" component=\"span\">\r\n                    {id && !creatable ? `ID: ${id}` : <br/>}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport AutoCompleteWidget from \"../custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"../custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst QuickTaskContent = (props: { id: string, taskData: any, isAssigned: boolean, refreshTasks?: () => void }) => {\r\n    const {id, taskData, isAssigned, refreshTasks} = props;\r\n    let {campaignId} = useParams<RouterParams>();\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget,\r\n        autocomplete: AutoCompleteWidget,\r\n        RadioWidget: FixedRadioWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            const task = taskData\r\n            const stage = task.stage\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            const previousTasks = task.displayed_prev_tasks.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            }))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (taskData && currentUser) {\r\n            setData()\r\n        }\r\n    }, [taskData, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => refreshTasks && refreshTasks())\r\n            .catch(error => {\r\n                alert(error)\r\n                setLoader(false)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => window.location.reload())\r\n            .catch(error => alert(error))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid direction='row' container spacing={1}>\r\n                {prevTasks.length > 0 &&\r\n                <Grid container item sm={6} xs={12} sx={{display: 'block'}}>\r\n                    {prevTasks.map((task: any, i: number) =>\r\n                        <Form\r\n                            key={`prev_task_${i}`}\r\n                            schema={task.json_schema ?? {}}\r\n                            uiSchema={task.ui_schema ?? {}}\r\n                            formData={task.responses ?? {}}\r\n                            widgets={widgets}\r\n                            disabled={true}\r\n                            children={\" \"}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                }\r\n                <Grid container item sm={prevTasks.length > 0 ? 6 : 12} xs={12} sx={{display: 'block'}}>\r\n                    <Form\r\n                        schema={schema ?? {}}\r\n                        uiSchema={uiSchema ?? {}}\r\n                        formData={formResponses ?? {}}\r\n                        formContext={dataForStoragePath}\r\n                        liveOmit={true}\r\n                        omitExtraData={true}\r\n                        widgets={widgets}\r\n                        disabled={complete || !isAssigned}\r\n                        onChange={handleChange}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <Box display={\"flex\"}>\r\n                            <Button type=\"submit\" disabled={complete || !isAssigned}>Submit</Button>\r\n                            {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                        </Box>\r\n                        {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                    </Form>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default QuickTaskContent\r\n","import React, {useEffect, useState} from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton, {IconButtonProps} from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {QuickTaskProps} from \"../../util/Types\";\r\nimport QuickTaskContent from \"./QuckTaskContent\";\r\nimport {Button, Stack} from \"@mui/material\";\r\nimport {requestTaskAssignment} from \"../../util/Util\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n    expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n    const {expand, ...other} = props;\r\n    return <IconButton {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nconst QuickTask = (props: QuickTaskProps) => {\r\n    const {id, complete, name, description, creatable, selectable, task, expand, refreshTasks} = props;\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [isAssigned, setAssigned] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setExpanded(expand)\r\n    }, [expand])\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => setAssigned(true))\r\n            .catch(err => {\r\n                alert(err)\r\n                if (refreshTasks) {\r\n                    refreshTasks()\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                action={\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                        <Button size={\"small\"} variant={isAssigned ? \"text\" : \"outlined\"} disabled={isAssigned} sx={{borderRadius: \"5em\"}}\r\n                                onClick={handleSelectable}>\r\n                            {isAssigned ?  <DoneIcon color={\"primary\"}/> : \"Get\"}\r\n                        </Button>\r\n                        <ExpandMore\r\n                            expand={expanded}\r\n                            onClick={handleExpandClick}\r\n                            disabled={creatable}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon/>\r\n                        </ExpandMore>\r\n                    </Stack>\r\n                }\r\n                sx={{py: 1, px: 2}}\r\n                title={name}\r\n                subheader={`ID: ${id}`}\r\n                titleTypographyProps={{variant: \"h6\"}}\r\n                subheaderTypographyProps={{variant: \"caption\"}}\r\n            />\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <QuickTaskContent id={id} taskData={task} isAssigned={isAssigned} refreshTasks={refreshTasks}/>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default QuickTask\r\n","import React, {useState} from \"react\";\r\nimport {Button, Grid} from \"@mui/material\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport QuickTask from \"./QuickTask\";\r\n\r\n\r\ntype TaskListProps = {\r\n    complete?: boolean,\r\n    selectable?: boolean,\r\n    creatable?: boolean,\r\n    tasks: any[],\r\n    refreshTasks?: () => void\r\n}\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {complete, selectable, tasks, creatable, refreshTasks} = props;\r\n    const [expandAll, setExpandAll] = useState(false)\r\n\r\n    const listTasks = () => {\r\n        return tasks.map((task: any) => {\r\n                if (creatable) {\r\n                    const id = task.id\r\n                    const name = task.name\r\n                    const description = task.description\r\n                    return (\r\n                        <Grid item key={task.id} sx={{p: 1}}>\r\n                            <TaskCard\r\n                                id={id}\r\n                                name={name}\r\n                                description={description}\r\n                                complete={complete}\r\n                                selectable={selectable}\r\n                                creatable={creatable}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                } else {\r\n                    const id = task.id.toString()\r\n                    const name = task.stage.name\r\n                    const description = task.stage.description\r\n                    if (selectable) {\r\n                        return (\r\n                            <Grid item key={task.id} sx={{p: 1, width: \"100%\"}}>\r\n                                <QuickTask\r\n                                    id={id}\r\n                                    name={name}\r\n                                    description={description}\r\n                                    complete={complete}\r\n                                    selectable={selectable}\r\n                                    creatable={creatable}\r\n                                    task={task}\r\n                                    expand={expandAll}\r\n                                    refreshTasks={refreshTasks}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Grid item key={task.id} style={{padding: 10}}>\r\n                                <TaskCard\r\n                                    id={id}\r\n                                    name={name}\r\n                                    description={description}\r\n                                    complete={complete}\r\n                                    selectable={selectable}\r\n                                    creatable={creatable}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleExpand = () => {\r\n        setExpandAll(!expandAll)\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={creatable ? \"row\" : \"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={creatable ? \"flex-start\" : \"center\"}\r\n        >\r\n            {selectable && <Button variant={\"contained\"} onClick={handleExpand}>\r\n                {expandAll ? \"Свернуть все\" : \"Развернуть все\"}\r\n            </Button>}\r\n            {listTasks()}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useEffect, useState} from 'react';\r\nimport {a11yProps, formatDateString, getUserNotifications, paginatedDataHandler} from \"../../util/Util\";\r\nimport {Box, Card, CardContent, Grid, Pagination, Tab, Tabs, Typography, useMediaQuery} from \"@mui/material\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\n\r\n\r\nconst Notifications = ({importance, onlyNew}: { importance?: number, onlyNew?: boolean }) => {\r\n    const [viewedNotifications, setViewedNotifications] = useState<any[]>([]);\r\n    const [notViewedNotifications, setNotViewedNotifications] = useState<any[]>([]);\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const matches = useMediaQuery('(min-width:600px)');\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        if (tab === 0) {\r\n            getUserNotifications(campaignId, false, importance).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n        } else if (tab === 1) {\r\n            getUserNotifications(campaignId, true, importance).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n        }\r\n        setPage(1);\r\n    }, [tab])\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        console.log(tab)\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getUserNotifications(campaignId, false, importance, value).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n            } else if (tab === 1) {\r\n                getUserNotifications(campaignId, true, importance, value).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n\r\n    const openMessage = (id: number) => {\r\n        history.push(`notifications/${id}`)\r\n    }\r\n\r\n    return (\r\n        onlyNew ?\r\n            <div>\r\n                {notViewedNotifications.map(message =>\r\n                    <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                        <Card onClick={() => openMessage(message.id)}\r\n                              sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">\r\n                                    {message.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    {formatDateString(message.created_at)}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n            </div>\r\n            :\r\n            <div>\r\n                <Typography align={\"center\"} variant={\"h5\"} p={2}>Уведомления</Typography>\r\n                <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n                    <Tabs value={tab} onChange={handleTabChange} centered variant={\"fullWidth\"}>\r\n                        <Tab label=\"Непрочитанные\" {...a11yProps(0)} />\r\n                        <Tab label=\"Прочитанные\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                    <TabPanel value={tab} index={0}>\r\n                        {notViewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                    <TabPanel value={tab} index={1}>\r\n                        {viewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                </Box>\r\n                {totalPages > 1 && <Box p={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                    <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                showLastButton/>\r\n                </Box>}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Notifications","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Box, Grid, Pagination} from \"@mui/material\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {\r\n    getCompleteTasks,\r\n    getCreatableTasks,\r\n    getOpenTasks,\r\n    getSelectableTasks,\r\n    paginatedDataHandler\r\n} from \"../../util/Util\";\r\nimport Notifications from \"../notifications/Notifications\";\r\n\r\n\r\ntype RouterParams = { campaignId: string }\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {campaignId} = useParams<RouterParams>();\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [tab, setTab] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n    const [creatableTasks, setCreatableTasks] = useState([])\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n            } else if (tab === 1) {\r\n                getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n            } else if (tab === 2) {\r\n                getSelectableTasks(campaignId, value).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n    const refreshTasks = () => {\r\n        getSelectableTasks(campaignId).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n        getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n        getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n        getCreatableTasks(campaignId).then(res => setCreatableTasks(res))\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshTasks()\r\n    }, [campaignId]);\r\n\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <Notifications importance={0} onlyNew={true}/>\r\n            <TaskList creatable={true} tasks={creatableTasks}/>\r\n            <SimpleTabs value={tab} handleChange={handleTabChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={tab} index={0}>\r\n                    <TaskList complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                    <TaskList complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={tab} index={2}>\r\n                    <TaskList selectable={true} tasks={selectableTasks} refreshTasks={refreshTasks}/>\r\n                    <Box pb={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                        <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                    showLastButton/>\r\n                    </Box>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {campaignsUrl} from \"../../config/Urls\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {Button, Grid, Typography} from \"@mui/material\";\r\nimport {requestCampaignInfo, requestCampaignJoin} from \"../../util/Util\";\r\n\r\n\r\nconst About = () => {\r\n    const {id}: { id: string } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [richText, setRichText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(campaignsUrl, id)\r\n        requestCampaignInfo(id)\r\n            .then(res => {\r\n                const {richText, name, description} = res;\r\n                if (name) {\r\n                    setName(name)\r\n                }\r\n                if (description) {\r\n                    setDescription(description)\r\n                }\r\n                if (richText) {\r\n                    setRichText(richText)\r\n                }\r\n            })\r\n    }, [id])\r\n\r\n    const joinCampaign = () => {\r\n        requestCampaignJoin(id).then(() => history.push(`/campaign/${id}/tasks`))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Typography variant={\"h3\"} align={\"center\"}>{name}</Typography>\r\n            <Typography variant={\"h6\"} align={\"center\"}>{description}</Typography>\r\n            {richText && <TextViewer data={richText}/>}\r\n            <Grid container justifyContent={\"center\"} style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} onClick={joinCampaign}>Присоединиться / Кошулуу</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {getNotificationContent} from \"../../util/Util\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\n\r\n\r\nconst NotificationContent = () => {\r\n    const {id} = useParams<RouterParams>();\r\n    const [data, setData] = useState<any>({})\r\n\r\n    useEffect(() => {\r\n        getNotificationContent(id).then(res => setData(res))\r\n    }, [id])\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item xs={12} p={1}>\r\n                <Typography align={\"center\"} variant={\"h6\"}>{data.title}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextViewer data={data.text}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NotificationContent","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\nimport About from \"./components/campaigns/About\";\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Notifications from \"./components/notifications/Notifications\";\r\nimport NotificationContent from \"./components/notifications/NotificationContent\";\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    if (currentUser) {\r\n        const token = localStorage.getItem(\"token\");\r\n        currentUser.getIdToken(false).then((idToken: string) => {\r\n            if (token) {\r\n                if (idToken !== token) {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                localStorage.setItem(\"token\", idToken);\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={\"/campaign/about/:id\"}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications\"}>\r\n                                <Notifications/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications/:id\"}>\r\n                                <NotificationContent/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}