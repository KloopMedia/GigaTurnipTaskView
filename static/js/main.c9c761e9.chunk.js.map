{"version":3,"sources":["config/Urls.js","util/Axios.js","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/tasks/Task.tsx","util/Firebase.js","util/Auth.js","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/TaskList.tsx","components/tasks/CreatableTaskList.tsx","components/tasks/TaskMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","CustomFileWidget","props","schema","disabled","className","title","type","Task","id","useParams","history","useHistory","useState","setSchema","uiSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","widgets","customfile","useEffect","a","get","then","res","data","task","stage","console","log","parsed_schema","JSON","parse","json_schema","parsed_ui","ui_schema","responses","setData","style","width","minWidth","margin","display","padding","formData","onChange","e","onSubmit","patch","alert","goBack","Button","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","removeItem","window","location","reload","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","value","projectName","drawerWidth","useStyles","makeStyles","theme","createStyles","root","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","formControl","selectEmpty","marginTop","select","selectIcon","fill","top","Appbar","classes","useTheme","campaignId","useContext","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","onClick","edge","Typography","variant","noWrap","cursor","push","Grid","FormControl","size","Select","autoWidth","labelId","event","target","label","disableUnderline","inputProps","icon","map","camp","MenuItem","name","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","marginBottom","ChainCard","chain","description","Card","CardContent","component","gutterBottom","CardActions","Builder","campaigns","setCampaigns","container","justify","item","TabPanel","index","other","role","hidden","Box","p","a11yProps","backgroundColor","palette","background","SimpleTabs","handleChange","Tabs","centered","Tab","TaskCard","creatable","post","pathname","TaskList","assignee","username","tasks","setTasks","taskstagesUrl","TaskMenu","setValue","uid","CreatableTaskList","newValue","App","path","exact","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9c761e9.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import React from 'react'\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, disabled} = props;\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} type=\"file\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\ntype RouterParams = { id: string }\r\n\r\nconst Task = () => {\r\n    const {id} = useParams<RouterParams>();\r\n    const history = useHistory()\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [complete, setComplete] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id + '/').then((res: any) => res.data)\r\n        }\r\n        const setData = async () => {\r\n            let task = await getTask()\r\n            let stage = task.stage\r\n            console.log(task, stage)\r\n            let parsed_schema = JSON.parse(stage.json_schema)\r\n            let parsed_ui = JSON.parse(stage.ui_schema)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (id) {\r\n            setData()\r\n        }\r\n    }, [id])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(formResponses)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => alert(\"Saved\"))\r\n            .then(() => history.goBack())\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Form\r\n                schema={schema}\r\n                uiSchema={uiSchema}\r\n                formData={formResponses}\r\n                widgets={widgets}\r\n                disabled={complete}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <Button type=\"submit\" disabled={complete}>Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n\r\n\r\n","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload(false))\r\n}\r\n\r\nexport default firebase;","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import React, {useContext, useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography, Grid\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../config/Urls';\r\nimport {projectName} from \"../../config/Config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then((res: any) => res.data)\r\n            .then((res: any) => {\r\n                console.log(res)\r\n                setAllCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}`)\r\n    }\r\n\r\n    const redirectToMain = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap style={{cursor: \"pointer\"}} onClick={redirectToMain}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Grid className={classes.title} />\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`} value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        {projectName}\r\n                    </Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Card from \"./CampaignCard\";\r\nimport {campaignsUrl} from \"../../config/Urls\"\r\n\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\nexport type NewCampaignParams = { name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            {campaigns.map(campaign => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={campaign.id} chain={campaign}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nconst SimpleTabs = (props: any) => {\r\n    const classes = useStyles();\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Grid>\r\n            <div className={classes.root}>\r\n                <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </div>\r\n            {props.children}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport axios from \"../../util/Axios\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { id: number, complete: boolean, name: string, description?: string, creatable?: boolean }\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, complete, name, description, creatable} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        let data = {stage: id}\r\n        axios.post(tasksUrl, data)\r\n            .then(res => res.data)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {creatable ?\r\n                    <Button size=\"small\" onClick={handleCreate}>Create</Button>\r\n                    :\r\n                    <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\n\r\ntype TaskListProps = { stage?: number, assignee?: number, complete: boolean, username: string }\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {stage, assignee, complete, username} = props;\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log(`stage=&assignee=${assignee}&complete=${complete}&assignee__username=${username}`)\r\n        axios.get(`${tasksUrl}?stage=&assignee=&complete=${complete}&assignee__username=${username}`)\r\n            .then(res => res.data)\r\n            .then(res => setTasks(res))\r\n    }, [])\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            {tasks.map((task: any) =>\r\n                <Grid item key={task.id} style={{padding: 12}}>\r\n                    <TaskCard\r\n                        id={task.id}\r\n                        name={task.stage.name}\r\n                        description={task.stage.description}\r\n                        complete={task.complete}\r\n                    />\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useEffect, useState} from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport axios from \"../../util/Axios\";\r\nimport {taskstagesUrl, tasksUrl} from \"../../config/Urls\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\n\r\ntype TaskListProps = { stage?: number, assignee?: number, complete: boolean, username: string }\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {stage, assignee, complete, username} = props;\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(taskstagesUrl + 'user_relevant/')\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                setTasks(res)\r\n                console.log(res)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container>\r\n            {tasks.map((task: any) =>\r\n                <Grid item key={task.id} style={{padding: 12}}>\r\n                    <TaskCard\r\n                        id={task.id}\r\n                        name={task.name}\r\n                        description={task.description}\r\n                        complete={false}\r\n                        creatable={true}\r\n                    />\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useContext, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport CreatableTaskList from \"./CreatableTaskList\";\r\n\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <CreatableTaskList username={currentUser.uid} complete={false}/>\r\n            <SimpleTabs value={value} handleChange={handleChange}>\r\n                <TabPanel value={value} index={0}>\r\n                    <TaskList username={currentUser.uid} complete={false}/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <TaskList username={currentUser.uid} complete={true}/>\r\n                </TabPanel>\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\n\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}