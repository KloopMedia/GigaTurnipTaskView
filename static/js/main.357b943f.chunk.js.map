{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","util/Auth.js","components/text-editor/TextViewer.tsx","util/Util.tsx","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/QuckTaskContent.tsx","components/tasks/QuickTask.tsx","components/tasks/TaskList.tsx","components/tasks/TaskMenu.tsx","components/campaigns/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","taskstagesUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","returnNewState","prevState","update","multiple","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","filename","name","replaceAll","e","console","log","snap","child","put","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","ref","getDownloadURL","downloadURL","fullPath","filePath","fileLink","url","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomFileWidget","schema","uiSchema","disabled","required","formContext","campaignId","chainId","stageId","userId","taskId","useState","uploadedFiles","setUploadedFiles","fileLinks","currentFile","setCurrentFile","isImageOpen","setIsImageOpen","isVideoOpen","setIsVideoOpen","fileType","setFileType","parsedValue","setParsedValue","privateUpload","private","multipleSelect","hasUploadedFiles","Object","keys","length","isInputRequired","pathToFolder","undefined","useEffect","parsed","JSON","parse","forEach","getDownloadUrl","handleChange","event","target","path","stringify","allFiles","onChange","handleFileClick","getMetadata","metadata","type","contentType","split","alert","closeViewer","src","disableScroll","backgroundStyle","backgroundColor","closeOnClickOutside","onClose","Dialog","open","fullWidth","height","controls","className","title","i","style","onClick","fontSize","padding","margin","links","uploaded","deleteFile","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","TextViewer","data","id","inline","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","paginatedDataHandler","setDataFunction","setCountFunction","results","count","numOfPages","ceil","requestTaskAssignment","post","getSelectableTasks","page","get","res","getCompleteTasks","getOpenTasks","getPreviousTasks","Task","useParams","history","useHistory","useContext","setSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","editorData","setEditorData","loader","setLoader","widgets","customfile","task","stage","rich_text","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","responses","previousTasks","setData","paddingBottom","Grid","formData","liveOmit","omitExtraData","patch","onSubmit","push","Button","paddingLeft","CircularProgress","projectName","drawerWidth","openedMixin","theme","transition","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","justifyContent","mixins","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","marginLeft","MuiDrawer","flexShrink","whiteSpace","boxSizing","useTheme","sx","CssBaseline","position","Toolbar","noWrap","component","cursor","flexGrow","email","p","ParentCard","description","campaign","onCardButtonClick","openCampaignInfo","selectable","Card","CardContent","gutterBottom","CardActions","size","Builder","userCampaigns","setUserCampaigns","selectableCampaigns","setSelectableCampaigns","handleCardRedirect","align","container","item","TabPanel","index","other","role","hidden","a11yProps","SimpleTabs","bgcolor","Tabs","centered","Tab","label","showSelectable","TaskCard","creatable","handleOpen","pathname","handleCreate","requestTaskCreation","catch","err","handleSelectable","QuickTaskContent","taskData","isAssigned","refreshTasks","displayed_prev_tasks","direction","sm","xs","ExpandMore","expand","IconButton","transform","shortest","QuickTask","expanded","setExpanded","setAssigned","CardHeader","action","Stack","borderRadius","py","px","subheader","titleTypographyProps","subheaderTypographyProps","Collapse","in","timeout","unmountOnExit","TaskList","tasks","expandAll","setExpandAll","TaskMenu","tab","setTab","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","creatableTasks","setCreatableTasks","totalPages","setTotalPages","setPage","getCreatableTasks","newValue","pb","Pagination","showFirstButton","showLastButton","About","setName","setDescription","richText","setRichText","requestCampaignInfo","requestCampaignJoin","App","exact","Appbar","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.357b943f.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload())\r\n}\r\n\r\nexport default firebase;","import firebase from '../../../util/Firebase'\r\n\r\nconst returnNewState = (prevState, update, multiple) => {\r\n    if (multiple) {\r\n        if (prevState) {\r\n            return {...prevState, ...update}\r\n        } else {\r\n            return update\r\n        }\r\n    } else {\r\n        return update\r\n    }\r\n}\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks, multiple) => {\r\n    if (storageRef) {\r\n        if (!multiple) {\r\n            setFileBeingUploaded({})\r\n            setFileLinks({})\r\n        }\r\n        await Promise.all(files.map(async file => {\r\n            let filename;\r\n            try {\r\n                filename = file.name.replaceAll('.', '_').replaceAll(' ', '_').replaceAll('/', '_')\r\n            } catch (e) {\r\n                console.log(\"ERROR: \", e)\r\n                filename = file.name\r\n            }\r\n            console.log(filename)\r\n            const snap = storageRef.child(filename).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[filename]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[filename]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        console.log(\"FILE PATH\", snap.snapshot.ref.fullPath)\r\n                        const filePath = snap.snapshot.ref.fullPath\r\n                        const fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[filename]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[filename]: filePath}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    }\r\n    ;\r\n}\r\n\r\nexport default upload","import React from 'react'\r\nimport {Box, LinearProgress, Typography} from \"@mui/material\"\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport ImageViewer from 'react-simple-image-viewer';\r\nimport {Dialog} from \"@mui/material\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, disabled, required, formContext, value} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [uploadedFiles, setUploadedFiles] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState<any>({})\r\n    const [currentFile, setCurrentFile] = useState(\"\")\r\n    const [isImageOpen, setIsImageOpen] = useState(false);\r\n    const [isVideoOpen, setIsVideoOpen] = useState(false);\r\n    const [fileType, setFileType] = useState(\"\")\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    const privateUpload = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].private ? uiSchema[\"ui:options\"].private : false\r\n    const multipleSelect = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].multiple ? uiSchema[\"ui:options\"].multiple : false\r\n    const hasUploadedFiles = Object.keys(uploadedFiles).length > 0\r\n    const isInputRequired = required && !hasUploadedFiles\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        pathToFolder = firebase.storage()\r\n        if (privateUpload) {\r\n            pathToFolder = pathToFolder.ref(\"private\")\r\n        } else {\r\n            pathToFolder = pathToFolder.ref(\"public\")\r\n        }\r\n        pathToFolder = pathToFolder.child(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (value && Object.keys(value).length > 0) {\r\n            console.log(\"value\", value)\r\n            const parsed = JSON.parse(value)\r\n            setParsedValue(parsed)\r\n            Object.keys(parsed).forEach(filename => {\r\n                getDownloadUrl(parsed[filename])\r\n                    .then(url => setUploadedFiles((prevState: any) => ({\r\n                        ...prevState,\r\n                        [filename]: {url: url, status: \"complete\"}\r\n                    })))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files], pathToFolder, setUploadedFiles, setFileLinks, multipleSelect)\r\n        event.target.value = null;\r\n    };\r\n\r\n    const getDownloadUrl = (path: string) => {\r\n        return firebase.storage().ref(path).getDownloadURL()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileLinks && Object.keys(fileLinks).length > 0) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            try {\r\n                let stringify = \"\";\r\n                if (multipleSelect) {\r\n                    const parsed = JSON.parse(value);\r\n                    const allFiles = {...parsed, ...fileLinks};\r\n                    stringify = JSON.stringify(allFiles);\r\n                } else {\r\n                    stringify = JSON.stringify(fileLinks);\r\n                }\r\n                props.onChange(stringify);\r\n            } catch (error) {\r\n                const stringify = JSON.stringify(fileLinks)\r\n                console.error(error)\r\n                props.onChange(stringify)\r\n            }\r\n        }\r\n    }, [fileLinks])\r\n\r\n    const deleteFile = (filename: string) => {\r\n        const parsed = parsedValue\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            props.onChange(stringify)\r\n        }\r\n\r\n        const links = {...fileLinks}\r\n        if (filename in links) {\r\n            delete links[filename]\r\n            setFileLinks(links)\r\n        }\r\n\r\n        const uploaded = {...uploadedFiles}\r\n        if (filename in uploaded) {\r\n            delete uploaded[filename]\r\n            setUploadedFiles(uploaded)\r\n        }\r\n        console.log(\"DELETE LOG\", uploaded)\r\n    };\r\n\r\n    const handleFileClick = async (filename: string) => {\r\n        const parsed = parsedValue;\r\n        console.log(\"FILE CLICK VALUE\", parsed)\r\n        if (filename in parsed) {\r\n            const path = parsed[filename];\r\n            console.log(path)\r\n            const metadata = await firebase.storage().ref().child(path).getMetadata()\r\n            const type = metadata.contentType.split(\"/\")[0]\r\n            console.log(\"FILE TYPE\", type)\r\n            switch (type) {\r\n                case \"image\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsImageOpen(true);\r\n                    break;\r\n                case \"video\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsVideoOpen(true);\r\n                    break;\r\n                default:\r\n                    // window.open(uploadedFiles[filename].url, '_blank');\r\n                    alert(\"Файл не является фото или видео\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeViewer = () => {\r\n        setCurrentFile(\"\")\r\n        setFileType(\"\");\r\n        setIsImageOpen(false);\r\n        setIsVideoOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isImageOpen && <ImageViewer\r\n                src={[currentFile]}\r\n                disableScroll={false}\r\n                backgroundStyle={{\r\n                    backgroundColor: \"rgba(0,0,0,0.8)\"\r\n                }}\r\n                closeOnClickOutside={true}\r\n                onClose={closeViewer}\r\n            />}\r\n            <Dialog\r\n                open={isVideoOpen}\r\n                onClose={closeViewer}\r\n                fullWidth={true}\r\n            >\r\n                <video height=\"360px\" controls>\r\n                    <source src={currentFile} type={fileType}/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </Dialog>\r\n\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} required={isInputRequired} multiple={multipleSelect} type=\"file\"\r\n                   onChange={handleChange}/>\r\n\r\n            {Object.keys(uploadedFiles).map((filename, i) =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                        <p>{filename}</p>\r\n                        {uploadedFiles[filename].status === 'complete' &&\r\n                        <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                            <button\r\n                                onClick={() => handleFileClick(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-success\"\r\n                            >\r\n                                посмотреть файл\r\n                            </button>\r\n                            {!disabled &&\r\n                            <button\r\n                                onClick={() => deleteFile(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-danger\"\r\n                            >\r\n                                удалить\r\n                            </button>}\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    {uploadedFiles[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={uploadedFiles[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import axios from \"./Axios\";\r\nimport {campaignsUrl, taskstagesUrl, tasksUrl} from \"../config/Urls\";\r\n\r\nexport const IS_PAGINATION_ON = false\r\n\r\nexport const paginatedDataHandler = (\r\n    data: any,\r\n    setDataFunction: (res: any) => void,\r\n    setCountFunction: (count: number) => void,\r\n) => {\r\n    const {results, count} = data;\r\n    const numOfPages = Math.ceil(count / 10)\r\n    console.log(\"numOfPages\", numOfPages)\r\n    console.log(\"results\", results)\r\n    setDataFunction(results)\r\n    setCountFunction(numOfPages)\r\n}\r\n\r\n// Campaigns Functions\r\nexport const getCampaigns = () => {\r\n    return axios.get(campaignsUrl)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getUserCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_campaigns/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"user_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getSelectableCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_selectable/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"selectable_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const requestCampaignJoin = (id: string | number) => {\r\n    return axios.post(campaignsUrl + id + '/join_campaign/')\r\n}\r\n\r\nexport const requestCampaignInfo = (id: string | number) => {\r\n    return axios.get(campaignsUrl + id + '/')\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\n// TaskCard Functions\r\nexport const requestTaskCreation = (id: string | number) => {\r\n    return axios.post(taskstagesUrl + id + '/create_task/')\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const requestTaskAssignment = (id: string | number) => {\r\n    return axios.post(tasksUrl + id + '/request_assignment/')\r\n}\r\n\r\n\r\n// TaskMenu Functions\r\nexport const getSelectableTasks = (campaignId: string | number, page?: number) => {\r\n    console.log(page)\r\n    if (page && page > 0) {\r\n        return axios.get(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}&limit=10&offset=${(page - 1) * 10}`)\r\n            .then(res => res.data)\r\n    }\r\n    return axios.get(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getSelectableTasks\", res)\r\n            return res\r\n        })\r\n};\r\n\r\nexport const getCompleteTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${true}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getCompleteTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getOpenTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${false}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getOpenTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getCreatableTasks = (campaignId: string | number) => {\r\n    return axios.get(`${taskstagesUrl}user_relevant/?chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\n\r\n// Task Functions\r\nexport const getPreviousTasks = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/list_displayed_previous/`)\r\n        .then(res => res.data)\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {getPreviousTasks} from \"../../util/Util\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = (props: {id?: string}) => {\r\n    let {id, campaignId} = useParams<RouterParams>();\r\n    if (!id && props.id) {\r\n        id = props.id\r\n    }\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [editorData, setEditorData] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id + '/').then((res: any) => res.data)\r\n        }\r\n        const setData = async () => {\r\n            let task = await getTask()\r\n            let stage = task.stage\r\n\r\n            if (stage && stage.rich_text) {\r\n                setEditorData(stage.rich_text)\r\n            }\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            const previousTasks = await getPreviousTasks(id).then(res => res.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            })))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (id && currentUser) {\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {editorData !== \"\" && <div style={{paddingBottom: 20}}>\r\n                <TextViewer data={editorData}/>\r\n            </div>}\r\n\r\n            {prevTasks.length > 0 &&\r\n            <Grid>\r\n                {prevTasks.map((task: any, i: number) =>\r\n                    <Form\r\n                        key={`prev_task_${i}`}\r\n                        schema={task.json_schema ?? {}}\r\n                        uiSchema={task.ui_schema ?? {}}\r\n                        formData={task.responses ?? {}}\r\n                        widgets={widgets}\r\n                        disabled={true}\r\n                        children={\" \"}\r\n                    />\r\n                )}\r\n            </Grid>\r\n            }\r\n            <Grid>\r\n                <Form\r\n                    schema={schema ?? {}}\r\n                    uiSchema={uiSchema ?? {}}\r\n                    formData={formResponses ?? {}}\r\n                    formContext={dataForStoragePath}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                    {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                </Form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import * as React from 'react';\r\nimport {styled, useTheme, Theme, CSSObject} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport {projectName} from \"../../config/Config\";\r\nimport {signInWithGoogle, signOut} from \"../../util/Firebase\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {getUserCampaigns} from \"../../util/Util\";\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme: Theme): CSSObject => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme: Theme): CSSObject => ({\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: `calc(${theme.spacing(9)} + 1px)`,\r\n    },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({theme, open}) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\r\n    ({theme, open}) => ({\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        boxSizing: 'border-box',\r\n        ...(open && {\r\n            ...openedMixin(theme),\r\n            '& .MuiDrawer-paper': openedMixin(theme),\r\n        }),\r\n        ...(!open && {\r\n            ...closedMixin(theme),\r\n            '& .MuiDrawer-paper': closedMixin(theme),\r\n        }),\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const redirectToMain = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" open={open}>\r\n                <Toolbar>\r\n                    {/*<IconButton*/}\r\n                    {/*    color=\"inherit\"*/}\r\n                    {/*    aria-label=\"open drawer\"*/}\r\n                    {/*    onClick={handleDrawerOpen}*/}\r\n                    {/*    edge=\"start\"*/}\r\n                    {/*    sx={{*/}\r\n                    {/*        marginRight: '36px',*/}\r\n                    {/*        ...(open && {display: 'none'}),*/}\r\n                    {/*    }}*/}\r\n                    {/*>*/}\r\n                    {/*    <MenuIcon/>*/}\r\n                    {/*</IconButton>*/}\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{cursor: \"pointer\", flexGrow: 1 }}\r\n                                onClick={redirectToMain}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/*<Drawer variant=\"permanent\" open={open}>*/}\r\n            {/*    <DrawerHeader>*/}\r\n            {/*        <IconButton onClick={handleDrawerClose}>*/}\r\n            {/*            {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}*/}\r\n            {/*        </IconButton>*/}\r\n            {/*    </DrawerHeader>*/}\r\n            {/*    <Divider/>*/}\r\n            {/*</Drawer>*/}\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 0}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {AppBar, Box, Button, Toolbar, Typography} from \"@mui/material\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{flexGrow: 1}}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 3}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {CardParams} from \"../../util/Types\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ParentCard = (props: CardParams) => {\r\n    const {id, name, description, campaign} = props.data;\r\n    const {onCardButtonClick, openCampaignInfo, selectable} = props;\r\n\r\n    const handleOpen = () => {\r\n        onCardButtonClick(id)\r\n    }\r\n\r\n    const redirectToInfoPage = () => {\r\n        if (openCampaignInfo) {\r\n            openCampaignInfo(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ width: 300 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} {campaign && `Campaign: ${campaign}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {selectable ?\r\n                    <Button size=\"small\" onClick={redirectToInfoPage}>Подробнее</Button>\r\n                    :\r\n                    <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ParentCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport Card from \"./CampaignCard\";\r\nimport {CampaignParams} from \"../../util/Types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getSelectableCampaigns, getUserCampaigns} from \"../../util/Util\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [userCampaigns, setUserCampaigns] = useState<CampaignParams[]>([])\r\n    const [selectableCampaigns, setSelectableCampaigns] = useState<CampaignParams[]>([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getUserCampaigns().then(res => setUserCampaigns(res))\r\n        getSelectableCampaigns().then(res => setSelectableCampaigns(res))\r\n\r\n    }, [])\r\n\r\n    const openCampaignInfo = (id: string | number) => {\r\n        history.push(`/campaign/about/${id}`)\r\n    }\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            {userCampaigns && userCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Мои кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {userCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={false}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            {selectableCampaigns && selectableCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Доступные кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {selectableCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={true}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {Box, Grid, Tab, Tabs} from \"@mui/material\";\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n            <Tabs value={value} onChange={handleChange} centered variant={\"fullWidth\"}>\r\n                <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n            </Tabs>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {requestTaskAssignment, requestTaskCreation} from \"../../util/Util\";\r\nimport {CardProps} from \"../../util/Types\";\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const {id, complete, name, description, creatable, selectable} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        requestTaskCreation(id)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n            .catch(err => alert(err))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Открыть</Button>\r\n        } else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Создать</Button>\r\n        } else {\r\n            return <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{width: 300}}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"span\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"subtitle2\" component=\"span\">\r\n                    {id && !creatable ? `ID: ${id}` : <br/>}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst QuickTaskContent = (props: { id: string, taskData: any, isAssigned: boolean, refreshTasks?: () => void }) => {\r\n    const {id, taskData, isAssigned, refreshTasks} = props;\r\n    let {campaignId} = useParams<RouterParams>();\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            const task = taskData\r\n            const stage = task.stage\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            const previousTasks = task.displayed_prev_tasks.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            }))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (taskData && currentUser) {\r\n            setData()\r\n        }\r\n    }, [taskData, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => refreshTasks && refreshTasks())\r\n            .catch(error => {\r\n                alert(error)\r\n                setLoader(false)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => window.location.reload())\r\n            .catch(error => alert(error))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid direction='row' container spacing={1}>\r\n                {prevTasks.length > 0 &&\r\n                <Grid container item sm={6} xs={12} sx={{display: 'block'}}>\r\n                    {prevTasks.map((task: any, i: number) =>\r\n                        <Form\r\n                            key={`prev_task_${i}`}\r\n                            schema={task.json_schema ?? {}}\r\n                            uiSchema={task.ui_schema ?? {}}\r\n                            formData={task.responses ?? {}}\r\n                            widgets={widgets}\r\n                            disabled={true}\r\n                            children={\" \"}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                }\r\n                <Grid container item sm={prevTasks.length > 0 ? 6 : 12} xs={12} sx={{display: 'block'}}>\r\n                    <Form\r\n                        schema={schema ?? {}}\r\n                        uiSchema={uiSchema ?? {}}\r\n                        formData={formResponses ?? {}}\r\n                        formContext={dataForStoragePath}\r\n                        liveOmit={true}\r\n                        omitExtraData={true}\r\n                        widgets={widgets}\r\n                        disabled={complete || !isAssigned}\r\n                        onChange={handleChange}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        <Box display={\"flex\"}>\r\n                            <Button type=\"submit\" disabled={complete || !isAssigned}>Submit</Button>\r\n                            {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                        </Box>\r\n                        {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                    </Form>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default QuickTaskContent\r\n","import React, {useEffect, useState} from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton, {IconButtonProps} from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {QuickTaskProps} from \"../../util/Types\";\r\nimport QuickTaskContent from \"./QuckTaskContent\";\r\nimport {Button, Stack} from \"@mui/material\";\r\nimport {requestTaskAssignment} from \"../../util/Util\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n    expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n    const {expand, ...other} = props;\r\n    return <IconButton {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nconst QuickTask = (props: QuickTaskProps) => {\r\n    const {id, complete, name, description, creatable, selectable, task, expand, refreshTasks} = props;\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [isAssigned, setAssigned] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setExpanded(expand)\r\n    }, [expand])\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => setAssigned(true))\r\n            .catch(err => {\r\n                alert(err)\r\n                if (refreshTasks) {\r\n                    refreshTasks()\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                action={\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                        <Button size={\"small\"} variant={isAssigned ? \"text\" : \"outlined\"} disabled={isAssigned} sx={{borderRadius: \"5em\"}}\r\n                                onClick={handleSelectable}>\r\n                            {isAssigned ?  <DoneIcon color={\"primary\"}/> : \"Get\"}\r\n                        </Button>\r\n                        <ExpandMore\r\n                            expand={expanded}\r\n                            onClick={handleExpandClick}\r\n                            disabled={creatable}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon/>\r\n                        </ExpandMore>\r\n                    </Stack>\r\n                }\r\n                sx={{py: 1, px: 2}}\r\n                title={name}\r\n                subheader={`ID: ${id}`}\r\n                titleTypographyProps={{variant: \"h6\"}}\r\n                subheaderTypographyProps={{variant: \"caption\"}}\r\n            />\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <QuickTaskContent id={id} taskData={task} isAssigned={isAssigned} refreshTasks={refreshTasks}/>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default QuickTask\r\n","import React, {useState} from \"react\";\r\nimport {Button, Grid} from \"@mui/material\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport QuickTask from \"./QuickTask\";\r\n\r\n\r\ntype TaskListProps = {\r\n    complete?: boolean,\r\n    selectable?: boolean,\r\n    creatable?: boolean,\r\n    tasks: any[],\r\n    refreshTasks?: () => void\r\n}\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {complete, selectable, tasks, creatable, refreshTasks} = props;\r\n    const [expandAll, setExpandAll] = useState(false)\r\n\r\n    const listTasks = () => {\r\n        return tasks.map((task: any) => {\r\n                if (creatable) {\r\n                    const id = task.id\r\n                    const name = task.name\r\n                    const description = task.description\r\n                    return (\r\n                        <Grid item key={task.id} sx={{p: 1}}>\r\n                            <TaskCard\r\n                                id={id}\r\n                                name={name}\r\n                                description={description}\r\n                                complete={complete}\r\n                                selectable={selectable}\r\n                                creatable={creatable}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                } else {\r\n                    const id = task.id.toString()\r\n                    const name = task.stage.name\r\n                    const description = task.stage.description\r\n                    if (selectable) {\r\n                        return (\r\n                            <Grid item key={task.id} sx={{p: 1, width: \"100%\"}}>\r\n                                <QuickTask\r\n                                    id={id}\r\n                                    name={name}\r\n                                    description={description}\r\n                                    complete={complete}\r\n                                    selectable={selectable}\r\n                                    creatable={creatable}\r\n                                    task={task}\r\n                                    expand={expandAll}\r\n                                    refreshTasks={refreshTasks}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Grid item key={task.id} style={{padding: 10}}>\r\n                                <TaskCard\r\n                                    id={id}\r\n                                    name={name}\r\n                                    description={description}\r\n                                    complete={complete}\r\n                                    selectable={selectable}\r\n                                    creatable={creatable}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleExpand = () => {\r\n        setExpandAll(!expandAll)\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={creatable ? \"row\" : \"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={creatable ? \"flex-start\" : \"center\"}\r\n        >\r\n            {selectable && <Button variant={\"contained\"} onClick={handleExpand}>\r\n                {expandAll ? \"Свернуть все\" : \"Развернуть все\"}\r\n            </Button>}\r\n            {listTasks()}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Box, Grid, Pagination} from \"@mui/material\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {\r\n    getCompleteTasks,\r\n    getCreatableTasks,\r\n    getOpenTasks,\r\n    getSelectableTasks,\r\n    paginatedDataHandler\r\n} from \"../../util/Util\";\r\n\r\n\r\ntype RouterParams = { campaignId: string }\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {campaignId} = useParams<RouterParams>();\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [tab, setTab] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n    const [creatableTasks, setCreatableTasks] = useState([])\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n            } else if (tab === 1) {\r\n                getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n            } else if (tab === 2) {\r\n                getSelectableTasks(campaignId, value).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n    const refreshTasks = () => {\r\n        getSelectableTasks(campaignId).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n        getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n        getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n        getCreatableTasks(campaignId).then(res => setCreatableTasks(res))\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshTasks()\r\n    }, [campaignId]);\r\n\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <TaskList creatable={true} tasks={creatableTasks}/>\r\n            <SimpleTabs value={tab} handleChange={handleTabChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={tab} index={0}>\r\n                    <TaskList complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                    <TaskList complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={tab} index={2}>\r\n                    <TaskList selectable={true} tasks={selectableTasks} refreshTasks={refreshTasks}/>\r\n                    <Box pb={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                        <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                    showLastButton/>\r\n                    </Box>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {campaignsUrl} from \"../../config/Urls\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {Button, Grid, Typography} from \"@mui/material\";\r\nimport {requestCampaignInfo, requestCampaignJoin} from \"../../util/Util\";\r\n\r\n\r\nconst About = () => {\r\n    const {id}: { id: string } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [richText, setRichText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(campaignsUrl, id)\r\n        requestCampaignInfo(id)\r\n            .then(res => {\r\n                const {richText, name, description} = res;\r\n                if (name) {\r\n                    setName(name)\r\n                }\r\n                if (description) {\r\n                    setDescription(description)\r\n                }\r\n                if (richText) {\r\n                    setRichText(richText)\r\n                }\r\n            })\r\n    }, [id])\r\n\r\n    const joinCampaign = () => {\r\n        requestCampaignJoin(id).then(() => history.push(`/campaign/${id}/tasks`))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Typography variant={\"h3\"} align={\"center\"}>{name}</Typography>\r\n            <Typography variant={\"h6\"} align={\"center\"}>{description}</Typography>\r\n            {richText && <TextViewer data={richText}/>}\r\n            <Grid container justifyContent={\"center\"} style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} onClick={joinCampaign}>Присоединиться / Кошулуу</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\nimport About from \"./components/campaigns/About\";\r\nimport {AuthContext} from \"./util/Auth\";\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    if (currentUser) {\r\n        const token = localStorage.getItem(\"token\");\r\n        currentUser.getIdToken(false).then((idToken: string) => {\r\n            if (token) {\r\n                if (idToken !== token) {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                localStorage.setItem(\"token\", idToken);\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={\"/campaign/about/:id\"}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}