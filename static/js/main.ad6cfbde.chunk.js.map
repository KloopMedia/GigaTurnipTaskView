{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","util/Auth.js","components/text-editor/TextViewer.tsx","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","util/Util.tsx","components/custom-widgets/autocomplete/AutoCompleteWidget.tsx","components/custom-widgets/fixed-radio-widget/FixedRadioWidget.tsx","components/custom-widgets/link-widget/CustomLinkWidget.tsx","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/QuckTaskContent.tsx","components/tasks/QuickTask.tsx","components/tasks/TaskList.tsx","components/notifications/Notifications.tsx","components/tasks/TaskFilter.tsx","components/tasks/TaskMenu.tsx","components/campaigns/About.tsx","components/notifications/NotificationContent.tsx","components/tasks/IntegratedTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","taskstagesUrl","tasksUrl","notificationsUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","value","TextViewer","props","data","id","inline","disabled","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","returnNewState","prevState","update","multiple","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","filename","name","replace","console","log","snap","child","put","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","ref","getDownloadURL","downloadURL","fullPath","filePath","fileLink","url","LinearProgressWithLabel","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","CustomFileWidget","schema","uiSchema","required","formContext","campaignId","chainId","stageId","userId","taskId","uploadedFiles","setUploadedFiles","fileLinks","currentFile","setCurrentFile","isImageOpen","setIsImageOpen","isVideoOpen","setIsVideoOpen","fileType","setFileType","parsedValue","setParsedValue","privateUpload","private","multipleSelect","hasUploadedFiles","Object","keys","length","isInputRequired","pathToFolder","undefined","parsed","JSON","parse","forEach","getDownloadUrl","handleChange","event","target","_onBlur","onBlur","path","updateFormResponses","stringify","allFiles","onChange","deleteFile","links","uploaded","handleFileClick","getMetadata","metadata","type","contentType","split","open","closeViewer","src","disableScroll","backgroundStyle","backgroundColor","closeOnClickOutside","onClose","Dialog","fullWidth","height","controls","className","title","onFocus","i","style","onClick","fontSize","padding","margin","WIDGETS","customfile","autocomplete","placeholder","readonly","label","autofocus","options","rawErrors","searchField","responseField","params","examples","setExamples","updateExamples","webhook","get","res","results","catch","err","inputType","Form","Group","Label","Control","autoFocus","readOnly","list","emptyValue","example","index","RadioWidget","enumOptions","enumDisabled","_onChange","_onFocus","Boolean","option","itemDisabled","Array","isArray","indexOf","checked","Check","customlink","href","paginatedDataHandler","setDataFunction","setCountFunction","count","numOfPages","ceil","createPaginationURL","page","formatDateString","date","d","Date","year","getFullYear","month","addZeroesToDate","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","a11yProps","requestTaskAssignment","post","getSelectableTasks","getCompleteTasks","getOpenTasks","getPreviousTasks","getTask","getUserNotifications","viewed","importance","Task","useParams","history","useHistory","useContext","setSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","editorData","setEditorData","loader","setLoader","ready","setReady","widgets","task","stage","rich_text","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","responses","previousTasks","setData","message","action","patch","paddingBottom","Grid","formData","liveOmit","omitExtraData","alert","push","e","onSubmit","Button","paddingLeft","CircularProgress","projectName","drawerWidth","openedMixin","theme","transition","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","justifyContent","mixins","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","useTheme","setOpen","redirect","DrawerItems","icon","sx","CssBaseline","position","Toolbar","IconButton","edge","marginRight","noWrap","component","cursor","flexGrow","email","direction","Divider","List","item","ListItem","button","ListItemIcon","ListItemText","primary","p","ParentCard","description","campaign","onCardButtonClick","openCampaignInfo","selectable","Card","CardContent","gutterBottom","CardActions","size","Builder","userCampaigns","setUserCampaigns","selectableCampaigns","setSelectableCampaigns","handleCardRedirect","align","container","TabPanel","other","role","hidden","SimpleTabs","bgcolor","Tabs","centered","Tab","showSelectable","TaskCard","creatable","integrated","handleOpen","pathname","handleCreate","requestTaskCreation","handleSelectable","QuickTaskContent","taskData","isAssigned","refreshTasks","displayed_prev_tasks","sm","xs","ExpandMore","expand","transform","shortest","QuickTask","excluded","handleAction","expanded","setExpanded","setAssigned","CardHeader","Stack","borderRadius","returnButton","py","px","background","subheader","titleTypographyProps","subheaderTypographyProps","Collapse","in","timeout","unmountOnExit","TaskList","tasks","expandAll","setExpandAll","integrator_group","Notifications","onlyNew","viewedNotifications","setViewedNotifications","notViewedNotifications","setNotViewedNotifications","totalPages","setTotalPages","setPage","tab","setTab","matches","useMediaQuery","openMessage","created_at","newValue","Pagination","showFirstButton","showLastButton","TaskFilter","setChainId","setStageId","formStageId","setFormStageId","chains","setChains","stages","setStages","jsonSchema","setJsonSchema","Axios","savedChain","savedStage","savedFormStage","filter","ui","savedResponses","FormGroup","FormControl","m","InputLabel","Select","labelId","MenuItem","TaskMenu","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","creatableTasks","setCreatableTasks","getCreatableTasks","pb","About","setName","setDescription","richText","setRichText","requestCampaignInfo","requestCampaignJoin","NotificationContent","getNotificationContent","text","IntegratedTask","taskList","setTaskList","setTaskActionId","listOfExcludedTasks","setListOfExcludedTasks","setDialogOpen","handleActionClick","includeTask","newList","splice","parsedList","from","Set","includes","Chip","App","exact","Appbar","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad6cfbde.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\nconst notificationsUrl = \"/api/v1/notifications/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl,\r\n    notificationsUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload())\r\n}\r\n\r\nexport default firebase;","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import firebase from '../../../util/Firebase'\r\n\r\nconst returnNewState = (prevState, update, multiple) => {\r\n    if (multiple) {\r\n        if (prevState) {\r\n            return {...prevState, ...update}\r\n        } else {\r\n            return update\r\n        }\r\n    } else {\r\n        return update\r\n    }\r\n}\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks, multiple) => {\r\n    if (storageRef) {\r\n        if (!multiple) {\r\n            setFileBeingUploaded({})\r\n            setFileLinks({})\r\n        }\r\n        await Promise.all(files.map(async file => {\r\n            const filename = file.name.replace(/\\./g, '_').replace(/ /g, '_');\r\n            console.log(filename)\r\n            const snap = storageRef.child(filename).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[filename]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[filename]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        console.log(\"FILE PATH\", snap.snapshot.ref.fullPath)\r\n                        const filePath = snap.snapshot.ref.fullPath\r\n                        const fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[filename]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[filename]: filePath}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    };\r\n}\r\n\r\nexport default upload","import React from 'react'\r\nimport {Box, LinearProgress, Typography} from \"@mui/material\"\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport ImageViewer from 'react-simple-image-viewer';\r\nimport {Dialog} from \"@mui/material\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, disabled, required, formContext, value, id} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [uploadedFiles, setUploadedFiles] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState<any>({})\r\n    const [currentFile, setCurrentFile] = useState(\"\")\r\n    const [isImageOpen, setIsImageOpen] = useState(false);\r\n    const [isVideoOpen, setIsVideoOpen] = useState(false);\r\n    const [fileType, setFileType] = useState(\"\")\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    const privateUpload = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].private ? uiSchema[\"ui:options\"].private : false\r\n    const multipleSelect = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].multiple ? uiSchema[\"ui:options\"].multiple : false\r\n    const hasUploadedFiles = Object.keys(uploadedFiles).length > 0\r\n    const isInputRequired = required && !hasUploadedFiles\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        pathToFolder = firebase.storage()\r\n        if (privateUpload) {\r\n            pathToFolder = pathToFolder.ref(\"private\")\r\n        } else {\r\n            pathToFolder = pathToFolder.ref(\"public\")\r\n        }\r\n        pathToFolder = pathToFolder.child(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (value && Object.keys(value).length > 0) {\r\n            console.log(\"value\", value)\r\n            const parsed = JSON.parse(value)\r\n            setParsedValue(parsed)\r\n            Object.keys(parsed).forEach(filename => {\r\n                getDownloadUrl(parsed[filename])\r\n                    .then(url => setUploadedFiles((prevState: any) => ({\r\n                        ...prevState,\r\n                        [filename]: {url: url, status: \"complete\"}\r\n                    })))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        await upload([...event.target.files], pathToFolder, setUploadedFiles, setFileLinks, multipleSelect)\r\n        event.target.value = null;\r\n    };\r\n\r\n    const _onBlur = () => props.onBlur(id, uploadedFiles);\r\n    const _onFocus = () => props.onFocus(id, uploadedFiles);\r\n\r\n    const getDownloadUrl = (path: string) => {\r\n        return firebase.storage().ref(path).getDownloadURL()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const updateFormResponses = async () => {\r\n            try {\r\n                let stringify = \"\";\r\n                if (multipleSelect) {\r\n                    const parsed = JSON.parse(value);\r\n                    const allFiles = {...parsed, ...fileLinks};\r\n                    stringify = JSON.stringify(allFiles);\r\n                } else {\r\n                    stringify = JSON.stringify(fileLinks);\r\n                }\r\n                await props.onChange(stringify);\r\n            } catch (error) {\r\n                const stringify = JSON.stringify(fileLinks)\r\n                console.error(error)\r\n                await props.onChange(stringify)\r\n            }\r\n        }\r\n\r\n        if (fileLinks && Object.keys(fileLinks).length > 0) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            updateFormResponses().then(() => _onBlur())\r\n        }\r\n    }, [fileLinks])\r\n\r\n    const deleteFile = async (filename: string) => {\r\n        const parsed = parsedValue\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            await props.onChange(stringify)\r\n            _onBlur()\r\n        }\r\n\r\n        const links = {...fileLinks}\r\n        if (filename in links) {\r\n            delete links[filename]\r\n            setFileLinks(links)\r\n        }\r\n\r\n        const uploaded = {...uploadedFiles}\r\n        if (filename in uploaded) {\r\n            delete uploaded[filename]\r\n            setUploadedFiles(uploaded)\r\n        }\r\n        console.log(\"DELETE LOG\", uploaded)\r\n    };\r\n\r\n    const handleFileClick = async (filename: string) => {\r\n        const parsed = parsedValue;\r\n        console.log(\"FILE CLICK VALUE\", parsed)\r\n        _onBlur()\r\n        if (filename in parsed) {\r\n            const path = parsed[filename];\r\n            console.log(path)\r\n            const metadata = await firebase.storage().ref().child(path).getMetadata()\r\n            const type = metadata.contentType.split(\"/\")[0]\r\n            console.log(\"FILE TYPE\", type)\r\n            switch (type) {\r\n                case \"image\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsImageOpen(true);\r\n                    break;\r\n                case \"video\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsVideoOpen(true);\r\n                    break;\r\n                default:\r\n                    window.open(uploadedFiles[filename].url, '_blank');\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeViewer = () => {\r\n        setCurrentFile(\"\")\r\n        setFileType(\"\");\r\n        setIsImageOpen(false);\r\n        setIsVideoOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isImageOpen && <ImageViewer\r\n                src={[currentFile]}\r\n                disableScroll={false}\r\n                backgroundStyle={{\r\n                    backgroundColor: \"rgba(0,0,0,0.8)\"\r\n                }}\r\n                closeOnClickOutside={true}\r\n                onClose={closeViewer}\r\n            />}\r\n            <Dialog\r\n                open={isVideoOpen}\r\n                onClose={closeViewer}\r\n                fullWidth={true}\r\n            >\r\n                <video height=\"360px\" controls>\r\n                    <source src={currentFile} type={fileType}/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </Dialog>\r\n\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} required={isInputRequired} multiple={multipleSelect} type=\"file\"\r\n                   onChange={handleChange} onBlur={_onBlur} onFocus={_onFocus}/>\r\n\r\n            {Object.keys(uploadedFiles).map((filename, i) =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                        <p>{filename}</p>\r\n                        {uploadedFiles[filename].status === 'complete' &&\r\n                        <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                            <button\r\n                                onClick={() => handleFileClick(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-success\"\r\n                            >\r\n                                посмотреть файл\r\n                            </button>\r\n                            {!disabled &&\r\n                            <button\r\n                                onClick={() => deleteFile(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-danger\"\r\n                            >\r\n                                удалить\r\n                            </button>}\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    {uploadedFiles[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={uploadedFiles[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import axios from \"./Axios\";\r\nimport {campaignsUrl, notificationsUrl, taskstagesUrl, tasksUrl} from \"../config/Urls\";\r\nimport CustomFileWidget from \"../components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport AutoCompleteWidget from \"../components/custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"../components/custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\nimport CustomLinkWidget from \"../components/custom-widgets/link-widget/CustomLinkWidget\";\r\n\r\nexport const IS_PAGINATION_ON = false\r\nexport const WIDGETS = {\r\n    customfile: CustomFileWidget,\r\n    autocomplete: AutoCompleteWidget,\r\n    RadioWidget: FixedRadioWidget,\r\n    customlink: CustomLinkWidget\r\n};\r\n\r\n// Pagination Functions\r\nexport const paginatedDataHandler = (\r\n    data: any,\r\n    setDataFunction: (res: any) => void,\r\n    setCountFunction: (count: number) => void,\r\n) => {\r\n    const {results, count} = data;\r\n    const numOfPages = Math.ceil(count / 10)\r\n    console.log(\"numOfPages\", numOfPages)\r\n    console.log(\"results\", results)\r\n    setDataFunction(results)\r\n    setCountFunction(numOfPages)\r\n}\r\n\r\nconst createPaginationURL = (request: string, page?: number) => {\r\n    if (page && page > 0) {\r\n        return `${request}&limit=10&offset=${(page - 1) * 10}`\r\n    } else {\r\n        return request\r\n    }\r\n}\r\n\r\n// Date Functions\r\nexport const formatDateString = (date: string) => {\r\n    const d = new Date(date)\r\n    const year = d.getFullYear()\r\n    const month = addZeroesToDate(d.getMonth() + 1)\r\n    const day = addZeroesToDate(d.getDate())\r\n    const hours = addZeroesToDate(d.getHours())\r\n    const minutes = addZeroesToDate(d.getMinutes())\r\n    const seconds = addZeroesToDate(d.getSeconds())\r\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`\r\n}\r\n\r\nconst addZeroesToDate = (date: number) => {\r\n    return date < 10 ? '0' + date : date\r\n}\r\n\r\n// Tab function\r\nexport const a11yProps = (index: any) => ({\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n});\r\n\r\n// Campaigns Functions\r\nexport const getCampaigns = () => {\r\n    return axios.get(campaignsUrl)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getUserCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_campaigns/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"user_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getSelectableCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_selectable/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"selectable_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const requestCampaignJoin = (id: string | number) => {\r\n    return axios.post(campaignsUrl + id + '/join_campaign/')\r\n}\r\n\r\nexport const requestCampaignInfo = (id: string | number) => {\r\n    return axios.get(campaignsUrl + id + '/')\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\n// TaskCard Functions\r\nexport const requestTaskCreation = (id: string | number) => {\r\n    return axios.post(taskstagesUrl + id + '/create_task/')\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const requestTaskAssignment = (id: string | number) => {\r\n    return axios.post(tasksUrl + id + '/request_assignment/')\r\n}\r\n\r\n\r\n// TaskMenu Functions\r\nexport const getSelectableTasks = (campaignId: string | number, page?: number) => {\r\n    console.log(page)\r\n    const url = createPaginationURL(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}`, page)\r\n    return axios.get(url).then(res => {\r\n        console.log(\"getSelectableTasks\", res.data)\r\n        return res.data;\r\n    })\r\n};\r\n\r\nexport const getCompleteTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${true}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getCompleteTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getOpenTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${false}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getOpenTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getCreatableTasks = (campaignId: string | number) => {\r\n    return axios.get(`${taskstagesUrl}user_relevant/?chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\n\r\n// Task Functions\r\nexport const getPreviousTasks = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/list_displayed_previous/`)\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const getTask = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/`).then((res: any) => res.data)\r\n}\r\n\r\n\r\n// Notifications Functions\r\nexport const getUserNotifications = (campaignId: string | number, viewed: boolean, importance?: number, page?: number) => {\r\n    console.log(page)\r\n    const url = createPaginationURL(`${notificationsUrl}list_user_notifications/?campaign=${campaignId}&viewed=${viewed}`, page)\r\n    console.log(\"IMPORTANCE\", importance)\r\n    if (importance === 0) {\r\n        return axios.get(`${url}&importance=${importance}`)\r\n            .then(res => res.data)\r\n    } else {\r\n        return axios.get(url)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const getNotificationContent = (id: string | number) => {\r\n    return axios.get(`${notificationsUrl + id}/`).then(res => res.data)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {WidgetProps} from \"@rjsf/core\";\r\nimport axios from \"axios\";\r\n\r\nconst AutoCompleteWidget = (props: WidgetProps) => {\r\n    const {\r\n        id,\r\n        placeholder,\r\n        required,\r\n        readonly,\r\n        disabled,\r\n        label,\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        onFocus,\r\n        autofocus,\r\n        options,\r\n        schema,\r\n        rawErrors = []\r\n    } = props;\r\n\r\n    const searchField = options.searchField ?? 'search'\r\n    const responseField = options.responseField ?? 'text'\r\n    const params = options?.params ?? ''\r\n\r\n    const [examples, setExamples] = useState<string[]>([])\r\n\r\n    const updateExamples = () => {\r\n        if (options.webhook) {\r\n            const url = `${options.webhook}?${searchField}=${value + params}`\r\n            axios.get(url).then(res => res.data).then(res => setExamples(res.results)).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const _onChange = ({\r\n                           target: {value},\r\n                       }: React.ChangeEvent<HTMLInputElement>) => {\r\n        updateExamples()\r\n        return onChange(value === \"\" ? options.emptyValue : value)\r\n    };\r\n    const _onBlur = ({target: {value}}: React.FocusEvent<HTMLInputElement>) =>\r\n        onBlur(id, value);\r\n    const _onFocus = ({\r\n                          target: {value},\r\n                      }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n    const inputType = (schema.type) === 'string' ? 'text' : `${schema.type}`\r\n\r\n    return (\r\n        <Form.Group className=\"mb-0\">\r\n            <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                {label || schema.title}\r\n                {(label || schema.title) && required ? \"*\" : null}\r\n            </Form.Label>\r\n            <Form.Control\r\n                id={id}\r\n                placeholder={placeholder}\r\n                autoFocus={autofocus}\r\n                required={required}\r\n                disabled={disabled}\r\n                readOnly={readonly}\r\n                className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n                list={`examples_${id}`}\r\n                type={inputType}\r\n                value={value || value === 0 ? value : \"\"}\r\n                onChange={_onChange}\r\n                onBlur={_onBlur}\r\n                onFocus={_onFocus}\r\n            />\r\n            {examples && examples.length > 0 ? (\r\n                <datalist id={`examples_${id}`}>\r\n                    {(examples as string[])\r\n                        .map((example: any, index) => {\r\n                            return <option key={`${example[responseField as string]}_${index}`} value={example[responseField as string]}/>;\r\n                        })}\r\n                </datalist>\r\n            ) : null}\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst RadioWidget = ({\r\n  id,\r\n  schema,\r\n  options,\r\n  value,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  label,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled } = options;\r\n\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  const inline = Boolean(options && options.inline);\r\n\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label className=\"d-block\">\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      {(enumOptions as any).map((option: any, i: number) => {\r\n        const itemDisabled =\r\n          Array.isArray(enumDisabled) &&\r\n          enumDisabled.indexOf(option.value) !== -1;\r\n        const checked = option.value == value;\r\n\r\n        const radio = (\r\n          <Form.Check\r\n            inline={inline}\r\n            label={option.label}\r\n            id={`${id}_${option.label}`}\r\n            key={i}\r\n            name={id}\r\n            type=\"radio\"\r\n            disabled={disabled || itemDisabled || readonly}\r\n            checked={checked}\r\n            required={required}\r\n            value={option.value}\r\n            onChange={_onChange}\r\n            onBlur={_onBlur}\r\n            onFocus={_onFocus}\r\n          />\r\n        );\r\n        return radio;\r\n      })}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default RadioWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport {WidgetProps} from \"@rjsf/core\";\r\n\r\nconst CustomLinkWidget = ({required, label, value, schema, rawErrors = []}: WidgetProps) => {\r\n    return (\r\n        value ? <Form.Group className=\"mb-0\">\r\n                <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                    {label || schema.title}\r\n                    {(label || schema.title) && required ? \"*\" : null}\r\n                </Form.Label>\r\n                <br/>\r\n                <a href={value}>{value}</a>\r\n            </Form.Group>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default CustomLinkWidget;","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Prompt, useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {getPreviousTasks, getTask, WIDGETS} from \"../../util/Util\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [editorData, setEditorData] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n    const [ready, setReady] = useState(false)\r\n    const [changeCount, setChangeCount] = useState(0)\r\n\r\n    const widgets = WIDGETS\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            let task = await getTask(id)\r\n            let stage = task.stage\r\n\r\n            console.log(task)\r\n\r\n            if (stage && stage.rich_text) {\r\n                setEditorData(stage.rich_text)\r\n            }\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n            let parsed_ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n\r\n            const previousTasks = await getPreviousTasks(id).then(res => res.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            })))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n            setReady(true)\r\n        }\r\n        if (id && currentUser) {\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n            .catch((err) => {\r\n                setLoader(false)\r\n                history.push(path)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        // const data = {responses: e.formData}\r\n        // if (changeCount === 5) {\r\n        //     axios.patch(tasksUrl + id + '/', data).catch((err) => {\r\n        //         alert(\"Изменения не доступны.\")\r\n        //         history.push(path)\r\n        //     })\r\n        //     setChangeCount(0)\r\n        //     console.log(\"SEND CHANGE\")\r\n        // } else {\r\n        //     setChangeCount(changeCount + 1)\r\n        // }\r\n    }\r\n\r\n    const handleBlur = () => {\r\n        const data = {responses: formResponses}\r\n        console.log(\"Saving data\", data)\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .catch((err) => {\r\n                alert(\"Изменения не доступны.\")\r\n                history.push(path)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Prompt\r\n                message={(location, action) => {\r\n                    console.log(\"Backing up...\")\r\n                    const data = {responses: formResponses}\r\n                    if (!complete) {\r\n                        axios.patch(tasksUrl + id + '/', data).then(() => console.log(\"Data Saved\"))\r\n                    }\r\n                    return true\r\n                }}\r\n            />\r\n\r\n            {editorData !== \"\" && <div style={{paddingBottom: 20}}>\r\n                <TextViewer data={editorData}/>\r\n            </div>}\r\n\r\n            {prevTasks.length > 0 &&\r\n            <Grid>\r\n                {prevTasks.map((task: any, i: number) =>\r\n                    <Form\r\n                        key={`prev_task_${i}`}\r\n                        schema={task.json_schema ?? {}}\r\n                        uiSchema={task.ui_schema ?? {}}\r\n                        formData={task.responses ?? {}}\r\n                        widgets={widgets}\r\n                        disabled={true}\r\n                        children={\" \"}\r\n                    />\r\n                )}\r\n            </Grid>\r\n            }\r\n            <Grid>\r\n                <Form\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formResponses}\r\n                    formContext={dataForStoragePath}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete || loader || !ready}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                    {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                </Form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import * as React from 'react';\r\nimport {styled, useTheme, Theme, CSSObject} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport {projectName} from \"../../config/Config\";\r\nimport {signInWithGoogle, signOut} from \"../../util/Firebase\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {getUserCampaigns} from \"../../util/Util\";\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst openedMixin = (theme: Theme): CSSObject => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme: Theme): CSSObject => ({\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: `calc(${theme.spacing(7)} + 1px)`,\r\n    },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({theme, open}) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\r\n    ({theme, open}) => ({\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        boxSizing: 'border-box',\r\n        ...(open && {\r\n            ...openedMixin(theme),\r\n            '& .MuiDrawer-paper': openedMixin(theme),\r\n        }),\r\n        ...(!open && {\r\n            ...closedMixin(theme),\r\n            '& .MuiDrawer-paper': closedMixin(theme),\r\n        }),\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const redirect = (page?: string) => {\r\n        if (page) {\r\n            history.push(`/campaign/${campaignId}/${page}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n\r\n    }\r\n\r\n    const DrawerItems = [\r\n        {page: \"tasks\", title: \"Задания\", icon: <AssignmentIcon/>},\r\n        {page: \"notifications\", title: \"Уведомления\", icon: <NotificationsIcon/>}\r\n    ]\r\n\r\n\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" open={open}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        sx={{\r\n                            marginRight: '36px',\r\n                            ...(open && {display: 'none'}),\r\n                        }}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{cursor: \"pointer\", flexGrow: 1}}\r\n                                onClick={() => redirect()}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\" open={open}>\r\n                <DrawerHeader>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </DrawerHeader>\r\n                <Divider/>\r\n                <List>\r\n                    {DrawerItems.map(item => (\r\n                        <ListItem button key={item.page} onClick={() => redirect(item.page)}>\r\n                            <ListItemIcon>\r\n                                {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={item.title}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 0}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {AppBar, Box, Button, Toolbar, Typography} from \"@mui/material\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{flexGrow: 1}}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 3}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {CardParams} from \"../../util/Types\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ParentCard = (props: CardParams) => {\r\n    const {id, name, description, campaign} = props.data;\r\n    const {onCardButtonClick, openCampaignInfo, selectable} = props;\r\n\r\n    const handleOpen = () => {\r\n        onCardButtonClick(id)\r\n    }\r\n\r\n    const redirectToInfoPage = () => {\r\n        if (openCampaignInfo) {\r\n            openCampaignInfo(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ width: 300 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} {campaign && `Campaign: ${campaign}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {selectable ?\r\n                    <Button size=\"small\" onClick={redirectToInfoPage}>Подробнее</Button>\r\n                    :\r\n                    <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ParentCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport Card from \"./CampaignCard\";\r\nimport {CampaignParams} from \"../../util/Types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getSelectableCampaigns, getUserCampaigns} from \"../../util/Util\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [userCampaigns, setUserCampaigns] = useState<CampaignParams[]>([])\r\n    const [selectableCampaigns, setSelectableCampaigns] = useState<CampaignParams[]>([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getUserCampaigns().then(res => setUserCampaigns(res))\r\n        getSelectableCampaigns().then(res => setSelectableCampaigns(res))\r\n\r\n    }, [])\r\n\r\n    const openCampaignInfo = (id: string | number) => {\r\n        history.push(`/campaign/about/${id}`)\r\n    }\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            {userCampaigns && userCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Мои кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {userCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={false}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            {selectableCampaigns && selectableCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Доступные кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {selectableCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={true}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {Box, Grid, Tab, Tabs} from \"@mui/material\";\r\nimport {a11yProps} from \"../../util/Util\";\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n            <Tabs value={value} onChange={handleChange} centered variant={\"fullWidth\"}>\r\n                <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n            </Tabs>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {requestTaskAssignment, requestTaskCreation} from \"../../util/Util\";\r\nimport {CardProps} from \"../../util/Types\";\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const {id, complete, name, description, creatable, selectable, integrated} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        if (integrated) {\r\n            history.push(`${history.location.pathname}/${id}/integrated`)\r\n        } else {\r\n            history.push(`${history.location.pathname}/${id}`)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        requestTaskCreation(id)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n            .catch(err => alert(err))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Открыть</Button>\r\n        } else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Создать</Button>\r\n        } else {\r\n            return <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{width: 300}}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"span\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"subtitle2\" component=\"span\">\r\n                    {id && !creatable ? `ID: ${id}` : <br/>}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {WIDGETS} from \"../../util/Util\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst QuickTaskContent = (props: { id: string, taskData: any, isAssigned: boolean, integrated?: boolean, refreshTasks?: () => void }) => {\r\n    const {id, taskData, isAssigned, integrated, refreshTasks} = props;\r\n    let {campaignId} = useParams<RouterParams>();\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const widgets = WIDGETS\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            const task = taskData\r\n            const stage = task.stage\r\n\r\n            console.log(task)\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            const previousTasks = task.displayed_prev_tasks?.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            }))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (taskData && currentUser) {\r\n            setData()\r\n        }\r\n    }, [taskData, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => refreshTasks && refreshTasks())\r\n            .catch(error => {\r\n                alert(error)\r\n                setLoader(false)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => window.location.reload())\r\n            .catch(error => alert(error))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid direction='row' container spacing={1}>\r\n                {prevTasks?.length > 0 &&\r\n                <Grid container item sm={6} xs={12} sx={{display: 'block'}}>\r\n                    {prevTasks.map((task: any, i: number) =>\r\n                        <Form\r\n                            key={`prev_task_${i}`}\r\n                            schema={task.json_schema ?? {}}\r\n                            uiSchema={task.ui_schema ?? {}}\r\n                            formData={task.responses ?? {}}\r\n                            widgets={widgets}\r\n                            disabled={true}\r\n                            children={\" \"}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                }\r\n                <Grid container item sm={prevTasks?.length > 0 ? 6 : 12} xs={12} sx={{display: 'block'}}>\r\n                    <Form\r\n                        schema={schema ?? {}}\r\n                        uiSchema={uiSchema ?? {}}\r\n                        formData={formResponses ?? {}}\r\n                        formContext={dataForStoragePath}\r\n                        liveOmit={true}\r\n                        omitExtraData={true}\r\n                        widgets={widgets}\r\n                        disabled={complete || !isAssigned}\r\n                        onChange={handleChange}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {integrated ? \" \" :\r\n                            <Box display={\"flex\"}>\r\n                                <Button type=\"submit\" disabled={complete || !isAssigned}>Submit</Button>\r\n                                {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                            </Box>}\r\n                        {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                    </Form>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default QuickTaskContent\r\n","import React, {useEffect, useState} from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton, {IconButtonProps} from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {QuickTaskProps} from \"../../util/Types\";\r\nimport QuickTaskContent from \"./QuckTaskContent\";\r\nimport {Button, Stack} from \"@mui/material\";\r\nimport {requestTaskAssignment} from \"../../util/Util\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n    expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n    const {expand, ...other} = props;\r\n    return <IconButton {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nconst QuickTask = (props: QuickTaskProps) => {\r\n    const {\r\n        id,\r\n        name,\r\n        creatable,\r\n        task,\r\n        expand,\r\n        refreshTasks,\r\n        integrated,\r\n        handleAction,\r\n        excluded\r\n    } = props;\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [isAssigned, setAssigned] = useState(integrated ?? false);\r\n\r\n    useEffect(() => {\r\n        setExpanded(expand)\r\n    }, [expand])\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => setAssigned(true))\r\n            .catch(err => {\r\n                alert(err)\r\n                if (refreshTasks) {\r\n                    refreshTasks()\r\n                }\r\n            })\r\n    }\r\n\r\n    const isDisabled = () => {\r\n        if (integrated) {\r\n            if (excluded) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        } else {\r\n            return isAssigned\r\n        }\r\n    }\r\n\r\n    const handleActionClick = () => {\r\n        if (id && handleAction && excluded !== undefined) {\r\n            handleAction(parseInt(id), excluded)\r\n        }\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (integrated) {\r\n            // return <Button size={\"small\"} variant={\"outlined\"}\r\n            //                sx={{borderRadius: \"5em\"}}\r\n            //                hidden={!expanded}\r\n            //                onClick={handleActionClick}>\r\n            //     {excluded ? \"Include\" : \"Exclude\"}\r\n            // </Button>\r\n        } else {\r\n            return <Button size={\"small\"} variant={isAssigned ? \"text\" : \"outlined\"} disabled={isAssigned}\r\n                           sx={{borderRadius: \"5em\"}}\r\n                           onClick={handleSelectable}>\r\n                {isAssigned ? <DoneIcon color={\"primary\"}/> : \"Get\"}\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                action={\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                        {returnButton()}\r\n                        <ExpandMore\r\n                            expand={expanded}\r\n                            onClick={handleExpandClick}\r\n                            disabled={creatable}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon/>\r\n                        </ExpandMore>\r\n                    </Stack>\r\n                }\r\n                sx={{py: 1, px: 2, background: excluded ? \"lightgrey\" : \"\"}}\r\n                title={name}\r\n                subheader={`ID: ${id}`}\r\n                titleTypographyProps={{variant: \"h6\"}}\r\n                subheaderTypographyProps={{variant: \"caption\"}}\r\n            />\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <QuickTaskContent id={id} taskData={task} integrated={integrated} isAssigned={isDisabled()} refreshTasks={refreshTasks}/>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default QuickTask\r\n","import React, {useState} from \"react\";\r\nimport {Button, Grid, TextField} from \"@mui/material\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport QuickTask from \"./QuickTask\";\r\nimport Axios from \"../../util/Axios\";\r\n\r\n\r\ntype TaskListProps = {\r\n    complete?: boolean,\r\n    selectable?: boolean,\r\n    creatable?: boolean,\r\n    tasks: any[],\r\n    refreshTasks?: () => void\r\n}\r\n\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {complete, selectable, tasks, creatable, refreshTasks} = props;\r\n    const [expandAll, setExpandAll] = useState(false)\r\n\r\n    const listTasks = () => {\r\n        return tasks.map((task: any) => {\r\n                if (creatable) {\r\n                    const id = task.id\r\n                    const name = task.name\r\n                    const description = task.description\r\n                    return (\r\n                        <Grid item key={task.id} sx={{p: 1}}>\r\n                            <TaskCard\r\n                                id={id}\r\n                                name={name}\r\n                                description={description}\r\n                                complete={complete}\r\n                                selectable={selectable}\r\n                                creatable={creatable}\r\n                                integrated={false}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                } else {\r\n                    const id = task.id.toString()\r\n                    const name = task.stage.name\r\n                    const description = task.stage.description\r\n                    const integrated = !!task.integrator_group\r\n\r\n                    if (selectable) {\r\n                        if (integrated) {\r\n                            return (\r\n                                <Grid item key={task.id} style={{padding: 10}}>\r\n                                    <TaskCard\r\n                                        id={id}\r\n                                        name={name}\r\n                                        description={description}\r\n                                        complete={complete}\r\n                                        selectable={selectable}\r\n                                        creatable={creatable}\r\n                                        integrated={integrated}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Grid item key={task.id} sx={{p: 1, width: \"100%\"}}>\r\n                                    <QuickTask\r\n                                        id={id}\r\n                                        name={name}\r\n                                        description={description}\r\n                                        complete={complete}\r\n                                        selectable={selectable}\r\n                                        creatable={creatable}\r\n                                        task={task}\r\n                                        expand={expandAll}\r\n                                        refreshTasks={refreshTasks}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    } else {\r\n                        return (\r\n                            <Grid item key={task.id} style={{padding: 10}}>\r\n                                <TaskCard\r\n                                    id={id}\r\n                                    name={name}\r\n                                    description={description}\r\n                                    complete={complete}\r\n                                    selectable={selectable}\r\n                                    creatable={creatable}\r\n                                    integrated={integrated}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleExpand = () => {\r\n        setExpandAll(!expandAll)\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={creatable ? \"row\" : \"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={creatable ? \"flex-start\" : \"center\"}\r\n        >\r\n            {selectable && <Button variant={\"contained\"} onClick={handleExpand}>\r\n                {expandAll ? \"Свернуть все\" : \"Развернуть все\"}\r\n            </Button>}\r\n            {listTasks()}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useEffect, useState} from 'react';\r\nimport {a11yProps, formatDateString, getUserNotifications, paginatedDataHandler} from \"../../util/Util\";\r\nimport {Box, Card, CardContent, Grid, Pagination, Tab, Tabs, Typography, useMediaQuery} from \"@mui/material\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\n\r\n\r\nconst Notifications = ({importance, onlyNew}: { importance?: number, onlyNew?: boolean }) => {\r\n    const [viewedNotifications, setViewedNotifications] = useState<any[]>([]);\r\n    const [notViewedNotifications, setNotViewedNotifications] = useState<any[]>([]);\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const matches = useMediaQuery('(min-width:600px)');\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        if (tab === 0) {\r\n            getUserNotifications(campaignId, false, importance).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n        } else if (tab === 1) {\r\n            getUserNotifications(campaignId, true, importance).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n        }\r\n        setPage(1);\r\n    }, [tab])\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        console.log(tab)\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getUserNotifications(campaignId, false, importance, value).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n            } else if (tab === 1) {\r\n                getUserNotifications(campaignId, true, importance, value).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n\r\n    const openMessage = (id: number) => {\r\n        history.push(`notifications/${id}`)\r\n    }\r\n\r\n    return (\r\n        onlyNew ?\r\n            <div>\r\n                {notViewedNotifications.map(message =>\r\n                    <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                        <Card onClick={() => openMessage(message.id)}\r\n                              sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">\r\n                                    {message.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    {formatDateString(message.created_at)}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n            </div>\r\n            :\r\n            <div>\r\n                <Typography align={\"center\"} variant={\"h5\"} p={2}>Уведомления</Typography>\r\n                <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n                    <Tabs value={tab} onChange={handleTabChange} centered variant={\"fullWidth\"}>\r\n                        <Tab label=\"Непрочитанные\" {...a11yProps(0)} />\r\n                        <Tab label=\"Прочитанные\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                    <TabPanel value={tab} index={0}>\r\n                        {notViewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                    <TabPanel value={tab} index={1}>\r\n                        {viewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                </Box>\r\n                {totalPages > 1 && <Box p={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                    <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                showLastButton/>\r\n                </Box>}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Notifications","import React, {useEffect, useState} from \"react\";\r\nimport Axios from \"../../util/Axios\";\r\nimport {chainsUrl, taskstagesUrl} from \"../../config/Urls\";\r\nimport {Box, FormControl, FormGroup, InputLabel, MenuItem, Select, SelectChangeEvent} from \"@mui/material\";\r\nimport {Form} from \"@rjsf/bootstrap-4\";\r\nimport {WIDGETS} from \"../../util/Util\";\r\n\r\nconst TaskFilter = (props: { campaign: string }) => {\r\n\r\n    const {campaign} = props;\r\n\r\n    const [chainId, setChainId] = useState(\"\")\r\n    const [stageId, setStageId] = useState(\"\")\r\n    const [formStageId, setFormStageId] = useState(\"\")\r\n    const [chains, setChains] = useState([])\r\n    const [stages, setStages] = useState([])\r\n    const [jsonSchema, setJsonSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n\r\n    const widgets = WIDGETS\r\n\r\n    // useEffect(() => {\r\n    //     const savedChain = localStorage.getItem(\"selectable_filter_chain\");\r\n    //     const savedStage = localStorage.getItem(\"selectable_filter_stage\");\r\n    //     if (savedChain) {\r\n    //         setChainId(savedChain)\r\n    //     }\r\n    //     if (savedStage) {\r\n    //         setStageId(savedStage)\r\n    //     }\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${chainsUrl}?campaign=${campaign}`)\r\n            .then(res => res.data)\r\n            .then(res => setChains(res.results))\r\n            .then(() => {\r\n                if (!chainId) {\r\n                    const savedChain = localStorage.getItem(\"selectable_filter_chain\");\r\n                    if (savedChain) {\r\n                        setChainId(savedChain)\r\n                    }\r\n                }\r\n            })\r\n    }, [campaign])\r\n\r\n    useEffect(() => {\r\n        if (chainId && chains.length > 0) {\r\n            Axios.get(`${taskstagesUrl}?chain=${chainId}&chain__campaign=${campaign}`)\r\n                .then(res => res.data)\r\n                .then(res => setStages(res.results))\r\n                .then(() => {\r\n                    if (!formStageId) {\r\n                        const savedStage = localStorage.getItem(\"selectable_filter_stage\");\r\n                        const savedFormStage = localStorage.getItem(\"selectable_filter_form_stage\");\r\n                        if (savedStage) {\r\n                            setStageId(savedStage)\r\n                        }\r\n                        if (savedFormStage) {\r\n                            setFormStageId(savedFormStage)\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }, [chainId])\r\n\r\n    useEffect(() => {\r\n        console.log(formStageId)\r\n        if (formStageId && stages.length > 0) {\r\n            const stage = stages.filter((item: any) => item.id == formStageId)[0] as any\r\n            console.log(stage)\r\n            if (stage) {\r\n                const schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n                const ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n                setJsonSchema(schema)\r\n                setUiSchema(ui)\r\n                const savedResponses = localStorage.getItem(\"selectable_filter_responses\");\r\n                if (savedResponses) {\r\n                    setFormResponses(JSON.parse(savedResponses))\r\n                }\r\n            }\r\n        }\r\n    }, [formStageId])\r\n\r\n\r\n    const handleChainChange = (event: SelectChangeEvent) => {\r\n        setChainId(event.target.value);\r\n        setStageId(\"\")\r\n        setFormStageId(\"\");\r\n        setFormResponses({})\r\n        setJsonSchema({})\r\n        setUiSchema({})\r\n        localStorage.setItem(\"selectable_filter_chain\", event.target.value);\r\n        localStorage.setItem(\"selectable_filter_stage\", \"\");\r\n        localStorage.setItem(\"selectable_filter_form_stage\", \"\");\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify({}));\r\n    };\r\n\r\n    const handleStageChange = (event: SelectChangeEvent) => {\r\n        setStageId(event.target.value)\r\n        localStorage.setItem(\"selectable_filter_stage\", event.target.value);\r\n    }\r\n\r\n    const handleFormStageChange = (event: SelectChangeEvent) => {\r\n        setFormStageId(event.target.value);\r\n        setFormResponses({})\r\n        localStorage.setItem(\"selectable_filter_form_stage\", event.target.value);\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify({}));\r\n    };\r\n\r\n    const handleFormChange = (e: { formData: object }) => {\r\n        setFormResponses(e.formData)\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify(e.formData));\r\n    }\r\n\r\n    const handleFormSubmit = () => {\r\n\r\n    };\r\n\r\n    return (\r\n        <FormGroup>\r\n            <FormControl sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-chain-filter\">Chain</InputLabel>\r\n                <Select\r\n                    labelId=\"select-chain-label\"\r\n                    id=\"select-chain\"\r\n                    value={chainId}\r\n                    label=\"Chain\"\r\n                    onChange={handleChainChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {chains.map((item: any) => <MenuItem key={`filter_chain_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl disabled={chainId === \"\"} sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-stage-filter\">Stage</InputLabel>\r\n                <Select\r\n                    labelId=\"select-stage-label\"\r\n                    id=\"select-stage\"\r\n                    value={stageId}\r\n                    label=\"Stage\"\r\n                    onChange={handleStageChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {stages.map((item: any) => <MenuItem key={`filter_stage_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl disabled={chainId === \"\"} sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-form-stage-filter\">Form Stage</InputLabel>\r\n                <Select\r\n                    labelId=\"select-stage-label\"\r\n                    id=\"select-stage\"\r\n                    value={formStageId}\r\n                    label=\"Form Stage\"\r\n                    onChange={handleFormStageChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {stages.map((item: any) => <MenuItem key={`filter_form_stage_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <Box sx={{m: 1, minWidth: 120}}>\r\n                <Form\r\n                    schema={jsonSchema}\r\n                    uiSchema={uiSchema}\r\n                    widgets={widgets}\r\n                    formData={formResponses}\r\n                    onChange={handleFormChange}\r\n                    onSubmit={handleFormSubmit}\r\n                />\r\n            </Box>\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport default TaskFilter","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Box, Grid, Pagination} from \"@mui/material\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {\r\n    getCompleteTasks,\r\n    getCreatableTasks,\r\n    getOpenTasks,\r\n    getSelectableTasks,\r\n    paginatedDataHandler\r\n} from \"../../util/Util\";\r\nimport Notifications from \"../notifications/Notifications\";\r\nimport TaskFilter from \"./TaskFilter\";\r\n\r\n\r\ntype RouterParams = { campaignId: string }\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {campaignId} = useParams<RouterParams>();\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [tab, setTab] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n    const [creatableTasks, setCreatableTasks] = useState([])\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n            } else if (tab === 1) {\r\n                getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n            } else if (tab === 2) {\r\n                getSelectableTasks(campaignId, value).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n        refreshTasks();\r\n    };\r\n\r\n    const refreshTasks = () => {\r\n        getSelectableTasks(campaignId).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n        getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n        getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n        getCreatableTasks(campaignId).then(res => setCreatableTasks(res))\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshTasks()\r\n    }, [campaignId]);\r\n\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <Notifications importance={0} onlyNew={true}/>\r\n            <TaskList creatable={true} tasks={creatableTasks}/>\r\n            <SimpleTabs value={tab} handleChange={handleTabChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={tab} index={0}>\r\n                    <TaskList complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                    <TaskList complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={tab} index={2}>\r\n                    <Box pb={2}>\r\n                        <TaskFilter\r\n                            campaign={campaignId}\r\n                        />\r\n                    </Box>\r\n                    <TaskList selectable={true} tasks={selectableTasks} refreshTasks={refreshTasks}/>\r\n                    <Box pb={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                        <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                    showLastButton/>\r\n                    </Box>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {campaignsUrl} from \"../../config/Urls\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {Button, Grid, Typography} from \"@mui/material\";\r\nimport {requestCampaignInfo, requestCampaignJoin} from \"../../util/Util\";\r\n\r\n\r\nconst About = () => {\r\n    const {id}: { id: string } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [richText, setRichText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(campaignsUrl, id)\r\n        requestCampaignInfo(id)\r\n            .then(res => {\r\n                const {richText, name, description} = res;\r\n                if (name) {\r\n                    setName(name)\r\n                }\r\n                if (description) {\r\n                    setDescription(description)\r\n                }\r\n                if (richText) {\r\n                    setRichText(richText)\r\n                }\r\n            })\r\n    }, [id])\r\n\r\n    const joinCampaign = () => {\r\n        requestCampaignJoin(id).then(() => history.push(`/campaign/${id}/tasks`))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Typography variant={\"h3\"} align={\"center\"}>{name}</Typography>\r\n            <Typography variant={\"h6\"} align={\"center\"}>{description}</Typography>\r\n            {richText && <TextViewer data={richText}/>}\r\n            <Grid container justifyContent={\"center\"} style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} onClick={joinCampaign}>Присоединиться / Кошулуу</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {getNotificationContent} from \"../../util/Util\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\n\r\n\r\nconst NotificationContent = () => {\r\n    const {id} = useParams<RouterParams>();\r\n    const [data, setData] = useState<any>({})\r\n\r\n    useEffect(() => {\r\n        getNotificationContent(id).then(res => setData(res))\r\n    }, [id])\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item xs={12} p={1}>\r\n                <Typography align={\"center\"} variant={\"h6\"}>{data.title}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextViewer data={data.text}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NotificationContent","import React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport Axios from \"../../util/Axios\";\r\nimport QuickTask from \"./QuickTask\";\r\nimport {Box, Chip, CircularProgress, Divider, Grid} from \"@mui/material\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {getTask, WIDGETS} from \"../../util/Util\";\r\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\r\n\r\n\r\nconst IntegratedTask = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [taskList, setTaskList] = useState<any>([])\r\n    const [taskActionId, setTaskActionId] = useState<number | null>(null)\r\n    const [listOfExcludedTasks, setListOfExcludedTasks] = useState<number[]>([])\r\n\r\n    const [dialogOpen, setDialogOpen] = React.useState(false);\r\n    const [removalReason, setRemovalReason] = useState(\"\")\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n        setRemovalReason(\"\")\r\n        setTaskActionId(null)\r\n    };\r\n\r\n    const widgets = WIDGETS\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            let task = await getTask(id)\r\n            let stage = task.stage\r\n            console.log(\"TASK\", task)\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        const getIntegratedData = () => {\r\n            Axios.get(`${tasksUrl + id}/get_integrated_tasks/`).then(res => setTaskList(res.data))\r\n        }\r\n        if (id && currentUser) {\r\n            getIntegratedData()\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    console.log(\"INTEGRATED LIST\", taskList)\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    const handleActionClick = (taskId: number, excluded: boolean) => {\r\n        setTaskActionId(taskId)\r\n        if (excluded) {\r\n            includeTask(taskId)\r\n        } else {\r\n            handleDialogOpen()\r\n        }\r\n    }\r\n\r\n    const handleRemovalReasonChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRemovalReason(event.target.value)\r\n    }\r\n\r\n    const excludeTask = () => {\r\n        if (taskActionId !== null) {\r\n            const newList = [...listOfExcludedTasks]\r\n            newList.push(taskActionId)\r\n            const parsedList = Array.from(new Set(newList))\r\n            setListOfExcludedTasks(parsedList)\r\n            alert(removalReason)\r\n        }\r\n        handleDialogClose()\r\n    }\r\n\r\n    const includeTask = (taskId: number) => {\r\n        if (taskId !== null) {\r\n            const newList = [...listOfExcludedTasks]\r\n            const index = newList.indexOf(taskId);\r\n            if (index > -1) {\r\n                newList.splice(index, 1);\r\n            }\r\n            const parsedList = Array.from(new Set(newList))\r\n            setListOfExcludedTasks(parsedList)\r\n        }\r\n    }\r\n\r\n    const triggerWebhook = () => {\r\n        Axios.get(`${tasksUrl + id}/trigger_webhook/`).then(res => console.log(res))\r\n    }\r\n\r\n    return (\r\n        <Grid m={2}>\r\n            {/*<IntegratedTaskDialog*/}\r\n            {/*    open={dialogOpen}*/}\r\n            {/*    handleExclude={excludeTask}*/}\r\n            {/*    handleClose={handleDialogClose}*/}\r\n            {/*    handleReasonChange={handleRemovalReasonChange}*/}\r\n            {/*    reason={removalReason}*/}\r\n            {/*/>*/}\r\n            {taskList.map((task: any) =>\r\n                <Grid key={task.id} py={1}>\r\n                    <QuickTask\r\n                        integrated={true}\r\n                        excluded={listOfExcludedTasks.includes(task.id)}\r\n                        task={task}\r\n                        expand={false}\r\n                        id={task.id}\r\n                        name={task.name}\r\n                        handleAction={handleActionClick}\r\n                    />\r\n                </Grid>\r\n            )}\r\n            <Divider sx={{py: 1}}>\r\n                <Chip icon={<ArrowCircleDownIcon />} label=\"Обобщающая форма\" />\r\n            </Divider>\r\n            <Button onClick={triggerWebhook}>Сгенерировать форму</Button>\r\n            <Grid py={1}>\r\n                <Form\r\n                    schema={schema ?? {}}\r\n                    uiSchema={uiSchema ?? {}}\r\n                    formData={formResponses ?? {}}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                </Form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IntegratedTask","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\nimport About from \"./components/campaigns/About\";\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Notifications from \"./components/notifications/Notifications\";\r\nimport NotificationContent from \"./components/notifications/NotificationContent\";\r\nimport IntegratedTask from \"./components/tasks/IntegratedTask\";\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    if (currentUser) {\r\n        const token = localStorage.getItem(\"token\");\r\n        currentUser.getIdToken(false).then((idToken: string) => {\r\n            if (token) {\r\n                if (idToken !== token) {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                localStorage.setItem(\"token\", idToken);\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={\"/campaign/about/:id\"}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id/integrated\">\r\n                                <IntegratedTask/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications\"}>\r\n                                <Notifications/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications/:id\"}>\r\n                                <NotificationContent/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}