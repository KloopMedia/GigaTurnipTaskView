{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","util/Auth.js","components/text-editor/TextViewer.tsx","util/Util.tsx","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/TaskList.tsx","components/tasks/TaskMenu.tsx","components/campaigns/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","taskstagesUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","returnNewState","prevState","update","multiple","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","snap","child","name","put","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","console","log","ref","getDownloadURL","downloadURL","fullPath","filePath","fileLink","url","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomFileWidget","schema","uiSchema","disabled","required","formContext","campaignId","chainId","stageId","userId","taskId","useState","uploadedFiles","setUploadedFiles","fileLinks","currentFile","setCurrentFile","isImageOpen","setIsImageOpen","isVideoOpen","setIsVideoOpen","fileType","setFileType","parsedValue","setParsedValue","privateUpload","private","multipleSelect","hasUploadedFiles","Object","keys","length","isInputRequired","pathToFolder","undefined","useEffect","parsed","JSON","parse","forEach","filename","getDownloadUrl","handleChange","event","target","path","stringify","allFiles","onChange","handleFileClick","getMetadata","metadata","type","contentType","split","alert","closeViewer","src","disableScroll","backgroundStyle","backgroundColor","closeOnClickOutside","onClose","Dialog","open","fullWidth","height","controls","className","title","i","style","onClick","fontSize","padding","margin","links","uploaded","deleteFile","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","TextViewer","data","id","inline","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","getPreviousTasks","get","res","Task","useParams","history","useHistory","useContext","setSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","editorData","setEditorData","loader","setLoader","widgets","customfile","task","stage","rich_text","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","responses","previousTasks","setData","paddingBottom","Grid","formData","liveOmit","omitExtraData","e","patch","onSubmit","push","Button","paddingLeft","CircularProgress","projectName","drawerWidth","openedMixin","theme","transition","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","justifyContent","mixins","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","marginLeft","MuiDrawer","flexShrink","whiteSpace","boxSizing","useTheme","sx","CssBaseline","position","Toolbar","noWrap","component","cursor","flexGrow","email","p","ParentCard","description","campaign","onCardButtonClick","openCampaignInfo","selectable","Card","CardContent","gutterBottom","CardActions","size","Builder","userCampaigns","setUserCampaigns","selectableCampaigns","setSelectableCampaigns","handleCardRedirect","align","container","item","TabPanel","index","other","role","hidden","a11yProps","SimpleTabs","bgcolor","Tabs","centered","Tab","label","showSelectable","TaskCard","creatable","handleOpen","pathname","handleCreate","post","requestTaskCreation","catch","err","handleSelectable","requestTaskAssignment","TaskList","tasks","direction","TaskMenu","setValue","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","creatableTasks","setCreatableTasks","getSelectableTasks","getCompleteTasks","getOpenTasks","getCreatableTasks","newValue","About","setName","setDescription","richText","setRichText","requestCampaignInfo","requestCampaignJoin","App","exact","Appbar","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eb8acc6.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload())\r\n}\r\n\r\nexport default firebase;","import firebase from '../../../util/Firebase'\r\n\r\nconst returnNewState = (prevState, update, multiple) => {\r\n    if (multiple) {\r\n        if (prevState) {\r\n            return {...prevState, ...update}\r\n        } else {\r\n            return update\r\n        }\r\n    } else {\r\n        return update\r\n    }\r\n}\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks, multiple) => {\r\n    if (storageRef) {\r\n        if (!multiple) {\r\n            setFileBeingUploaded({})\r\n            setFileLinks({})\r\n        }\r\n        await Promise.all(files.map(async file => {\r\n            const snap = storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        console.log(\"FILE PATH\", snap.snapshot.ref.fullPath)\r\n                        const filePath = snap.snapshot.ref.fullPath\r\n                        const fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[file.name]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[file.name]: filePath}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    }\r\n    ;\r\n}\r\n\r\nexport default upload","import React from 'react'\r\nimport {Box, LinearProgress, Typography} from \"@mui/material\"\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport ImageViewer from 'react-simple-image-viewer';\r\nimport {Dialog} from \"@mui/material\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, disabled, required, formContext, value} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [uploadedFiles, setUploadedFiles] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState<any>({})\r\n    const [currentFile, setCurrentFile] = useState(\"\")\r\n    const [isImageOpen, setIsImageOpen] = useState(false);\r\n    const [isVideoOpen, setIsVideoOpen] = useState(false);\r\n    const [fileType, setFileType] = useState(\"\")\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    const privateUpload = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].private ? uiSchema[\"ui:options\"].private : false\r\n    const multipleSelect = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].multiple ? uiSchema[\"ui:options\"].multiple : false\r\n    const hasUploadedFiles = Object.keys(uploadedFiles).length > 0\r\n    const isInputRequired = required && !hasUploadedFiles\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        pathToFolder = firebase.storage()\r\n        if (privateUpload) {\r\n            pathToFolder = pathToFolder.ref(\"private\")\r\n        } else {\r\n            pathToFolder = pathToFolder.ref(\"public\")\r\n        }\r\n        pathToFolder = pathToFolder.child(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (value && Object.keys(value).length > 0) {\r\n            console.log(\"value\", value)\r\n            const parsed = JSON.parse(value)\r\n            setParsedValue(parsed)\r\n            Object.keys(parsed).forEach(filename => {\r\n                getDownloadUrl(parsed[filename])\r\n                    .then(url => setUploadedFiles((prevState: any) => ({\r\n                        ...prevState,\r\n                        [filename]: {url: url, status: \"complete\"}\r\n                    })))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files], pathToFolder, setUploadedFiles, setFileLinks, multipleSelect)\r\n        event.target.value = null;\r\n    };\r\n\r\n    const getDownloadUrl = (path: string) => {\r\n        return firebase.storage().ref(path).getDownloadURL()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileLinks && Object.keys(fileLinks).length > 0) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            try {\r\n                let stringify = \"\";\r\n                if (multipleSelect) {\r\n                    const parsed = JSON.parse(value);\r\n                    const allFiles = {...parsed, ...fileLinks};\r\n                    stringify = JSON.stringify(allFiles);\r\n                } else {\r\n                    stringify = JSON.stringify(fileLinks);\r\n                }\r\n                props.onChange(stringify);\r\n            } catch (error) {\r\n                const stringify = JSON.stringify(fileLinks)\r\n                console.error(error)\r\n                props.onChange(stringify)\r\n            }\r\n        }\r\n    }, [fileLinks])\r\n\r\n    const deleteFile = (filename: string) => {\r\n        const parsed = parsedValue\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            props.onChange(stringify)\r\n        }\r\n\r\n        const links = {...fileLinks}\r\n        if (filename in links) {\r\n            delete links[filename]\r\n            setFileLinks(links)\r\n        }\r\n\r\n        const uploaded = {...uploadedFiles}\r\n        if (filename in uploaded) {\r\n            delete uploaded[filename]\r\n            setUploadedFiles(uploaded)\r\n        }\r\n        console.log(\"DELETE LOG\", uploaded)\r\n    };\r\n\r\n    const handleFileClick = async (filename: string) => {\r\n        const parsed = parsedValue;\r\n        console.log(\"FILE CLICK VALUE\", parsed)\r\n        if (filename in parsed) {\r\n            const path = parsed[filename];\r\n            console.log(path)\r\n            const metadata = await firebase.storage().ref().child(path).getMetadata()\r\n            const type = metadata.contentType.split(\"/\")[0]\r\n            console.log(\"FILE TYPE\", type)\r\n            switch (type) {\r\n                case \"image\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsImageOpen(true);\r\n                    break;\r\n                case \"video\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsVideoOpen(true);\r\n                    break;\r\n                default:\r\n                    // window.open(uploadedFiles[filename].url, '_blank');\r\n                    alert(\"Файл не является фото или видео\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeViewer = () => {\r\n        setCurrentFile(\"\")\r\n        setFileType(\"\");\r\n        setIsImageOpen(false);\r\n        setIsVideoOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isImageOpen && <ImageViewer\r\n                src={[currentFile]}\r\n                disableScroll={false}\r\n                backgroundStyle={{\r\n                    backgroundColor: \"rgba(0,0,0,0.8)\"\r\n                }}\r\n                closeOnClickOutside={true}\r\n                onClose={closeViewer}\r\n            />}\r\n            <Dialog\r\n                open={isVideoOpen}\r\n                onClose={closeViewer}\r\n                fullWidth={true}\r\n            >\r\n                <video height=\"360px\" controls>\r\n                    <source src={currentFile} type={fileType}/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </Dialog>\r\n\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} required={isInputRequired} multiple={multipleSelect} type=\"file\"\r\n                   onChange={handleChange}/>\r\n\r\n            {Object.keys(uploadedFiles).map((filename, i) =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                        <p>{filename}</p>\r\n                        {uploadedFiles[filename].status === 'complete' &&\r\n                        <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                            <button\r\n                                onClick={() => handleFileClick(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-success\"\r\n                            >\r\n                                посмотреть файл\r\n                            </button>\r\n                            {!disabled &&\r\n                            <button\r\n                                onClick={() => deleteFile(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-danger\"\r\n                            >\r\n                                удалить\r\n                            </button>}\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    {uploadedFiles[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={uploadedFiles[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import axios from \"./Axios\";\r\nimport {campaignsUrl, taskstagesUrl, tasksUrl} from \"../config/Urls\";\r\nimport {PaginationHandlerProps} from \"./Types\";\r\n\r\nexport const IS_PAGINATION_ON = false\r\n\r\nexport const paginatedDataHandler = ({\r\n                                      data,\r\n                                      setDataFunction,\r\n                                      setCountFunction,\r\n                                      setNextFunction,\r\n                                      setPrevFunction\r\n                                  }: PaginationHandlerProps) => {\r\n    if (IS_PAGINATION_ON) {\r\n        const {results, next, previous, count} = data;\r\n        const numOfPages = Math.ceil(count / 10)\r\n        console.log(numOfPages)\r\n        setDataFunction(results)\r\n        if (setCountFunction) {\r\n            setCountFunction(count < 10 ? 0 : numOfPages)\r\n        }\r\n        if (setNextFunction) {\r\n            setNextFunction(next)\r\n        }\r\n        if (setPrevFunction) {\r\n            setPrevFunction(previous)\r\n        }\r\n    } else {\r\n        setDataFunction(data)\r\n    }\r\n}\r\n\r\n// Campaigns Functions\r\nexport const getCampaigns = () => {\r\n    return axios.get(campaignsUrl)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getUserCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_campaigns/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"user_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getSelectableCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_selectable/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"selectable_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const requestCampaignJoin = (id: string | number) => {\r\n    return axios.post(campaignsUrl + id + '/join_campaign/')\r\n}\r\n\r\nexport const requestCampaignInfo = (id: string | number) => {\r\n    return axios.get(campaignsUrl + id + '/')\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\n// TaskCard Functions\r\nexport const requestTaskCreation = (id: string | number) => {\r\n    return axios.post(taskstagesUrl + id + '/create_task/')\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const requestTaskAssignment = (id: string | number) => {\r\n    return axios.post(tasksUrl + id + '/request_assignment/')\r\n}\r\n\r\n\r\n// TaskMenu Functions\r\nexport const getSelectableTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\nexport const getCompleteTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${true}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\nexport const getOpenTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${false}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\nexport const getCreatableTasks = (campaignId: string | number) => {\r\n    return axios.get(`${taskstagesUrl}user_relevant/?chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\n\r\n// Task Functions\r\nexport const getPreviousTasks = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/list_displayed_previous/`)\r\n        .then(res => res.data)\r\n}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {getPreviousTasks} from \"../../util/Util\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [editorData, setEditorData] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getTask = () => {\r\n            return axios.get(tasksUrl + id + '/').then((res: any) => res.data)\r\n        }\r\n        const setData = async () => {\r\n            let task = await getTask()\r\n            let stage = task.stage\r\n\r\n            if (stage && stage.rich_text) {\r\n                setEditorData(stage.rich_text)\r\n            }\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n\r\n            const previousTasks = await getPreviousTasks(id).then(res => res.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: JSON.parse(task.stage.json_schema),\r\n                ui_schema: JSON.parse(task.stage.ui_schema)\r\n            })))\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (id && currentUser) {\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {editorData !== \"\" && <div style={{paddingBottom: 20}}>\r\n                <TextViewer data={editorData}/>\r\n            </div>}\r\n\r\n            {prevTasks.length > 0 &&\r\n            <Grid>\r\n                {prevTasks.map((task: any, i: number) =>\r\n                    <Form\r\n                        key={`prev_task_${i}`}\r\n                        schema={task.json_schema ?? {}}\r\n                        uiSchema={task.ui_schema ?? {}}\r\n                        formData={task.responses ?? {}}\r\n                        widgets={widgets}\r\n                        disabled={true}\r\n                        children={\" \"}\r\n                    />\r\n                )}\r\n            </Grid>\r\n            }\r\n            <Grid>\r\n                <Form\r\n                    schema={schema ?? {}}\r\n                    uiSchema={uiSchema ?? {}}\r\n                    formData={formResponses ?? {}}\r\n                    formContext={dataForStoragePath}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                    {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                </Form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import * as React from 'react';\r\nimport {styled, useTheme, Theme, CSSObject} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport {projectName} from \"../../config/Config\";\r\nimport {signInWithGoogle, signOut} from \"../../util/Firebase\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {getUserCampaigns} from \"../../util/Util\";\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst openedMixin = (theme: Theme): CSSObject => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme: Theme): CSSObject => ({\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.up('sm')]: {\r\n        width: `calc(${theme.spacing(9)} + 1px)`,\r\n    },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({theme, open}) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\r\n    ({theme, open}) => ({\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        boxSizing: 'border-box',\r\n        ...(open && {\r\n            ...openedMixin(theme),\r\n            '& .MuiDrawer-paper': openedMixin(theme),\r\n        }),\r\n        ...(!open && {\r\n            ...closedMixin(theme),\r\n            '& .MuiDrawer-paper': closedMixin(theme),\r\n        }),\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const redirectToMain = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" open={open}>\r\n                <Toolbar>\r\n                    {/*<IconButton*/}\r\n                    {/*    color=\"inherit\"*/}\r\n                    {/*    aria-label=\"open drawer\"*/}\r\n                    {/*    onClick={handleDrawerOpen}*/}\r\n                    {/*    edge=\"start\"*/}\r\n                    {/*    sx={{*/}\r\n                    {/*        marginRight: '36px',*/}\r\n                    {/*        ...(open && {display: 'none'}),*/}\r\n                    {/*    }}*/}\r\n                    {/*>*/}\r\n                    {/*    <MenuIcon/>*/}\r\n                    {/*</IconButton>*/}\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{cursor: \"pointer\", flexGrow: 1 }}\r\n                                onClick={redirectToMain}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            {/*<Drawer variant=\"permanent\" open={open}>*/}\r\n            {/*    <DrawerHeader>*/}\r\n            {/*        <IconButton onClick={handleDrawerClose}>*/}\r\n            {/*            {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}*/}\r\n            {/*        </IconButton>*/}\r\n            {/*    </DrawerHeader>*/}\r\n            {/*    <Divider/>*/}\r\n            {/*</Drawer>*/}\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 0}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {AppBar, Box, Button, Toolbar, Typography} from \"@mui/material\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{flexGrow: 1}}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 3}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {CardParams} from \"../../util/Types\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ParentCard = (props: CardParams) => {\r\n    const {id, name, description, campaign} = props.data;\r\n    const {onCardButtonClick, openCampaignInfo, selectable} = props;\r\n\r\n    const handleOpen = () => {\r\n        onCardButtonClick(id)\r\n    }\r\n\r\n    const redirectToInfoPage = () => {\r\n        if (openCampaignInfo) {\r\n            openCampaignInfo(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ width: 300 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} {campaign && `Campaign: ${campaign}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {selectable ?\r\n                    <Button size=\"small\" onClick={redirectToInfoPage}>Подробнее</Button>\r\n                    :\r\n                    <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ParentCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport Card from \"./CampaignCard\";\r\nimport {CampaignParams} from \"../../util/Types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getSelectableCampaigns, getUserCampaigns} from \"../../util/Util\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [userCampaigns, setUserCampaigns] = useState<CampaignParams[]>([])\r\n    const [selectableCampaigns, setSelectableCampaigns] = useState<CampaignParams[]>([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getUserCampaigns().then(res => setUserCampaigns(res))\r\n        getSelectableCampaigns().then(res => setSelectableCampaigns(res))\r\n\r\n    }, [])\r\n\r\n    const openCampaignInfo = (id: string | number) => {\r\n        history.push(`/campaign/about/${id}`)\r\n    }\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            {userCampaigns && userCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Мои кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {userCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={false}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            {selectableCampaigns && selectableCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Доступные кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {selectableCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={true}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {Box, Grid, Tab, Tabs} from \"@mui/material\";\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n            <Tabs value={value} onChange={handleChange} centered variant={\"fullWidth\"}>\r\n                <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n            </Tabs>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {requestTaskAssignment, requestTaskCreation} from \"../../util/Util\";\r\n\r\ntype CardProps = {\r\n    id: number,\r\n    complete?: boolean,\r\n    name: string,\r\n    description?: string,\r\n    creatable?: boolean,\r\n    selectable?: boolean\r\n}\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const {id, complete, name, description, creatable, selectable} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        requestTaskCreation(id)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n            .catch(err => alert(err))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Открыть</Button>\r\n        } else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Создать</Button>\r\n        } else {\r\n            return <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{width: 300}}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"span\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"subtitle2\" component=\"span\">\r\n                    {id && !creatable ? `ID: ${id}` : <br/>}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React from \"react\";\r\nimport {Grid} from \"@mui/material\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\n\r\ntype TaskListProps = {\r\n    complete?: boolean,\r\n    selectable?: boolean,\r\n    creatable?: boolean,\r\n    tasks: any[]\r\n}\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {complete, selectable, tasks, creatable} = props;\r\n\r\n    const listTasks = () => {\r\n        return tasks.map((task: any) => {\r\n                let id, name, description;\r\n                if (creatable) {\r\n                    id = task.id\r\n                    name = task.name\r\n                    description = task.description\r\n                }\r\n                else {\r\n                    id = task.id\r\n                    name = task.stage.name\r\n                    description = task.stage.description\r\n                }\r\n\r\n                return (\r\n                    <Grid item key={task.id} style={{padding: 10}}>\r\n                        <TaskCard\r\n                            id={id}\r\n                            name={name}\r\n                            description={description}\r\n                            complete={complete}\r\n                            selectable={selectable}\r\n                            creatable={creatable}\r\n                        />\r\n                    </Grid>\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={creatable ? \"row\" : \"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={creatable ? \"flex-start\" : \"center\"}\r\n        >\r\n            {listTasks()}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid} from \"@mui/material\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCompleteTasks, getCreatableTasks, getOpenTasks, getSelectableTasks} from \"../../util/Util\";\r\n\r\n\r\ntype RouterParams = { campaignId: string }\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {campaignId} = useParams<RouterParams>();\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [value, setValue] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n    const [creatableTasks, setCreatableTasks] = useState([])\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSelectableTasks(campaignId).then(res => setSelectableTasks(res))\r\n        getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n        getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n        getCreatableTasks(campaignId).then(res => setCreatableTasks(res))\r\n    }, [campaignId])\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <TaskList creatable={true} tasks={creatableTasks}/>\r\n            <SimpleTabs value={value} handleChange={handleChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={value} index={0}>\r\n                    <TaskList complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <TaskList complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={value} index={2}>\r\n                    <TaskList selectable={true} tasks={selectableTasks}/>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {campaignsUrl} from \"../../config/Urls\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {Button, Grid, Typography} from \"@mui/material\";\r\nimport {requestCampaignInfo, requestCampaignJoin} from \"../../util/Util\";\r\n\r\n\r\nconst About = () => {\r\n    const {id}: { id: string } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [richText, setRichText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(campaignsUrl, id)\r\n        requestCampaignInfo(id)\r\n            .then(res => {\r\n                const {richText, name, description} = res;\r\n                if (name) {\r\n                    setName(name)\r\n                }\r\n                if (description) {\r\n                    setDescription(description)\r\n                }\r\n                if (richText) {\r\n                    setRichText(richText)\r\n                }\r\n            })\r\n    }, [id])\r\n\r\n    const joinCampaign = () => {\r\n        requestCampaignJoin(id).then(() => history.push(`/campaign/${id}/tasks`))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Typography variant={\"h3\"} align={\"center\"}>{name}</Typography>\r\n            <Typography variant={\"h6\"} align={\"center\"}>{description}</Typography>\r\n            {richText && <TextViewer data={richText}/>}\r\n            <Grid container justifyContent={\"center\"} style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} onClick={joinCampaign}>Присоединиться / Кошулуу</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\nimport About from \"./components/campaigns/About\";\r\nimport {AuthContext} from \"./util/Auth\";\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    if (currentUser) {\r\n        const token = localStorage.getItem(\"token\");\r\n        currentUser.getIdToken(false).then((idToken: string) => {\r\n            if (token) {\r\n                if (idToken !== token) {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                localStorage.setItem(\"token\", idToken);\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={\"/campaign/about/:id\"}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}