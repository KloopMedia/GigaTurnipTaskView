{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","util/Auth.js","components/text-editor/TextViewer.tsx","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","components/custom-widgets/autocomplete/AutoCompleteWidget.tsx","components/custom-widgets/fixed-radio-widget/FixedRadioWidget.tsx","components/custom-widgets/link-widget/CustomLinkWidget.tsx","util/Util.tsx","components/custom-widgets/audio-widget/AudioWidget.tsx","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/QuickTaskContent.tsx","components/tasks/QuickTask.tsx","components/tasks/TaskList.tsx","components/notifications/Notifications.tsx","components/tasks/TaskFilter.tsx","components/tasks/TaskMenu.tsx","components/campaigns/About.tsx","components/notifications/NotificationContent.tsx","components/tasks/IntegratedTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","taskstagesUrl","tasksUrl","notificationsUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","value","TextViewer","props","data","id","inline","disabled","tinymceScriptSrc","process","init","plugins","toolbar","menubar","image_advtab","importcss_append","returnNewState","prevState","update","multiple","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","period","name","lastIndexOf","substring","ext","console","log","filename","replace","snap","child","put","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","ref","getDownloadURL","downloadURL","fullPath","filePath","fileLink","url","LinearProgressWithLabel","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","CustomFileWidget","schema","uiSchema","required","formContext","campaignId","chainId","stageId","userId","taskId","uploadedFiles","setUploadedFiles","fileLinks","currentFile","setCurrentFile","isImageOpen","setIsImageOpen","isVideoOpen","setIsVideoOpen","fileType","setFileType","parsedValue","setParsedValue","privateUpload","private","multipleSelect","hasUploadedFiles","Object","keys","length","isInputRequired","pathToFolder","undefined","parsed","JSON","parse","forEach","getDownloadUrl","handleChange","event","target","_onBlur","onBlur","path","updateFormResponses","stringify","allFiles","onChange","deleteFile","links","uploaded","handleFileClick","getMetadata","metadata","type","contentType","split","open","closeViewer","src","disableScroll","backgroundStyle","backgroundColor","closeOnClickOutside","onClose","Dialog","fullWidth","height","controls","className","title","onFocus","i","style","onClick","fontSize","padding","margin","AutoCompleteWidget","placeholder","readonly","label","autofocus","options","rawErrors","searchField","responseField","params","examples","setExamples","updateExamples","webhook","get","res","results","catch","err","inputType","Form","Group","Label","Control","autoFocus","readOnly","list","emptyValue","example","index","RadioWidget","enumOptions","enumDisabled","_onChange","_onFocus","Boolean","option","itemDisabled","Array","isArray","indexOf","checked","Check","CustomLinkWidget","href","WIDGETS","customfile","autocomplete","FixedRadioWidget","customlink","audio","record","setRecord","loader","setLoader","defaultRecord","default","Indicator","styled","div","keyframes","handleStopRecording","blobUrl","blob","useReactMediaRecorder","video","onStop","startRecording","stopRecording","Grid","container","item","sx","marginBottom","endIcon","fill","renderButton","CircularProgress","marginLeft","size","paginatedDataHandler","setDataFunction","setCountFunction","count","numOfPages","ceil","createPaginationURL","page","formatDateString","date","d","Date","year","getFullYear","month","addZeroesToDate","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","a11yProps","requestTaskAssignment","post","getSelectableTasks","filter","query","stage","getCompleteTasks","getOpenTasks","getPreviousTasks","getTask","getUserNotifications","viewed","importance","Task","useParams","history","useHistory","useContext","setSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","editorData","setEditorData","ready","setReady","reopened","setReopened","allowGoBack","setAllowGoBack","allowRelease","setAllowRelease","widgets","setData","task","rich_text","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","responses","previousTasks","allow_go_back","allow_release","scrollTo","p","message","action","patch","hidden","paddingBottom","formData","liveOmit","omitExtraData","e","onSubmit","next_direct_id","parseInt","push","Button","marginRight","paddingLeft","projectName","drawerWidth","openedMixin","theme","transition","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","down","DrawerHeader","justifyContent","mixins","AppBar","MuiAppBar","shouldForwardProp","prop","zIndex","drawer","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","useTheme","setOpen","redirect","DrawerItems","icon","CssBaseline","position","Toolbar","IconButton","edge","noWrap","component","cursor","flexGrow","email","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","ParentCard","description","campaign","onCardButtonClick","openCampaignInfo","selectable","Card","CardContent","gutterBottom","CardActions","Builder","userCampaigns","setUserCampaigns","selectableCampaigns","setSelectableCampaigns","handleCardRedirect","align","TabPanel","other","role","SimpleTabs","bgcolor","Tabs","centered","Tab","showSelectable","TaskCard","creatable","integrated","handleOpen","pathname","handleCreate","requestTaskCreation","alert","handleSelectable","flex","QuickTaskContent","taskData","isAssigned","refreshTasks","handleAssignment","displayed_prev_tasks","prev","sm","xs","ExpandMore","expand","transform","shortest","QuickTask","excluded","handleAction","expanded","setExpanded","setAssigned","CardHeader","Stack","m","borderRadius","py","px","background","subheader","titleTypographyProps","subheaderTypographyProps","Collapse","in","timeout","unmountOnExit","TaskList","tasks","expandAll","setExpandAll","integrator_group","Notifications","onlyNew","viewedNotifications","setViewedNotifications","notViewedNotifications","setNotViewedNotifications","totalPages","setTotalPages","setPage","tab","setTab","matches","useMediaQuery","openMessage","created_at","newValue","Pagination","showFirstButton","showLastButton","TaskFilter","onFilter","setChainId","setStageId","formStageId","setFormStageId","chains","setChains","stages","setStages","setJsonSchema","searchValue","setSearchValue","Axios","savedChain","search","savedStage","savedFormStage","ui","savedResponses","FormGroup","TextField","FormControl","InputLabel","Select","labelId","MenuItem","mx","mb","TaskMenu","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","creatableTasks","setCreatableTasks","filterData","setFilterData","getCreatableTasks","pb","About","setName","setDescription","richText","setRichText","requestCampaignInfo","requestCampaignJoin","NotificationContent","getNotificationContent","text","IntegratedTask","taskList","setTaskList","setTaskActionId","listOfExcludedTasks","setListOfExcludedTasks","setDialogOpen","getTaskData","getIntegratedData","handleActionClick","includeTask","newList","splice","parsedList","from","Set","includes","Chip","App","exact","Appbar","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49360c75.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\nconst notificationsUrl = \"/api/v1/notifications/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl,\r\n    notificationsUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload())\r\n}\r\n\r\nexport default firebase;","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import {Editor} from \"@tinymce/tinymce-react\";\r\nimport React from \"react\";\r\n\r\n\r\nconst TextViewer = (props: {data: string}) => {\r\n    const {data} = props;\r\n\r\n    return (\r\n        <Editor\r\n            id={\"ViewerTinyMCE\"}\r\n            value={data}\r\n            inline={false}\r\n            disabled={true}\r\n            tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n            init={{\r\n                plugins: 'autoresize',\r\n                toolbar: false,\r\n                menubar: false,\r\n                image_advtab: true,\r\n                importcss_append: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TextViewer","import firebase from '../../../util/Firebase'\r\n\r\nconst returnNewState = (prevState, update, multiple) => {\r\n    if (multiple) {\r\n        if (prevState) {\r\n            return {...prevState, ...update}\r\n        } else {\r\n            return update\r\n        }\r\n    } else {\r\n        return update\r\n    }\r\n}\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks, multiple) => {\r\n    if (storageRef) {\r\n        if (!multiple) {\r\n            setFileBeingUploaded({})\r\n            setFileLinks({})\r\n        }\r\n        await Promise.all(files.map(async file => {\r\n            const period = file.name.lastIndexOf('.');\r\n            const name = file.name.substring(0, period);\r\n            const ext = file.name.substring(period);\r\n            console.log(\"NAME EXT\", name, ext)\r\n            const filename = name.replace(/\\./g, '_').replace(/ /g, '_') + ext;\r\n            console.log(filename)\r\n            const snap = storageRef.child(filename).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[filename]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[filename]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        console.log(\"FILE PATH\", snap.snapshot.ref.fullPath)\r\n                        const filePath = snap.snapshot.ref.fullPath\r\n                        const fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[filename]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[filename]: filePath}\r\n                            return returnNewState(prevState, update, multiple)\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    }\r\n    ;\r\n}\r\n\r\nexport default upload","import React from 'react'\r\nimport {Box, LinearProgress, Typography} from \"@mui/material\"\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport ImageViewer from 'react-simple-image-viewer';\r\nimport {Dialog} from \"@mui/material\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, disabled, required, formContext, value, id} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [uploadedFiles, setUploadedFiles] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState<any>({})\r\n    const [currentFile, setCurrentFile] = useState(\"\")\r\n    const [isImageOpen, setIsImageOpen] = useState(false);\r\n    const [isVideoOpen, setIsVideoOpen] = useState(false);\r\n    const [fileType, setFileType] = useState(\"\")\r\n    const [parsedValue, setParsedValue] = useState<any>({})\r\n\r\n    const privateUpload = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].private ? uiSchema[\"ui:options\"].private : false\r\n    const multipleSelect = uiSchema[\"ui:options\"] && uiSchema[\"ui:options\"].multiple ? uiSchema[\"ui:options\"].multiple : false\r\n    const hasUploadedFiles = Object.keys(uploadedFiles).length > 0\r\n    const isInputRequired = required && !hasUploadedFiles\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        pathToFolder = firebase.storage()\r\n        if (privateUpload) {\r\n            pathToFolder = pathToFolder.ref(\"private\")\r\n        } else {\r\n            pathToFolder = pathToFolder.ref(\"public\")\r\n        }\r\n        pathToFolder = pathToFolder.child(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (value && Object.keys(value).length > 0) {\r\n            console.log(\"value\", value)\r\n            const parsed = JSON.parse(value)\r\n            setParsedValue(parsed)\r\n            Object.keys(parsed).forEach(filename => {\r\n                getDownloadUrl(parsed[filename])\r\n                    .then(url => setUploadedFiles((prevState: any) => ({\r\n                        ...prevState,\r\n                        [filename]: {url: url, status: \"complete\"}\r\n                    })))\r\n            })\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        await upload([...event.target.files], pathToFolder, setUploadedFiles, setFileLinks, multipleSelect)\r\n        event.target.value = null;\r\n    };\r\n\r\n    const _onBlur = () => props.onBlur(id, uploadedFiles);\r\n    const _onFocus = () => props.onFocus(id, uploadedFiles);\r\n\r\n    const getDownloadUrl = (path: string) => {\r\n        return firebase.storage().ref(path).getDownloadURL()\r\n    }\r\n\r\n    useEffect(() => {\r\n        const updateFormResponses = async () => {\r\n            try {\r\n                let stringify = \"\";\r\n                if (multipleSelect) {\r\n                    const parsed = JSON.parse(value);\r\n                    const allFiles = {...parsed, ...fileLinks};\r\n                    stringify = JSON.stringify(allFiles);\r\n                } else {\r\n                    stringify = JSON.stringify(fileLinks);\r\n                }\r\n                await props.onChange(stringify);\r\n            } catch (error) {\r\n                const stringify = JSON.stringify(fileLinks)\r\n                console.error(error)\r\n                await props.onChange(stringify)\r\n            }\r\n        }\r\n\r\n        if (fileLinks && Object.keys(fileLinks).length > 0) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            updateFormResponses().then(() => _onBlur())\r\n        }\r\n    }, [fileLinks])\r\n\r\n    const deleteFile = async (filename: string) => {\r\n        const parsed = parsedValue\r\n        if (filename in parsed) {\r\n            delete parsed[filename]\r\n            const stringify = JSON.stringify(parsed)\r\n            await props.onChange(stringify)\r\n            _onBlur()\r\n        }\r\n\r\n        const links = {...fileLinks}\r\n        if (filename in links) {\r\n            delete links[filename]\r\n            setFileLinks(links)\r\n        }\r\n\r\n        const uploaded = {...uploadedFiles}\r\n        if (filename in uploaded) {\r\n            delete uploaded[filename]\r\n            setUploadedFiles(uploaded)\r\n        }\r\n        console.log(\"DELETE LOG\", uploaded)\r\n    };\r\n\r\n    const handleFileClick = async (filename: string) => {\r\n        const parsed = parsedValue;\r\n        console.log(\"FILE CLICK VALUE\", parsed)\r\n        if (filename in parsed) {\r\n            const path = parsed[filename];\r\n            console.log(path)\r\n            const metadata = await firebase.storage().ref().child(path).getMetadata()\r\n            const type = metadata.contentType.split(\"/\")[0]\r\n            const ext = metadata.contentType.split(\"/\")[1]\r\n            console.log(\"FILE TYPE\", type)\r\n            switch (type) {\r\n                case \"image\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    setFileType(metadata.contentType);\r\n                    setIsImageOpen(true);\r\n                    break;\r\n                case \"video\":\r\n                    setCurrentFile(uploadedFiles[filename].url);\r\n                    if (ext === 'quicktime') {\r\n                        setFileType('video/mp4');\r\n                    } else {\r\n                        setFileType(metadata.contentType);\r\n                    }\r\n                    setIsVideoOpen(true);\r\n                    break;\r\n                default:\r\n                    window.open(uploadedFiles[filename].url, '_blank');\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeViewer = () => {\r\n        setCurrentFile(\"\")\r\n        setFileType(\"\");\r\n        setIsImageOpen(false);\r\n        setIsVideoOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isImageOpen && <ImageViewer\r\n                src={[currentFile]}\r\n                disableScroll={false}\r\n                backgroundStyle={{\r\n                    backgroundColor: \"rgba(0,0,0,0.8)\"\r\n                }}\r\n                closeOnClickOutside={true}\r\n                onClose={closeViewer}\r\n            />}\r\n            <Dialog\r\n                open={isVideoOpen}\r\n                onClose={closeViewer}\r\n                fullWidth={true}\r\n            >\r\n                <video height=\"360px\" controls>\r\n                    <source src={currentFile} type={fileType}/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </Dialog>\r\n\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} required={isInputRequired} multiple={multipleSelect} type=\"file\"\r\n                   onChange={handleChange} onBlur={_onBlur} onFocus={_onFocus}/>\r\n\r\n            {Object.keys(uploadedFiles).map((filename, i) =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                        <p>{filename}</p>\r\n                        {uploadedFiles[filename].status === 'complete' &&\r\n                        <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                            <button\r\n                                onClick={() => handleFileClick(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-success\"\r\n                            >\r\n                                посмотреть файл\r\n                            </button>\r\n                            {!disabled &&\r\n                            <button\r\n                                onClick={() => deleteFile(filename)}\r\n                                style={{fontSize: \"14px\", padding: 0, margin: \"0 10px\"}}\r\n                                type=\"button\"\r\n                                className=\"btn btn-link text-danger\"\r\n                            >\r\n                                удалить\r\n                            </button>}\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    {uploadedFiles[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={uploadedFiles[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {WidgetProps} from \"@rjsf/core\";\r\nimport axios from \"axios\";\r\n\r\nconst AutoCompleteWidget = (props: WidgetProps) => {\r\n    const {\r\n        id,\r\n        placeholder,\r\n        required,\r\n        readonly,\r\n        disabled,\r\n        label,\r\n        value,\r\n        onChange,\r\n        onBlur,\r\n        onFocus,\r\n        autofocus,\r\n        options,\r\n        schema,\r\n        rawErrors = []\r\n    } = props;\r\n\r\n    const searchField = options.searchField ?? 'search'\r\n    const responseField = options.responseField ?? 'text'\r\n    const params = options?.params ?? ''\r\n\r\n    const [examples, setExamples] = useState<string[]>([])\r\n\r\n    const updateExamples = () => {\r\n        if (options.webhook) {\r\n            const url = `${options.webhook}?${searchField}=${value + params}`\r\n            axios.get(url).then(res => res.data).then(res => setExamples(res.results)).catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const _onChange = ({\r\n                           target: {value},\r\n                       }: React.ChangeEvent<HTMLInputElement>) => {\r\n        updateExamples()\r\n        return onChange(value === \"\" ? options.emptyValue : value)\r\n    };\r\n    const _onBlur = ({target: {value}}: React.FocusEvent<HTMLInputElement>) =>\r\n        onBlur(id, value);\r\n    const _onFocus = ({\r\n                          target: {value},\r\n                      }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n    const inputType = (schema.type) === 'string' ? 'text' : `${schema.type}`\r\n\r\n    return (\r\n        <Form.Group className=\"mb-0\">\r\n            <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                {label || schema.title}\r\n                {(label || schema.title) && required ? \"*\" : null}\r\n            </Form.Label>\r\n            <Form.Control\r\n                id={id}\r\n                placeholder={placeholder}\r\n                autoFocus={autofocus}\r\n                required={required}\r\n                disabled={disabled}\r\n                readOnly={readonly}\r\n                className={rawErrors.length > 0 ? \"is-invalid\" : \"\"}\r\n                list={`examples_${id}`}\r\n                type={inputType}\r\n                value={value || value === 0 ? value : \"\"}\r\n                onChange={_onChange}\r\n                onBlur={_onBlur}\r\n                onFocus={_onFocus}\r\n            />\r\n            {examples && examples.length > 0 ? (\r\n                <datalist id={`examples_${id}`}>\r\n                    {(examples as string[])\r\n                        .map((example: any, index) => {\r\n                            return <option key={`${example[responseField as string]}_${index}`} value={example[responseField as string]}/>;\r\n                        })}\r\n                </datalist>\r\n            ) : null}\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport default AutoCompleteWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { WidgetProps } from \"@rjsf/core\";\r\n\r\nconst RadioWidget = ({\r\n  id,\r\n  schema,\r\n  options,\r\n  value,\r\n  required,\r\n  disabled,\r\n  readonly,\r\n  label,\r\n  onChange,\r\n  onBlur,\r\n  onFocus,\r\n}: WidgetProps) => {\r\n  const { enumOptions, enumDisabled } = options;\r\n\r\n  const _onChange = ({\r\n    target: { value },\r\n  }: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\r\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\r\n    onBlur(id, value);\r\n  const _onFocus = ({\r\n    target: { value },\r\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\r\n\r\n  const inline = Boolean(options && options.inline);\r\n\r\n  return (\r\n    <Form.Group className=\"mb-0\">\r\n      <Form.Label className=\"d-block\">\r\n        {label || schema.title}\r\n        {(label || schema.title) && required ? \"*\" : null}\r\n      </Form.Label>\r\n      {(enumOptions as any).map((option: any, i: number) => {\r\n        const itemDisabled =\r\n          Array.isArray(enumDisabled) &&\r\n          enumDisabled.indexOf(option.value) !== -1;\r\n        const checked = option.value == value;\r\n\r\n        const radio = (\r\n          <Form.Check\r\n            inline={inline}\r\n            label={option.label}\r\n            id={`${id}_${option.label}`}\r\n            key={i}\r\n            name={id}\r\n            type=\"radio\"\r\n            disabled={disabled || itemDisabled || readonly}\r\n            checked={checked}\r\n            required={required}\r\n            value={option.value}\r\n            onChange={_onChange}\r\n            onBlur={_onBlur}\r\n            onFocus={_onFocus}\r\n          />\r\n        );\r\n        return radio;\r\n      })}\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default RadioWidget;","import React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport {WidgetProps} from \"@rjsf/core\";\r\n\r\nconst CustomLinkWidget = ({required, label, value, schema, rawErrors = []}: WidgetProps) => {\r\n    return (\r\n        value ? <Form.Group className=\"mb-0\">\r\n                <Form.Label className={rawErrors.length > 0 ? \"text-danger\" : \"\"}>\r\n                    {label || schema.title}\r\n                    {(label || schema.title) && required ? \"*\" : null}\r\n                </Form.Label>\r\n                <br/>\r\n                <a href={value}>{value}</a>\r\n            </Form.Group>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default CustomLinkWidget;","import axios from \"./Axios\";\r\nimport {campaignsUrl, notificationsUrl, taskstagesUrl, tasksUrl} from \"../config/Urls\";\r\nimport CustomFileWidget from \"../components/custom-widgets/file-widget/CustomFileWidget\";\r\nimport AutoCompleteWidget from \"../components/custom-widgets/autocomplete/AutoCompleteWidget\";\r\nimport FixedRadioWidget from \"../components/custom-widgets/fixed-radio-widget/FixedRadioWidget\";\r\nimport CustomLinkWidget from \"../components/custom-widgets/link-widget/CustomLinkWidget\";\r\nimport AudioWidget from \"../components/custom-widgets/audio-widget/AudioWidget\";\r\n\r\nexport const IS_PAGINATION_ON = false\r\nexport const WIDGETS = {\r\n    customfile: CustomFileWidget,\r\n    autocomplete: AutoCompleteWidget,\r\n    RadioWidget: FixedRadioWidget,\r\n    customlink: CustomLinkWidget,\r\n    audio: AudioWidget\r\n};\r\n\r\n// Pagination Functions\r\nexport const paginatedDataHandler = (\r\n    data: any,\r\n    setDataFunction: (res: any) => void,\r\n    setCountFunction: (count: number) => void,\r\n) => {\r\n    const {results, count} = data;\r\n    const numOfPages = Math.ceil(count / 10)\r\n    console.log(\"numOfPages\", numOfPages)\r\n    console.log(\"results\", results)\r\n    setDataFunction(results)\r\n    setCountFunction(numOfPages)\r\n}\r\n\r\nconst createPaginationURL = (request: string, page?: number) => {\r\n    if (page && page > 0) {\r\n        return `${request}&limit=10&offset=${(page - 1) * 10}`\r\n    } else {\r\n        return request\r\n    }\r\n}\r\n\r\n// Date Functions\r\nexport const formatDateString = (date: string) => {\r\n    const d = new Date(date)\r\n    const year = d.getFullYear()\r\n    const month = addZeroesToDate(d.getMonth() + 1)\r\n    const day = addZeroesToDate(d.getDate())\r\n    const hours = addZeroesToDate(d.getHours())\r\n    const minutes = addZeroesToDate(d.getMinutes())\r\n    const seconds = addZeroesToDate(d.getSeconds())\r\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`\r\n}\r\n\r\nconst addZeroesToDate = (date: number) => {\r\n    return date < 10 ? '0' + date : date\r\n}\r\n\r\n// Tab function\r\nexport const a11yProps = (index: any) => ({\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n});\r\n\r\n// Campaigns Functions\r\nexport const getCampaigns = () => {\r\n    return axios.get(campaignsUrl)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getUserCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_campaigns/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"user_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const getSelectableCampaigns = () => {\r\n    return axios.get(campaignsUrl + 'list_user_selectable/')\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"selectable_campaigns\", res)\r\n            return IS_PAGINATION_ON ? res.results : res\r\n        })\r\n}\r\n\r\nexport const requestCampaignJoin = (id: string | number) => {\r\n    return axios.post(campaignsUrl + id + '/join_campaign/')\r\n}\r\n\r\nexport const requestCampaignInfo = (id: string | number) => {\r\n    return axios.get(campaignsUrl + id + '/')\r\n        .then(res => res.data)\r\n}\r\n\r\n\r\n// TaskCard Functions\r\nexport const requestTaskCreation = (id: string | number) => {\r\n    return axios.post(taskstagesUrl + id + '/create_task/')\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const requestTaskAssignment = (id: string | number) => {\r\n    return axios.post(tasksUrl + id + '/request_assignment/')\r\n}\r\n\r\n\r\n// TaskMenu Functions\r\nexport const getSelectableTasks = (campaignId: string | number, page?: number, filter?: {query?: string, stage?: string} | null) => {\r\n    console.log(page)\r\n    let url = createPaginationURL(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}`, page)\r\n    if (filter) {\r\n        if (filter.query) {\r\n            // url += `&task_responses=${filter.query}`\r\n            url += `&search=${filter.query}`\r\n        }\r\n        if (filter.stage) {\r\n            url += `&stage=${filter.stage}`\r\n        }\r\n        // url = `${tasksUrl}?task_responses=${filter.query}`\r\n    }\r\n    console.log(\"SELECTABLE URL\", url)\r\n    return axios.get(url).then(res => {\r\n        console.log(\"getSelectableTasks\", res.data)\r\n        return res.data;\r\n    })\r\n};\r\n\r\nexport const getCompleteTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${true}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getCompleteTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getOpenTasks = (campaignId: string | number) => {\r\n    return axios.get(`${tasksUrl}user_relevant/?complete=${false}&stage__chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n        .then(res => {\r\n            console.log(\"getOpenTasks\", res)\r\n            return (res)\r\n        })\r\n};\r\n\r\nexport const getCreatableTasks = (campaignId: string | number) => {\r\n    return axios.get(`${taskstagesUrl}user_relevant/?chain__campaign=${campaignId}`)\r\n        .then(res => res.data)\r\n};\r\n\r\n\r\n// Task Functions\r\nexport const getPreviousTasks = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/list_displayed_previous/`)\r\n        .then(res => res.data)\r\n}\r\n\r\nexport const getTask = (id: string | number) => {\r\n    return axios.get(`${tasksUrl + id}/`).then((res: any) => res.data)\r\n}\r\n\r\n\r\n// Notifications Functions\r\nexport const getUserNotifications = (campaignId: string | number, viewed: boolean, importance?: number, page?: number) => {\r\n    console.log(page)\r\n    const url = createPaginationURL(`${notificationsUrl}list_user_notifications/?campaign=${campaignId}&viewed=${viewed}`, page)\r\n    console.log(\"IMPORTANCE\", importance)\r\n    if (importance === 0) {\r\n        return axios.get(`${url}&importance=${importance}`)\r\n            .then(res => res.data)\r\n    } else {\r\n        return axios.get(url)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const getNotificationContent = (id: string | number) => {\r\n    return axios.get(`${notificationsUrl + id}/`).then(res => res.data)\r\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nimport {WidgetProps} from \"@rjsf/core\";\r\nimport {useReactMediaRecorder} from \"react-media-recorder\";\r\nimport {Box, Button, CircularProgress, Grid} from \"@mui/material\";\r\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport firebase from \"../../../util/Firebase\";\r\nimport {keyframes} from \"@emotion/react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst AudioWidget = ({\r\n                         schema,\r\n                         id,\r\n                         options,\r\n                         value,\r\n                         required,\r\n                         disabled,\r\n                         readonly,\r\n                         label,\r\n                         formContext,\r\n                         onChange,\r\n                         onBlur\r\n                     }: WidgetProps) => {\r\n\r\n    const [record, setRecord] = useState<any>(null)\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const privateUpload = options.private ? options.private : false\r\n    const defaultRecord = options.default ? options.default : false\r\n\r\n    let storageRef: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        storageRef = firebase.storage()\r\n        if (privateUpload) {\r\n            storageRef = storageRef.ref(\"private\")\r\n        } else {\r\n            storageRef = storageRef.ref(\"public\")\r\n        }\r\n        storageRef = storageRef.child(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (defaultRecord) {\r\n            setRecord(options.default)\r\n        } else if (value) {\r\n            firebase.storage().ref(value).getDownloadURL().then(url => {\r\n                setRecord(url)\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const Indicator = styled.div`\r\n      width: 10px;\r\n      height: 10px;\r\n      margin-left: 8px;\r\n      border-radius: 50%;\r\n      background-color: red;\r\n      animation: ${keyframes`50% {opacity: 0;}`} 1s linear infinite;\r\n    `\r\n\r\n\r\n    const handleStopRecording = async (blobUrl: string, blob: Blob) => {\r\n        setLoader(true)\r\n        setRecord(blobUrl)\r\n        const ext = blob.type.split('/')[1]\r\n        const filename = id.replace(/\\./g, '_').replace(/ /g, '_') + '.' + ext\r\n        const path = await storageRef.child(filename).put(blob).then((snapshot: any) => snapshot.ref.fullPath)\r\n        setLoader(false)\r\n        onChange(path);\r\n        onBlur(id, path)\r\n    }\r\n\r\n    const {\r\n        status,\r\n        startRecording,\r\n        stopRecording\r\n    } = useReactMediaRecorder({video: false, onStop: handleStopRecording});\r\n\r\n    const renderButton = (status: string) => {\r\n        switch (status) {\r\n            case \"recording\":\r\n                return (\r\n                    <Button\r\n                        variant={\"contained\"}\r\n                        onClick={stopRecording}\r\n                        sx={{marginBottom: 1}}\r\n                        disabled={disabled || readonly}\r\n                        endIcon={<StopCircleIcon/>}\r\n                    >\r\n                        Остановить\r\n                    </Button>\r\n                );\r\n            default:\r\n                return (\r\n                    <Button\r\n                        variant={\"contained\"}\r\n                        onClick={startRecording}\r\n                        sx={{marginBottom: 1}}\r\n                        disabled={disabled || readonly}\r\n                        endIcon={<RadioButtonCheckedIcon sx={{fill: disabled || readonly ? \"grey\" : \"red\"}}/>}\r\n                    >\r\n                        Запись\r\n                    </Button>\r\n                );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <label className={\"form-label\"}>{label}{required && \"*\"}</label>\r\n            {!defaultRecord && <Grid container alignItems={\"center\"}>\r\n                <Grid item>{renderButton(status)}</Grid>\r\n                <Grid item>{status === \"recording\" && <Indicator/>}</Grid>\r\n                <Grid item>{loader && <CircularProgress sx={{marginLeft: 1}} size={30}/>}</Grid>\r\n            </Grid>}\r\n            {record && <Grid container>\r\n                <audio controls src={record}/>\r\n            </Grid>}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AudioWidget;","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {Prompt, useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid, Typography} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {getPreviousTasks, getTask, WIDGETS} from \"../../util/Util\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [editorData, setEditorData] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n    const [ready, setReady] = useState(false)\r\n    const [reopened, setReopened] = useState(false)\r\n    const [allowGoBack, setAllowGoBack] = useState(false)\r\n    const [allowRelease, setAllowRelease] = useState(false)\r\n\r\n    const widgets = WIDGETS\r\n\r\n    const setData = async () => {\r\n        let task = await getTask(id)\r\n        let stage = task.stage\r\n\r\n        if (stage && stage.rich_text) {\r\n            setEditorData(stage.rich_text)\r\n        } else {\r\n            setEditorData(\"\")\r\n        }\r\n\r\n        setDataForStoragePath({\r\n            campaignId: campaignId.toString(),\r\n            chainId: stage.chain.id.toString(),\r\n            stageId: stage.id.toString(),\r\n            userId: currentUser.uid,\r\n            taskId: task.id.toString()\r\n        })\r\n\r\n        let parsed_schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n        let parsed_ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n\r\n        const previousTasks = await getPreviousTasks(id).then(res => res.map((task: any) => ({\r\n            responses: task.responses,\r\n            json_schema: task.stage.json_schema ? JSON.parse(task.stage.json_schema) : {},\r\n            ui_schema: task.stage.ui_schema ? JSON.parse(task.stage.ui_schema) : {}\r\n        })))\r\n\r\n        setPrevTasks(previousTasks)\r\n        setFormResponses(task.responses)\r\n        setSchema(parsed_schema)\r\n        setUiSchema(parsed_ui)\r\n        setComplete(task.complete)\r\n        setReopened(task.reopened)\r\n        setAllowGoBack(stage.allow_go_back)\r\n        setAllowRelease(stage.allow_release)\r\n        setReady(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id && currentUser) {\r\n            setData().then(() => window.scrollTo(0, 0))\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(\"submit\")\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setLoader(false)\r\n                if (res.data.next_direct_id) {\r\n                    setSchema({})\r\n                    setUiSchema({})\r\n                    setFormResponses({})\r\n                    if (res.data.next_direct_id === parseInt(id)) {\r\n                        setData()\r\n                    }\r\n                    history.push(`${path}/${res.data.next_direct_id}`)\r\n                } else {\r\n                    history.push(path)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setLoader(false)\r\n                history.push(path)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n    }\r\n\r\n    const handleBlur = () => {\r\n        const data = {responses: formResponses}\r\n        console.log(\"Saving data\", data)\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .catch((err) => {\r\n                // alert(\"Изменения не доступны.\")\r\n                // history.push(path)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleOpenPrevious = () => {\r\n        axios.get(tasksUrl + id + '/open_previous/')\r\n            .then(res => {\r\n                setSchema({})\r\n                setUiSchema({})\r\n                setFormResponses({})\r\n                history.push(`${path}/${res.data.id}`)\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Box p={2}>\r\n            <Prompt\r\n                message={(location, action) => {\r\n                    console.log(\"Backing up...\")\r\n                    const data = {responses: formResponses}\r\n                    if (!complete) {\r\n                        axios.patch(tasksUrl + id + '/', data).then(() => console.log(\"Data Saved\"))\r\n                    }\r\n                    return true\r\n                }}\r\n            />\r\n\r\n            <Typography hidden={!reopened} variant={\"h6\"} color={\"red\"}>Это задание было возвращено</Typography>\r\n\r\n            <Box hidden={!editorData} style={{paddingBottom: 20}}>\r\n                <TextViewer data={editorData}/>\r\n            </Box>\r\n\r\n            {prevTasks.length > 0 &&\r\n                <Grid>\r\n                    {prevTasks.map((task: any, i: number) =>\r\n                        <Form\r\n                            key={`prev_task_${i}`}\r\n                            schema={task.json_schema ?? {}}\r\n                            uiSchema={task.ui_schema ?? {}}\r\n                            formData={task.responses ?? {}}\r\n                            widgets={widgets}\r\n                            disabled={true}\r\n                            children={\" \"}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n            }\r\n            <Grid>\r\n                <Form\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formResponses}\r\n                    formContext={dataForStoragePath}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" style={{marginRight: \"8px\"}}\r\n                                disabled={complete || loader || !ready}>Отправить</Button>\r\n                        {allowGoBack && <Button style={{margin: \"0 8px\"}} disabled={complete || loader || !ready}\r\n                                                onClick={handleOpenPrevious}>К предыдущему таску</Button>}\r\n                        {allowRelease &&\r\n                            <Button variant=\"danger\" disabled={complete || loader || !ready} style={{margin: \"0 8px\"}}\r\n                                    onClick={handleRelease}>Освободить</Button>}\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                </Form>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import * as React from 'react';\r\nimport {styled, useTheme, Theme, CSSObject} from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport AssignmentIcon from '@mui/icons-material/Assignment';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport {projectName} from \"../../config/Config\";\r\nimport {signInWithGoogle, signOut} from \"../../util/Firebase\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {getUserCampaigns} from \"../../util/Util\";\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst openedMixin = (theme: Theme): CSSObject => ({\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n});\r\n\r\nconst closedMixin = (theme: Theme): CSSObject => ({\r\n    transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: `calc(${theme.spacing(7)} + 1px)`,\r\n    [theme.breakpoints.down('sm')]: {\r\n        width: 0,\r\n    },\r\n});\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ninterface AppBarProps extends MuiAppBarProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n    shouldForwardProp: (prop) => prop !== 'open',\r\n})<AppBarProps>(({theme, open}) => ({\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    ...(open && {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\r\n    ({theme, open}) => ({\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        boxSizing: 'border-box',\r\n        ...(open && {\r\n            ...openedMixin(theme),\r\n            '& .MuiDrawer-paper': openedMixin(theme),\r\n        }),\r\n        ...(!open && {\r\n            ...closedMixin(theme),\r\n            '& .MuiDrawer-paper': closedMixin(theme),\r\n        }),\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const redirect = (page?: string) => {\r\n        if (page) {\r\n            history.push(`/campaign/${campaignId}/${page}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n\r\n    }\r\n\r\n    const DrawerItems = [\r\n        {page: \"tasks\", title: \"Задания\", icon: <AssignmentIcon/>},\r\n        {page: \"notifications\", title: \"Уведомления\", icon: <NotificationsIcon/>}\r\n    ]\r\n\r\n\r\n    return (\r\n        <Box sx={{display: 'flex'}}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" open={open}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        sx={{\r\n                            marginRight: '36px',\r\n                            ...(open && {display: 'none'}),\r\n                        }}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{cursor: \"pointer\", flexGrow: 1}}\r\n                                onClick={() => redirect()}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer variant=\"permanent\" open={open}>\r\n                <DrawerHeader>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </DrawerHeader>\r\n                <Divider/>\r\n                <List>\r\n                    {DrawerItems.map(item => (\r\n                        <ListItem button key={item.page} onClick={() => redirect(item.page)}>\r\n                            <ListItemIcon>\r\n                                {item.icon}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={item.title}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <Box sx={{flexGrow: 1, p: 0, width: \"100%\"}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {AppBar, Box, Button, Toolbar, Typography} from \"@mui/material\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\nimport {styled} from \"@mui/material/styles\";\r\n\r\n\r\nconst DrawerHeader = styled('div')(({theme}) => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n}));\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nexport default (props: AppbarProps) => {\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Box sx={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap component=\"div\" sx={{flexGrow: 1}}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Выйти\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Войти\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box component=\"main\" sx={{flexGrow: 1, p: 3}}>\r\n                <DrawerHeader/>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\nimport {CardParams} from \"../../util/Types\";\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ParentCard = (props: CardParams) => {\r\n    const {id, name, description, campaign} = props.data;\r\n    const {onCardButtonClick, openCampaignInfo, selectable} = props;\r\n\r\n    const handleOpen = () => {\r\n        onCardButtonClick(id)\r\n    }\r\n\r\n    const redirectToInfoPage = () => {\r\n        if (openCampaignInfo) {\r\n            openCampaignInfo(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ width: 300 }}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id} {campaign && `Campaign: ${campaign}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {selectable ?\r\n                    <Button size=\"small\" onClick={redirectToInfoPage}>Подробнее</Button>\r\n                    :\r\n                    <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ParentCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport Card from \"./CampaignCard\";\r\nimport {CampaignParams} from \"../../util/Types\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getSelectableCampaigns, getUserCampaigns} from \"../../util/Util\";\r\n\r\n\r\nconst Builder = () => {\r\n    const [userCampaigns, setUserCampaigns] = useState<CampaignParams[]>([])\r\n    const [selectableCampaigns, setSelectableCampaigns] = useState<CampaignParams[]>([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getUserCampaigns().then(res => setUserCampaigns(res))\r\n        getSelectableCampaigns().then(res => setSelectableCampaigns(res))\r\n\r\n    }, [])\r\n\r\n    const openCampaignInfo = (id: string | number) => {\r\n        history.push(`/campaign/about/${id}`)\r\n    }\r\n\r\n    const handleCardRedirect = (id: string | number) => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            {userCampaigns && userCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Мои кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {userCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={false}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n\r\n            {selectableCampaigns && selectableCampaigns.length > 0 && <Grid>\r\n                <Typography align={\"center\"} variant={\"h4\"}>Доступные кампании</Typography>\r\n                <Grid container justifyContent={\"center\"}>\r\n                    {selectableCampaigns.map(campaign => (\r\n                        <Grid item key={campaign.id} style={{padding: 10}}>\r\n                            <Card data={campaign}\r\n                                  onCardButtonClick={handleCardRedirect}\r\n                                  openCampaignInfo={openCampaignInfo}\r\n                                  selectable={true}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {Box, Grid, Tab, Tabs} from \"@mui/material\";\r\nimport {a11yProps} from \"../../util/Util\";\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n            <Tabs value={value} onChange={handleChange} centered variant={\"fullWidth\"}>\r\n                <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n            </Tabs>\r\n            {props.children}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {requestTaskAssignment, requestTaskCreation} from \"../../util/Util\";\r\nimport {CardProps} from \"../../util/Types\";\r\nimport {Box, Grid} from \"@mui/material\";\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const {id, complete, reopened, name, description, creatable, selectable, integrated} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        if (integrated) {\r\n            history.push(`${history.location.pathname}/${id}/integrated`)\r\n        } else {\r\n            history.push(`${history.location.pathname}/${id}`)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        requestTaskCreation(id)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n            .catch(err => alert(err))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Открыть</Button>\r\n        } else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Создать</Button>\r\n        } else {\r\n            return <Grid container>\r\n                <Box flex={1}>\r\n                    <Button size=\"small\" onClick={handleOpen}>Открыть</Button>\r\n                </Box>\r\n                {!complete && reopened && <Typography variant={\"subtitle1\"} color={\"red\"}>Возвращено</Typography>}\r\n            </Grid>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card sx={{width: 300}}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"span\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"subtitle2\" component=\"span\">\r\n                    {id && !creatable ? `ID: ${id}` : <br/>}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid} from \"@mui/material\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {getPreviousTasks, WIDGETS} from \"../../util/Util\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\ntype QuickTaskContentParams = { id: string, taskData: any, isAssigned: boolean, handleAssignment: (value: boolean) => void, integrated?: boolean, refreshTasks?: () => void }\r\n\r\nconst QuickTaskContent = (props: QuickTaskContentParams) => {\r\n    const {id, taskData, isAssigned, integrated, refreshTasks, handleAssignment} = props;\r\n    let {campaignId} = useParams<RouterParams>();\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [loader, setLoader] = useState(false)\r\n    const [ready, setReady] = useState(false)\r\n    const [allowRelease, setAllowRelease] = useState(false)\r\n\r\n    const widgets = WIDGETS\r\n\r\n    useEffect(() => {\r\n        const setData = async () => {\r\n            const task = taskData\r\n            const stage = task.stage\r\n\r\n            console.log(task)\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n            let parsed_ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n\r\n            const prev = task.displayed_prev_tasks ? task.displayed_prev_tasks : await getPreviousTasks(id)\r\n\r\n            const previousTasks = prev.map((task: any) => ({\r\n                responses: task.responses,\r\n                json_schema: task.stage.json_schema ? JSON.parse(task.stage.json_schema) : {},\r\n                ui_schema: task.stage.ui_schema ? JSON.parse(task.stage.ui_schema) : {}\r\n            }))\r\n\r\n            console.log(\"previousTasks\", previousTasks)\r\n\r\n            setPrevTasks(previousTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n            setAllowRelease(stage.allow_release)\r\n            setReady(true)\r\n        }\r\n        if (taskData && currentUser) {\r\n            setData()\r\n        }\r\n    }, [taskData, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => setLoader(false))\r\n            .then(() => refreshTasks && refreshTasks())\r\n            .catch(error => {\r\n                alert(error)\r\n                setLoader(false)\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => handleAssignment(false))\r\n            .then(() => refreshTasks && refreshTasks())\r\n            .catch(error => alert(error))\r\n    }\r\n\r\n    const handleUnsubmit = () => {\r\n        axios.get(tasksUrl + id + '/uncomplete/').then(res => refreshTasks && refreshTasks())\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid direction='row' container spacing={1}>\r\n                {prevTasks?.length > 0 &&\r\n                <Grid container item sm={6} xs={12} sx={{display: 'block'}}>\r\n                    {prevTasks.map((task: any, i: number) =>\r\n                        <Form\r\n                            key={`prev_task_${i}`}\r\n                            schema={task.json_schema ?? {}}\r\n                            uiSchema={task.ui_schema ?? {}}\r\n                            formData={task.responses ?? {}}\r\n                            widgets={widgets}\r\n                            disabled={true}\r\n                            children={\" \"}\r\n                        />\r\n                    )}\r\n                </Grid>\r\n                }\r\n                <Grid container item sm={prevTasks?.length > 0 ? 6 : 12} xs={12} sx={{display: 'block'}}>\r\n                    <Form\r\n                        schema={schema ?? {}}\r\n                        uiSchema={uiSchema ?? {}}\r\n                        formData={formResponses ?? {}}\r\n                        formContext={dataForStoragePath}\r\n                        liveOmit={true}\r\n                        omitExtraData={true}\r\n                        widgets={widgets}\r\n                        disabled={complete || !isAssigned}\r\n                        onChange={handleChange}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {integrated ?\r\n                            <Box display={\"flex\"}>\r\n                                {complete ?\r\n                                    <Button onClick={handleUnsubmit} disabled={!complete || !isAssigned}>Return</Button>\r\n                                    :\r\n                                    <Button type=\"submit\" disabled={complete || !ready || !isAssigned}>Submit</Button>\r\n                                }\r\n                            </Box>\r\n                            :\r\n                            <Box display={\"flex\"}>\r\n                                <Button type=\"submit\" style={{marginRight: \"8px\"}} disabled={complete || !isAssigned || !ready}>Submit</Button>\r\n                                {allowRelease && <Button variant=\"danger\" disabled={complete || !isAssigned || !ready}\r\n                                         style={{margin: \"0 8px\"}} onClick={handleRelease}>Release</Button>}\r\n                                {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                            </Box>}\r\n                    </Form>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default QuickTaskContent\r\n","import React, {useEffect, useState} from 'react';\r\nimport {styled} from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton, {IconButtonProps} from '@mui/material/IconButton';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {QuickTaskProps} from \"../../util/Types\";\r\nimport QuickTaskContent from \"./QuickTaskContent\";\r\nimport {Box, Button, Stack} from \"@mui/material\";\r\nimport {requestTaskAssignment} from \"../../util/Util\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n    expand: boolean;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n    const {expand, ...other} = props;\r\n    return <IconButton {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nconst QuickTask = (props: QuickTaskProps) => {\r\n    const {\r\n        id,\r\n        name,\r\n        creatable,\r\n        task,\r\n        expand,\r\n        refreshTasks,\r\n        integrated,\r\n        handleAction,\r\n        excluded\r\n    } = props;\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [isAssigned, setAssigned] = useState(integrated ?? false);\r\n\r\n    useEffect(() => {\r\n        setExpanded(expand)\r\n    }, [expand])\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        requestTaskAssignment(id)\r\n            .then(res => setAssigned(true))\r\n            .catch(err => {\r\n                alert(err)\r\n                if (refreshTasks) {\r\n                    refreshTasks()\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleAssignment = (value: boolean) => {\r\n        setAssigned(value)\r\n    }\r\n\r\n    const isDisabled = () => {\r\n        if (integrated) {\r\n            if (excluded) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        } else {\r\n            return isAssigned\r\n        }\r\n    }\r\n\r\n    const handleActionClick = () => {\r\n        if (id && handleAction && excluded !== undefined) {\r\n            handleAction(parseInt(id), excluded)\r\n        }\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (integrated) {\r\n            // return <Button size={\"small\"} variant={\"outlined\"}\r\n            //                sx={{borderRadius: \"5em\"}}\r\n            //                hidden={!expanded}\r\n            //                onClick={handleActionClick}>\r\n            //     {excluded ? \"Include\" : \"Exclude\"}\r\n            // </Button>\r\n            if (task.complete) {\r\n                return <Box m={1}><CheckCircleOutlineIcon color={\"primary\"}/></Box>\r\n            }\r\n        } else {\r\n            return <Button size={\"small\"} variant={isAssigned ? \"text\" : \"outlined\"} disabled={isAssigned}\r\n                           sx={{borderRadius: \"5em\"}}\r\n                           onClick={handleSelectable}>\r\n                {isAssigned ? <DoneIcon color={\"primary\"}/> : \"Get\"}\r\n            </Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                action={\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                        {returnButton()}\r\n                        <ExpandMore\r\n                            expand={expanded}\r\n                            onClick={handleExpandClick}\r\n                            disabled={creatable}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon/>\r\n                        </ExpandMore>\r\n                    </Stack>\r\n                }\r\n                sx={{py: 1, px: 2, background: task.complete ? \"lightgrey\" : \"\"}}\r\n                title={name}\r\n                subheader={`ID: ${id}`}\r\n                titleTypographyProps={{variant: \"h6\"}}\r\n                subheaderTypographyProps={{variant: \"caption\"}}\r\n            />\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <QuickTaskContent\r\n                        id={id}\r\n                        taskData={task}\r\n                        integrated={integrated}\r\n                        handleAssignment={handleAssignment}\r\n                        isAssigned={isDisabled()}\r\n                        refreshTasks={refreshTasks}/>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default QuickTask\r\n","import React, {useState} from \"react\";\r\nimport {Button, Grid, TextField} from \"@mui/material\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport QuickTask from \"./QuickTask\";\r\nimport Axios from \"../../util/Axios\";\r\n\r\n\r\ntype TaskListProps = {\r\n    complete?: boolean,\r\n    selectable?: boolean,\r\n    creatable?: boolean,\r\n    tasks: any[],\r\n    refreshTasks?: () => void\r\n}\r\n\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {complete, selectable, tasks, creatable, refreshTasks} = props;\r\n    const [expandAll, setExpandAll] = useState(false)\r\n\r\n    const listTasks = () => {\r\n        return tasks.map((task: any) => {\r\n                if (creatable) {\r\n                    const id = task.id\r\n                    const name = task.name\r\n                    const description = task.description\r\n                    return (\r\n                        <Grid item key={task.id} sx={{p: 1}}>\r\n                            <TaskCard\r\n                                id={id}\r\n                                name={name}\r\n                                description={description}\r\n                                complete={complete}\r\n                                selectable={selectable}\r\n                                creatable={creatable}\r\n                                integrated={false}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                } else {\r\n                    const id = task.id.toString()\r\n                    const name = task.stage.name\r\n                    const description = task.stage.description\r\n                    const integrated = !!task.integrator_group\r\n                    const reopened = task.reopened\r\n                    if (selectable) {\r\n                        if (integrated) {\r\n                            return (\r\n                                <Grid item key={task.id} style={{padding: 10}}>\r\n                                    <TaskCard\r\n                                        id={id}\r\n                                        name={name}\r\n                                        description={description}\r\n                                        complete={complete}\r\n                                        selectable={selectable}\r\n                                        creatable={creatable}\r\n                                        integrated={integrated}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Grid item key={task.id} sx={{p: 1, width: \"100%\"}}>\r\n                                    <QuickTask\r\n                                        id={id}\r\n                                        name={name}\r\n                                        description={description}\r\n                                        complete={complete}\r\n                                        selectable={selectable}\r\n                                        creatable={creatable}\r\n                                        task={task}\r\n                                        expand={expandAll}\r\n                                        refreshTasks={refreshTasks}\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    } else {\r\n                        return (\r\n                            <Grid item key={task.id} style={{padding: 10}}>\r\n                                <TaskCard\r\n                                    id={id}\r\n                                    name={name}\r\n                                    description={description}\r\n                                    complete={complete}\r\n                                    selectable={selectable}\r\n                                    creatable={creatable}\r\n                                    integrated={integrated}\r\n                                    reopened={reopened}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleExpand = () => {\r\n        setExpandAll(!expandAll)\r\n    };\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={creatable ? \"row\" : \"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={creatable ? \"flex-start\" : \"center\"}\r\n        >\r\n            {selectable && <Button variant={\"contained\"} onClick={handleExpand}>\r\n                {expandAll ? \"Свернуть все\" : \"Развернуть все\"}\r\n            </Button>}\r\n            {listTasks()}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useEffect, useState} from 'react';\r\nimport {a11yProps, formatDateString, getUserNotifications, paginatedDataHandler} from \"../../util/Util\";\r\nimport {Box, Card, CardContent, Grid, Pagination, Tab, Tabs, Typography, useMediaQuery} from \"@mui/material\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\n\r\n\r\nconst Notifications = ({importance, onlyNew}: { importance?: number, onlyNew?: boolean }) => {\r\n    const [viewedNotifications, setViewedNotifications] = useState<any[]>([]);\r\n    const [notViewedNotifications, setNotViewedNotifications] = useState<any[]>([]);\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const matches = useMediaQuery('(min-width:600px)');\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<RouterParams>()\r\n\r\n    useEffect(() => {\r\n        if (tab === 0) {\r\n            getUserNotifications(campaignId, false, importance).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n        } else if (tab === 1) {\r\n            getUserNotifications(campaignId, true, importance).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n        }\r\n        setPage(1);\r\n    }, [tab])\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        console.log(tab)\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getUserNotifications(campaignId, false, importance, value).then(res => paginatedDataHandler(res, setNotViewedNotifications, setTotalPages))\r\n            } else if (tab === 1) {\r\n                getUserNotifications(campaignId, true, importance, value).then(res => paginatedDataHandler(res, setViewedNotifications, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n\r\n    const openMessage = (id: number) => {\r\n        history.push(`notifications/${id}`)\r\n    }\r\n\r\n    return (\r\n        onlyNew ?\r\n            <div>\r\n                {notViewedNotifications.map(message =>\r\n                    <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                        <Card onClick={() => openMessage(message.id)}\r\n                              sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\">\r\n                                    {message.title}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"p\">\r\n                                    {formatDateString(message.created_at)}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                )}\r\n            </div>\r\n            :\r\n            <div>\r\n                <Typography align={\"center\"} variant={\"h5\"} p={2}>Уведомления</Typography>\r\n                <Box sx={{width: '100%', bgcolor: 'background.paper'}}>\r\n                    <Tabs value={tab} onChange={handleTabChange} centered variant={\"fullWidth\"}>\r\n                        <Tab label=\"Непрочитанные\" {...a11yProps(0)} />\r\n                        <Tab label=\"Прочитанные\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                    <TabPanel value={tab} index={0}>\r\n                        {notViewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                    <TabPanel value={tab} index={1}>\r\n                        {viewedNotifications.map(message =>\r\n                            <Grid container justifyContent=\"center\" key={message.id} p={1}>\r\n                                <Card onClick={() => openMessage(message.id)}\r\n                                      sx={{width: matches ? 700 : 300, background: 'lightblue', cursor: \"pointer\"}}>\r\n                                    <CardContent>\r\n                                        <Typography variant=\"h6\">\r\n                                            {message.title}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {formatDateString(message.created_at)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        )}\r\n                    </TabPanel>\r\n                </Box>\r\n                {totalPages > 1 && <Box p={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                    <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                showLastButton/>\r\n                </Box>}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Notifications","import React, {useEffect, useState} from \"react\";\r\nimport Axios from \"../../util/Axios\";\r\nimport {chainsUrl, taskstagesUrl} from \"../../config/Urls\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormGroup,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    SelectChangeEvent,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport {Form} from \"@rjsf/bootstrap-4\";\r\nimport {WIDGETS} from \"../../util/Util\";\r\n\r\nconst TaskFilter = (props: { campaign: string, onFilter: (filter: string, stage: string) => void }) => {\r\n\r\n    const {campaign, onFilter} = props;\r\n\r\n    const [chainId, setChainId] = useState(\"\")\r\n    const [stageId, setStageId] = useState(\"\")\r\n    const [formStageId, setFormStageId] = useState(\"\")\r\n    const [chains, setChains] = useState([])\r\n    const [stages, setStages] = useState([])\r\n    const [jsonSchema, setJsonSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState({})\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n    const widgets = WIDGETS\r\n\r\n    useEffect(() => {\r\n        Axios.get(`${chainsUrl}?campaign=${campaign}&limit=100`)\r\n            .then(res => res.data)\r\n            .then(res => setChains(res.results))\r\n            .then(() => {\r\n                if (!chainId) {\r\n                    const savedChain = localStorage.getItem(\"selectable_filter_chain\");\r\n                    if (savedChain) {\r\n                        setChainId(savedChain)\r\n                    }\r\n                }\r\n            })\r\n    }, [campaign])\r\n\r\n    useEffect(() => {\r\n        if (chainId && chains.length > 0) {\r\n            Axios.get(`${taskstagesUrl}?chain=${chainId}&chain__campaign=${campaign}&limit=100`)\r\n                .then(res => res.data)\r\n                .then(res => setStages(res.results))\r\n                .then(() => {\r\n                    if (!searchValue) {\r\n                        const search = localStorage.getItem(\"selectable_filter_search\");\r\n                        if (search) {\r\n                            setSearchValue(search)\r\n                        }\r\n                    }\r\n                    if (!formStageId) {\r\n                        const savedStage = localStorage.getItem(\"selectable_filter_stage\");\r\n                        const savedFormStage = localStorage.getItem(\"selectable_filter_form_stage\");\r\n                        if (savedStage) {\r\n                            setStageId(savedStage)\r\n                        }\r\n                        if (savedFormStage) {\r\n                            setFormStageId(savedFormStage)\r\n                        }\r\n                    }\r\n                })\r\n        }\r\n    }, [chainId])\r\n\r\n    useEffect(() => {\r\n        console.log(formStageId)\r\n        if (formStageId && stages.length > 0) {\r\n            const stage = stages.filter((item: any) => item.id == formStageId)[0] as any\r\n            console.log(stage)\r\n            if (stage) {\r\n                const schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n                const ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n                setJsonSchema(schema)\r\n                setUiSchema(ui)\r\n                const savedResponses = localStorage.getItem(\"selectable_filter_responses\");\r\n                if (savedResponses) {\r\n                    setFormResponses(JSON.parse(savedResponses))\r\n                }\r\n            }\r\n        }\r\n    }, [formStageId])\r\n\r\n\r\n    const handleChainChange = (event: SelectChangeEvent) => {\r\n        setChainId(event.target.value);\r\n        setStageId(\"\")\r\n        setFormStageId(\"\");\r\n        setFormResponses({})\r\n        setJsonSchema({})\r\n        setUiSchema({})\r\n        localStorage.setItem(\"selectable_filter_chain\", event.target.value);\r\n        localStorage.setItem(\"selectable_filter_stage\", \"\");\r\n        localStorage.setItem(\"selectable_filter_form_stage\", \"\");\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify({}));\r\n    };\r\n\r\n    const handleStageChange = (event: SelectChangeEvent) => {\r\n        setStageId(event.target.value)\r\n        localStorage.setItem(\"selectable_filter_stage\", event.target.value);\r\n    }\r\n\r\n    const handleFormStageChange = (event: SelectChangeEvent) => {\r\n        setFormStageId(event.target.value);\r\n        setFormResponses({})\r\n        setJsonSchema({})\r\n        setUiSchema({})\r\n        localStorage.setItem(\"selectable_filter_form_stage\", event.target.value);\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify({}));\r\n    };\r\n\r\n    const handleFormChange = (e: { formData: object }) => {\r\n        setFormResponses(e.formData)\r\n        localStorage.setItem(\"selectable_filter_responses\", JSON.stringify(e.formData));\r\n    }\r\n\r\n    const handleFormSubmit = () => {\r\n        // const query = formStageId ? JSON.stringify({stage: formStageId, responses: formResponses}) : \"\"\r\n        const query = searchValue\r\n        onFilter(query, stageId)\r\n    };\r\n\r\n    const handleSearchValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        localStorage.setItem(\"selectable_filter_search\", event.target.value);\r\n        setSearchValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Box sx={{m: 1, minWidth: 120}}>\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Search Field\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleSearchValueChange}/>\r\n            </Box>\r\n            {chains.length > 0 && <FormControl sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-chain-filter\">Chain</InputLabel>\r\n                <Select\r\n                    labelId=\"select-chain-label\"\r\n                    id=\"select-chain\"\r\n                    value={chainId}\r\n                    label=\"Chain\"\r\n                    onChange={handleChainChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {chains.map((item: any) => <MenuItem key={`filter_chain_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>}\r\n            {chainId && <FormControl disabled={chainId === \"\"} sx={{m: 1, minWidth: 120}}>\r\n                <InputLabel id=\"select-stage-filter\">Stage</InputLabel>\r\n                <Select\r\n                    labelId=\"select-stage-label\"\r\n                    id=\"select-stage\"\r\n                    value={stageId}\r\n                    label=\"Stage\"\r\n                    onChange={handleStageChange}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {stages.map((item: any) => <MenuItem key={`filter_stage_${item.id}`}\r\n                                                         value={item.id}>{item.name}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>}\r\n            {/*<FormControl disabled={chainId === \"\"} sx={{m: 1, minWidth: 120}}>*/}\r\n            {/*    <InputLabel id=\"select-form-stage-filter\">Form Stage</InputLabel>*/}\r\n            {/*    <Select*/}\r\n            {/*        labelId=\"select-stage-label\"*/}\r\n            {/*        id=\"select-stage\"*/}\r\n            {/*        value={formStageId}*/}\r\n            {/*        label=\"Form Stage\"*/}\r\n            {/*        onChange={handleFormStageChange}*/}\r\n            {/*    >*/}\r\n            {/*        <MenuItem value=\"\">*/}\r\n            {/*            <em>None</em>*/}\r\n            {/*        </MenuItem>*/}\r\n            {/*        {stages.map((item: any) => <MenuItem key={`filter_form_stage_${item.id}`}*/}\r\n            {/*                                             value={item.id}>{item.name}</MenuItem>)}*/}\r\n            {/*    </Select>*/}\r\n            {/*</FormControl>*/}\r\n            <Box sx={{m: 1, minWidth: 120}}>\r\n                {/*<Form*/}\r\n                {/*    schema={jsonSchema}*/}\r\n                {/*    uiSchema={uiSchema}*/}\r\n                {/*    widgets={widgets}*/}\r\n                {/*    formData={formResponses}*/}\r\n                {/*    children={\" \"}*/}\r\n                {/*    onChange={handleFormChange}*/}\r\n                {/*    onSubmit={handleFormSubmit}*/}\r\n                {/*/>*/}\r\n            </Box>\r\n            <Button sx={{mx: 1, mb: 2}} variant={\"contained\"} onClick={handleFormSubmit}>Search</Button>\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nexport default TaskFilter","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Box, Grid, Pagination} from \"@mui/material\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {\r\n    getCompleteTasks,\r\n    getCreatableTasks,\r\n    getOpenTasks,\r\n    getSelectableTasks,\r\n    paginatedDataHandler\r\n} from \"../../util/Util\";\r\nimport Notifications from \"../notifications/Notifications\";\r\nimport TaskFilter from \"./TaskFilter\";\r\n\r\n\r\ntype RouterParams = { campaignId: string }\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {campaignId} = useParams<RouterParams>();\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [tab, setTab] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n    const [creatableTasks, setCreatableTasks] = useState([])\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [page, setPage] = React.useState(1);\r\n    const [filterData, setFilterData] = useState<object | null>(null)\r\n\r\n    const handlePageChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n        if (value) {\r\n            if (tab === 0) {\r\n                getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n            } else if (tab === 1) {\r\n                getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n            } else if (tab === 2) {\r\n                getSelectableTasks(campaignId, value, filterData).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleTabChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setTab(newValue);\r\n        setFilterData(null);\r\n        refreshTasks();\r\n    };\r\n\r\n    const refreshTasks = () => {\r\n        getSelectableTasks(campaignId, 1, filterData).then(res => paginatedDataHandler(res, setSelectableTasks, setTotalPages))\r\n        getCompleteTasks(campaignId).then(res => setCompleteTasks(res))\r\n        getOpenTasks(campaignId).then(res => setOpenTasks(res))\r\n        getCreatableTasks(campaignId).then(res => setCreatableTasks(res))\r\n    };\r\n\r\n    const getFilter = (query?: string, stage?: string) => {\r\n        console.log(query, stage)\r\n        const filter = query || stage ? {query: query, stage: stage} : null\r\n        getSelectableTasks(campaignId, 1, filter).then(res => {\r\n            if (res.count > 0) {\r\n                setFilterData(filter)\r\n                setPage(1)\r\n                paginatedDataHandler(res, setSelectableTasks, setTotalPages)\r\n            } else {\r\n                setFilterData(null)\r\n                alert(\"Нет похожих тасков\")\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshTasks()\r\n    }, [campaignId]);\r\n\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <Notifications importance={0} onlyNew={true}/>\r\n            <TaskList creatable={true} tasks={creatableTasks}/>\r\n            <SimpleTabs value={tab} handleChange={handleTabChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={tab} index={0}>\r\n                    <TaskList complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={tab} index={1}>\r\n                    <TaskList complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={tab} index={2}>\r\n                    <Box pb={2}>\r\n                        <TaskFilter campaign={campaignId} onFilter={getFilter}/>\r\n                    </Box>\r\n                    <TaskList selectable={true} tasks={selectableTasks} refreshTasks={refreshTasks}/>\r\n                    <Box pb={2} display={\"flex\"} justifyContent={\"center\"}>\r\n                        <Pagination count={totalPages} page={page} onChange={handlePageChange} showFirstButton\r\n                                    showLastButton/>\r\n                    </Box>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {campaignsUrl} from \"../../config/Urls\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\nimport {Button, Grid, Typography} from \"@mui/material\";\r\nimport {requestCampaignInfo, requestCampaignJoin} from \"../../util/Util\";\r\n\r\n\r\nconst About = () => {\r\n    const {id}: { id: string } = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [richText, setRichText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        console.log(campaignsUrl, id)\r\n        requestCampaignInfo(id)\r\n            .then(res => {\r\n                const {richText, name, description} = res;\r\n                if (name) {\r\n                    setName(name)\r\n                }\r\n                if (description) {\r\n                    setDescription(description)\r\n                }\r\n                if (richText) {\r\n                    setRichText(richText)\r\n                }\r\n            })\r\n    }, [id])\r\n\r\n    const joinCampaign = () => {\r\n        requestCampaignJoin(id).then(() => history.push(`/campaign/${id}/tasks`))\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            <Typography variant={\"h3\"} align={\"center\"}>{name}</Typography>\r\n            <Typography variant={\"h6\"} align={\"center\"}>{description}</Typography>\r\n            {richText && <TextViewer data={richText}/>}\r\n            <Grid container justifyContent={\"center\"} style={{padding: 20}}>\r\n                <Button variant={\"contained\"} color={\"primary\"} onClick={joinCampaign}>Присоединиться / Кошулуу</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {getNotificationContent} from \"../../util/Util\";\r\nimport {Grid, Typography} from \"@mui/material\";\r\nimport TextViewer from \"../text-editor/TextViewer\";\r\n\r\n\r\nconst NotificationContent = () => {\r\n    const {id} = useParams<RouterParams>();\r\n    const [data, setData] = useState<any>({})\r\n\r\n    useEffect(() => {\r\n        getNotificationContent(id).then(res => setData(res))\r\n    }, [id])\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item xs={12} p={1}>\r\n                <Typography align={\"center\"} variant={\"h6\"}>{data.title}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextViewer data={data.text}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default NotificationContent","import React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport Axios from \"../../util/Axios\";\r\nimport QuickTask from \"./QuickTask\";\r\nimport {Box, Chip, CircularProgress, Divider, Grid} from \"@mui/material\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport {RouterParams} from \"../../util/Types\";\r\nimport {getTask, WIDGETS} from \"../../util/Util\";\r\nimport ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';\r\n\r\n\r\nconst IntegratedTask = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [loader, setLoader] = useState(false)\r\n    const [taskList, setTaskList] = useState<any>([])\r\n    const [taskActionId, setTaskActionId] = useState<number | null>(null)\r\n    const [listOfExcludedTasks, setListOfExcludedTasks] = useState<number[]>([])\r\n    const [ready, setReady] = useState(false)\r\n    const [allowGoBack, setAllowGoBack] = useState(false)\r\n    const [allowRelease, setAllowRelease] = useState(false)\r\n\r\n    const [dialogOpen, setDialogOpen] = React.useState(false);\r\n    const [removalReason, setRemovalReason] = useState(\"\")\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n        setRemovalReason(\"\")\r\n        setTaskActionId(null)\r\n    };\r\n\r\n    const widgets = WIDGETS\r\n\r\n    const getTaskData = async () => {\r\n        const task = await getTask(id)\r\n        const stage = task.stage\r\n        console.log(\"TASK\", task)\r\n\r\n        const parsed_schema = stage.json_schema ? JSON.parse(stage.json_schema) : {}\r\n        const parsed_ui = stage.ui_schema ? JSON.parse(stage.ui_schema) : {}\r\n        // const goBack = stage.\r\n\r\n        setFormResponses(task.responses)\r\n        setSchema(parsed_schema)\r\n        setUiSchema(parsed_ui)\r\n        setComplete(task.complete)\r\n        setAllowGoBack(stage.allow_go_back)\r\n        setAllowRelease(stage.allow_release)\r\n        setReady(true)\r\n    }\r\n\r\n    const getIntegratedData = () => {\r\n        Axios.get(`${tasksUrl + id}/get_integrated_tasks/`).then(res => setTaskList(res.data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id && currentUser) {\r\n            getIntegratedData()\r\n            getTaskData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    console.log(\"INTEGRATED LIST\", taskList)\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then((res) => {\r\n                console.log(res)\r\n                setLoader(false)\r\n                if (res.data.next_direct_id) {\r\n                    setSchema({})\r\n                    setUiSchema({})\r\n                    setFormResponses({})\r\n                    if (res.data.next_direct_id === parseInt(id)) {\r\n                        getTaskData()\r\n                        getIntegratedData()\r\n                    }\r\n                    history.push(`${path}/${res.data.next_direct_id}`)\r\n                } else {\r\n                    history.push(path)\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n        let data = {responses: e.formData}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n    }\r\n\r\n    const handleActionClick = (taskId: number, excluded: boolean) => {\r\n        setTaskActionId(taskId)\r\n        if (excluded) {\r\n            includeTask(taskId)\r\n        } else {\r\n            handleDialogOpen()\r\n        }\r\n    }\r\n\r\n    const handleRemovalReasonChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRemovalReason(event.target.value)\r\n    }\r\n\r\n    const excludeTask = () => {\r\n        if (taskActionId !== null) {\r\n            const newList = [...listOfExcludedTasks]\r\n            newList.push(taskActionId)\r\n            const parsedList = Array.from(new Set(newList))\r\n            setListOfExcludedTasks(parsedList)\r\n            alert(removalReason)\r\n        }\r\n        handleDialogClose()\r\n    }\r\n\r\n    const includeTask = (taskId: number) => {\r\n        if (taskId !== null) {\r\n            const newList = [...listOfExcludedTasks]\r\n            const index = newList.indexOf(taskId);\r\n            if (index > -1) {\r\n                newList.splice(index, 1);\r\n            }\r\n            const parsedList = Array.from(new Set(newList))\r\n            setListOfExcludedTasks(parsedList)\r\n        }\r\n    }\r\n\r\n    const triggerWebhook = () => {\r\n        Axios.get(`${tasksUrl + id}/trigger_webhook/`)\r\n            .then(res => getTaskData())\r\n    }\r\n\r\n    const handleOpenPrevious = () => {\r\n        axios.get(tasksUrl + id + '/open_previous/')\r\n            .then(res => {\r\n                setSchema({})\r\n                setUiSchema({})\r\n                setFormResponses({})\r\n                history.push(`${path}/${res.data.id}`)\r\n            })\r\n    };\r\n\r\n    return (\r\n        <Grid m={2}>\r\n            {/*<IntegratedTaskDialog*/}\r\n            {/*    open={dialogOpen}*/}\r\n            {/*    handleExclude={excludeTask}*/}\r\n            {/*    handleClose={handleDialogClose}*/}\r\n            {/*    handleReasonChange={handleRemovalReasonChange}*/}\r\n            {/*    reason={removalReason}*/}\r\n            {/*/>*/}\r\n            {taskList.map((task: any) =>\r\n                <Grid key={task.id} py={1}>\r\n                    <QuickTask\r\n                        integrated={true}\r\n                        excluded={listOfExcludedTasks.includes(task.id)}\r\n                        task={task}\r\n                        expand={false}\r\n                        id={task.id}\r\n                        name={task.name}\r\n                        handleAction={handleActionClick}\r\n                        refreshTasks={getIntegratedData}\r\n                    />\r\n                </Grid>\r\n            )}\r\n            <Divider sx={{py: 1}}>\r\n                <Chip icon={<ArrowCircleDownIcon/>} label=\"Обобщающая форма\"/>\r\n            </Divider>\r\n            <Button onClick={triggerWebhook}>Сгенерировать форму</Button>\r\n            <Grid py={1}>\r\n                <Form\r\n                    schema={schema ?? {}}\r\n                    uiSchema={uiSchema ?? {}}\r\n                    formData={formResponses ?? {}}\r\n                    liveOmit={true}\r\n                    omitExtraData={true}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete || loader || !ready}>Отправить</Button>\r\n                        {allowGoBack && <Button style={{margin: \"0 16px\"}} onClick={handleOpenPrevious}>К предыдущему таску</Button>}\r\n                        {allowRelease && <Button variant=\"danger\" disabled={complete || loader || !ready} style={{margin: \"0 8px\"}}\r\n                                 onClick={handleRelease}>Освободить</Button>}\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                </Form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default IntegratedTask","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\nimport About from \"./components/campaigns/About\";\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport Notifications from \"./components/notifications/Notifications\";\r\nimport NotificationContent from \"./components/notifications/NotificationContent\";\r\nimport IntegratedTask from \"./components/tasks/IntegratedTask\";\r\nimport {Box, Button, Grid, Typography} from \"@mui/material\";\r\nimport {signInWithGoogle} from \"./util/Firebase\";\r\n\r\nconst App = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    if (currentUser) {\r\n        const token = localStorage.getItem(\"token\");\r\n        currentUser.getIdToken(false).then((idToken: string) => {\r\n            if (token) {\r\n                if (idToken !== token) {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                localStorage.setItem(\"token\", idToken);\r\n                window.location.reload()\r\n            }\r\n        })\r\n    }\r\n\r\n    if (!currentUser) {\r\n        return (\r\n            <Grid container direction=\"column\" py={5} px={1} justifyContent=\"center\">\r\n                <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\r\n                <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\r\n                <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\r\n                <br/>\r\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path={\"/campaign/about/:id\"}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id/integrated\">\r\n                                <IntegratedTask/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications\"}>\r\n                                <Notifications/>\r\n                            </Route>\r\n                            <Route exact path={\"/campaign/:campaignId/notifications/:id\"}>\r\n                                <NotificationContent/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}