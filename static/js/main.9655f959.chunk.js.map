{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","util/Auth.js","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/TaskList.tsx","components/tasks/CreatableTaskList.tsx","components/tasks/TaskMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","snap","child","name","put","prevState","update","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","console","log","ref","getDownloadURL","downloadURL","fileLink","url","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomFileWidget","schema","disabled","formContext","campaignId","chainId","stageId","userId","taskId","useState","fileBeingUploaded","fileLinks","pathToFolder","undefined","useEffect","newFiles","parsed","JSON","parse","Object","keys","forEach","filename","handleChange","event","target","allFiles","stringify","onChange","className","title","multiple","type","style","href","paddingLeft","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","Task","useParams","id","history","useHistory","useContext","setSchema","uiSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","widgets","customfile","getTask","caseId","get","res","data","task","stage","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","case","prevStages","displayed_prev_stages","inTasksPromise","t","tt","brokenUi","r","fixedUi","responses","flat","inTasks","setData","margin","padding","length","Grid","align","i","formData","e","onSubmit","patch","alert","goBack","Button","projectName","drawerWidth","useStyles","makeStyles","theme","createStyles","root","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","formControl","selectEmpty","marginTop","select","selectIcon","fill","top","Appbar","classes","useTheme","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","noWrap","cursor","push","FormControl","size","Select","autoWidth","labelId","label","disableUnderline","inputProps","icon","camp","MenuItem","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","marginBottom","ChainCard","description","Card","CardContent","component","gutterBottom","CardActions","Builder","campaigns","setCampaigns","container","justify","item","TabPanel","index","other","role","hidden","p","a11yProps","backgroundColor","palette","background","SimpleTabs","Tabs","centered","Tab","showSelectable","TaskCard","creatable","selectable","handleOpen","pathname","handleCreate","post","handleSelectable","catch","TaskList","assignee","username","tasks","setTasks","taskstagesUrl","TaskMenu","setValue","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","CreatableTaskList","newValue","App","path","exact","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9655f959.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload(false))\r\n}\r\n\r\nexport default firebase;","import firebase from '../../../util/Firebase'\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks) => {\r\n    if (storageRef) {\r\n        await Promise.all(files.map(async file => {\r\n            const snap = storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        let fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[file.name]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return prevState ? {...prevState, ...update} : update\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[file.name]: fileLink}\r\n                            return prevState ? {...prevState, ...update} : update\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    };\r\n}\r\n\r\nexport default upload","import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, disabled, name, formContext, value} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [fileBeingUploaded, setFileBeingUploaded] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState({})\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        // let chain = chainId\r\n        // if (typeof chainId === \"object\") {\r\n        //     chain = chainId.id\r\n        // }\r\n        pathToFolder = firebase\r\n            .storage()\r\n            .ref(campaignId)\r\n            .child(chainId)\r\n            .child(stageId)\r\n            .child(userId)\r\n            .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"value\", value)\r\n        if (value) {\r\n            try {\r\n                let newFiles: any = {}\r\n                let parsed = JSON.parse(value)\r\n                Object.keys(parsed).forEach(filename => {\r\n                    newFiles[filename] = {url: parsed[filename], status: \"complete\"}\r\n                })\r\n                setFileBeingUploaded((prevState: any) => ({...prevState, ...newFiles}))\r\n\r\n            } catch (error) {\r\n                // setFileBeingUploaded({})\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files], pathToFolder, setFileBeingUploaded, setFileLinks)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (fileLinks) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            try {\r\n                let parsed = JSON.parse(value)\r\n                let allFiles = {...parsed, ...fileLinks}\r\n                console.log(allFiles)\r\n                let stringify = JSON.stringify(allFiles)\r\n\r\n                props.onChange(stringify)\r\n            }\r\n            catch (error) {\r\n                let stringify = JSON.stringify(fileLinks)\r\n\r\n                props.onChange(stringify)\r\n            }\r\n        }\r\n    }, [fileLinks])\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} multiple={true} type=\"file\" onChange={handleChange}/>\r\n\r\n            {Object.keys(fileBeingUploaded).map(filename =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <p>{filename}</p>\r\n                        {fileBeingUploaded[filename].status === 'complete' &&\r\n                        <a className=\"text-success\" href={fileBeingUploaded[filename]?.url}\r\n                           style={{paddingLeft: 10}}>saved</a>}\r\n                    </div>\r\n                    {fileBeingUploaded[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getTask = (stageId?: string | number, caseId?: string | number) => {\r\n            if (stageId && caseId) {\r\n                return axios.get(`${tasksUrl}?stage=${stageId}&case=${caseId}`).then((res: any) => res.data)\r\n            }\r\n            return axios.get(tasksUrl + id + '/').then((res: any) => res.data)\r\n        }\r\n        const setData = async () => {\r\n            let task = await getTask()\r\n            let stage = task.stage\r\n            console.log(task, stage)\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema)\r\n            let parsed_ui = JSON.parse(stage.ui_schema)\r\n            let caseId = task.case\r\n            let prevStages = stage.displayed_prev_stages\r\n            console.log(prevStages)\r\n            let inTasksPromise = prevStages.map((stageId: number | string) => getTask(stageId, caseId))\r\n            let inTasks = await Promise.all(inTasksPromise)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    return res.map((t: any) => {\r\n                        return t.map((tt: any) => {\r\n                            let brokenUi = JSON.parse(tt.stage.ui_schema)\r\n                            let {file, ...r} = brokenUi\r\n                            if (file && file[\"ui:widget\"] !== \"customfile\") {\r\n                                file = {\"ui:widget\": \"customfile\"}\r\n                            }\r\n                            let fixedUi = {file, ...r}\r\n                            return {\r\n                                responses: tt.responses,\r\n                                json_schema: JSON.parse(tt.stage.json_schema),\r\n                                ui_schema: fixedUi\r\n                            }\r\n                        })\r\n                    }).flat()\r\n                })\r\n            console.log(\"inTasks\", inTasks)\r\n            console.log(\"task.responses\", task.responses)\r\n            console.log(\"parsed_schema\", parsed_schema)\r\n            console.log(\"parsed_ui\", parsed_ui)\r\n            setPrevTasks(inTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (id && currentUser) {\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        console.log(\"formResponses\", formResponses)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => alert(\"Saved\"))\r\n            .then(() => history.goBack())\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.goBack())\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {prevTasks.length > 0 &&\r\n            <Grid>\r\n                <Typography variant={\"h4\"} align=\"center\" style={{padding: 10}}>Previous Tasks</Typography>\r\n                {prevTasks.map((task: any, i: number) =>\r\n                    <Form\r\n                        key={`prev_task_${i}`}\r\n                        schema={task.json_schema}\r\n                        uiSchema={task.ui_schema}\r\n                        formData={task.responses}\r\n                        widgets={widgets}\r\n                        disabled={true}\r\n                        children={\" \"}\r\n                    />\r\n                )}\r\n            </Grid>\r\n            }\r\n            <Grid>\r\n                {prevTasks.length > 0 &&\r\n                <Typography variant={\"h4\"} align=\"center\" style={{padding: 10}}>Current Task</Typography>}\r\n                <Form\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formResponses}\r\n                    formContext={dataForStoragePath}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Button type=\"submit\" disabled={complete}>Submit</Button>\r\n                    {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                </Form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import React, {useContext, useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography, Grid\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../config/Urls';\r\nimport {projectName} from \"../../config/Config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then((res: any) => res.data)\r\n            .then((res: any) => {\r\n                console.log(res)\r\n                setAllCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}`)\r\n    }\r\n\r\n    const redirectToMain = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap style={{cursor: \"pointer\"}} onClick={redirectToMain}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Grid className={classes.title} />\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`} value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        {projectName}\r\n                    </Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Card from \"./CampaignCard\";\r\nimport {campaignsUrl} from \"../../config/Urls\"\r\n\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\nexport type NewCampaignParams = { name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            {campaigns.map(campaign => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={campaign.id} chain={campaign}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const classes = useStyles();\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Grid>\r\n            <div className={classes.root}>\r\n                <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\r\n                      aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                    {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n                </Tabs>\r\n            </div>\r\n            {props.children}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport axios from \"../../util/Axios\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { id: number, complete: boolean, name: string, description?: string, creatable?: boolean, selectable?: boolean }\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, complete, name, description, creatable, selectable} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        let data = {stage: id}\r\n        axios.post(tasksUrl, data)\r\n            .then(res => res.data)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        axios.post(tasksUrl + id + '/request_assignment/')\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(res => alert(res))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Open</Button>\r\n        }\r\n        else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Create</Button>\r\n        }\r\n        else {\r\n            return <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" component=\"p\">\r\n                    ID: {id ? id : <br/>}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React, {useEffect, useState} from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\n\r\ntype TaskListProps = { stage?: number, assignee?: number, complete: boolean, username: string, selectable?: boolean, tasks: any[] }\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {stage, assignee, complete, username, selectable, tasks} = props;\r\n    // const [tasks, setTasks] = useState([])\r\n\r\n    // useEffect(() => {\r\n    //     if (selectable) {\r\n    //         console.log('selectable')\r\n    //         axios.get(`${tasksUrl}user_selectable/`)\r\n    //             .then(res => res.data)\r\n    //             .then((res) => res.map((task:any) => ({...task, selectable: true})))\r\n    //             .then(res => setTasks(res))\r\n    //     } else {\r\n    //         axios.get(`${tasksUrl}user_relevant/?complete=${complete}`)\r\n    //             .then(res => res.data)\r\n    //             .then(res => setTasks(res))\r\n    //     }\r\n    // }, [])\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n        >\r\n            {tasks.map((task: any) =>\r\n                <Grid item key={task.id} style={{padding: 12}}>\r\n                    <TaskCard\r\n                        id={task.id}\r\n                        name={task.stage.name}\r\n                        description={task.stage.description}\r\n                        complete={task.complete}\r\n                        selectable={selectable}\r\n                    />\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useEffect, useState} from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport axios from \"../../util/Axios\";\r\nimport {taskstagesUrl, tasksUrl} from \"../../config/Urls\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\n\r\ntype TaskListProps = { stage?: number, assignee?: number, complete: boolean, username: string }\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {stage, assignee, complete, username} = props;\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(taskstagesUrl + 'user_relevant/')\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                setTasks(res)\r\n                console.log(res)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container>\r\n            {tasks.map((task: any) =>\r\n                <Grid item key={task.id} style={{padding: 12}}>\r\n                    <TaskCard\r\n                        id={task.id}\r\n                        name={task.name}\r\n                        description={task.description}\r\n                        complete={false}\r\n                        creatable={true}\r\n                    />\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport CreatableTaskList from \"./CreatableTaskList\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\n\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    const [value, setValue] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${tasksUrl}user_selectable/`)\r\n            .then(res => res.data)\r\n            .then(res => setSelectableTasks(res))\r\n\r\n        axios.get(`${tasksUrl}user_relevant/?complete=${true}`)\r\n            .then(res => res.data)\r\n            .then(res => setCompleteTasks(res))\r\n\r\n        axios.get(`${tasksUrl}user_relevant/?complete=${false}`)\r\n            .then(res => res.data)\r\n            .then(res => setOpenTasks(res))\r\n    }, [])\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <CreatableTaskList username={currentUser.uid} complete={false}/>\r\n            <SimpleTabs value={value} handleChange={handleChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={value} index={0}>\r\n                    <TaskList username={currentUser.uid} complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <TaskList username={currentUser.uid} complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={value} index={2}>\r\n                    <TaskList username={currentUser.uid} complete={false} selectable={true} tasks={selectableTasks}/>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}