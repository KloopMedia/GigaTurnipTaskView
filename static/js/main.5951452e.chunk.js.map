{"version":3,"sources":["config/Urls.js","util/Axios.js","util/Firebase.js","components/custom-widgets/file-widget/Upload.js","components/custom-widgets/file-widget/LinearProgressWithLabel.tsx","components/custom-widgets/file-widget/CustomFileWidget.tsx","util/Auth.js","components/tasks/Task.tsx","config/Config.js","components/appbar/Appbar.tsx","components/appbar/SimpleAppbar.tsx","components/campaigns/CampaignCard.tsx","components/campaigns/Campaigns.tsx","components/Tabs/TabPanel.tsx","components/Tabs/Tabs.tsx","components/tasks/TaskCard.tsx","components/tasks/TaskList.tsx","components/tasks/TaskMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["campaignsUrl","tasksUrl","instance","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","signOut","then","removeItem","window","location","reload","upload","files","storageRef","setFileBeingUploaded","setFileLinks","a","all","map","file","snap","child","name","put","prevState","update","status","progress","on","storage","TaskEvent","STATE_CHANGED","snapshot","bytesTransferred","totalBytes","console","log","ref","getDownloadURL","downloadURL","fullPath","filePath","fileLink","url","LinearProgressWithLabel","props","Box","display","alignItems","width","mr","LinearProgress","variant","minWidth","Typography","color","Math","round","value","CustomFileWidget","schema","uiSchema","disabled","formContext","campaignId","chainId","stageId","userId","taskId","useState","fileBeingUploaded","fileLinks","privateUpload","private","pathToFolder","undefined","useEffect","parsed","JSON","parse","Object","keys","forEach","filename","getDownloadUrl","handleChange","event","target","path","allFiles","stringify","onChange","className","title","multiple","type","style","href","paddingLeft","AuthContext","React","createContext","AuthProvider","children","currentUser","setCurrentUser","onAuthStateChanged","user","getIdToken","idToken","setItem","onIdTokenChanged","Provider","Task","useParams","id","history","useHistory","useContext","setSchema","setUiSchema","formResponses","setFormResponses","complete","setComplete","prevTasks","setPrevTasks","dataForStoragePath","setDataForStoragePath","editorData","setEditorData","loader","setLoader","widgets","customfile","getTask","caseId","get","res","data","task","stage","rich_text","toString","chain","uid","parsed_schema","json_schema","parsed_ui","ui_schema","case","prevStages","displayed_prev_stages","inTasksPromise","t","tt","brokenUi","r","fixedUi","responses","flat","inTasks","setData","margin","padding","paddingBottom","toolbar","inline","tinymceScriptSrc","process","init","plugins","menubar","image_advtab","importcss_append","length","Grid","align","i","formData","e","onSubmit","patch","alert","push","Button","CircularProgress","projectName","drawerWidth","useStyles","makeStyles","theme","createStyles","root","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","justifyContent","mixins","content","flexGrow","formControl","selectEmpty","marginTop","select","selectIcon","fill","top","Appbar","classes","useTheme","open","setOpen","campaign","setCampaign","allCampaigns","setAllCampaigns","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","onClick","edge","noWrap","cursor","email","FormControl","size","Select","autoWidth","labelId","label","disableUnderline","inputProps","icon","camp","MenuItem","Drawer","paper","direction","Divider","List","ListItem","button","page","ListItemIcon","ListItemText","primary","extra","marginBottom","ChainCard","description","Card","CardContent","component","gutterBottom","CardActions","Builder","campaigns","setCampaigns","container","justify","item","TabPanel","index","other","role","hidden","p","a11yProps","backgroundColor","palette","background","SimpleTabs","Tabs","centered","Tab","showSelectable","TaskCard","creatable","selectable","handleOpen","pathname","handleCreate","post","catch","err","handleSelectable","TaskList","tasks","TaskMenu","setValue","selectableTasks","setSelectableTasks","completeTasks","setCompleteTasks","openTasks","setOpenTasks","creatableTasks","setCreatableTasks","newValue","App","exact","SimpleAppbar","Campaigns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5951452e.chunk.js","sourcesContent":["const baseUrl = \"https://journal-bb5e3.uc.r.appspot.com/\"\r\n// const baseUrl = \"http://127.0.0.1:8000/\"\r\nconst campaignsUrl = \"api/v1/campaigns/\"\r\nconst chainsUrl = \"api/v1/chains/\"\r\nconst taskstagesUrl = \"api/v1/taskstages/\"\r\nconst webhookstagesUrl = \"api/v1/webhookstages/\"\r\nconst conditionalstagesUrl = \"api/v1/conditionalstages/\"\r\nconst casesUrl = \"api/v1/cases/\"\r\nconst tasksUrl = \"api/v1/tasks/\"\r\n\r\nexport {\r\n    baseUrl,\r\n    campaignsUrl,\r\n    chainsUrl,\r\n    taskstagesUrl,\r\n    webhookstagesUrl,\r\n    conditionalstagesUrl,\r\n    casesUrl,\r\n    tasksUrl\r\n}","import axios from \"axios\";\r\nimport {baseUrl} from \"../config/Urls\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: baseUrl\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            config.headers[\"Authorization\"] = 'JWT ' + token;\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;","import firebase from 'firebase';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCXiwOUNsbzKH7sbSAZrqA9f7VOeCMdUOQ\",\r\n    authDomain: \"gigaturnip-b6b5b.firebaseapp.com\",\r\n    projectId: \"gigaturnip-b6b5b\",\r\n    storageBucket: \"gigaturnip-b6b5b.appspot.com\",\r\n    messagingSenderId: \"414429242328\",\r\n    appId: \"1:414429242328:web:a4685f5ac6895ea767c8ad\",\r\n    measurementId: \"G-Y8JTEJMTET\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore();\r\n// if (window.location.hostname === \"localhost\") {\r\n//   db.useEmulator(\"localhost\", 8080);\r\n// }\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nfirebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n})\r\nexport const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n        prompt: 'select_account'\r\n    });\r\n    return firebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(() => localStorage.removeItem(\"token\"))\r\n        .then(() => window.location.reload(false))\r\n}\r\n\r\nexport default firebase;","import firebase from '../../../util/Firebase'\r\n\r\nconst upload = async (files, storageRef, setFileBeingUploaded, setFileLinks) => {\r\n    if (storageRef) {\r\n        await Promise.all(files.map(async file => {\r\n            const snap = storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n                        console.log(\"FILE PATH\", snap.snapshot.ref.fullPath)\r\n                        const filePath = snap.snapshot.ref.fullPath\r\n                        const fileLink = downloadURL\r\n                        setFileBeingUploaded(prevState => {\r\n                            const update = {[file.name]: {status: \"complete\", progress: 100, url: fileLink}}\r\n                            return prevState ? {...prevState, ...update} : update\r\n                        })\r\n                        setFileLinks(prevState => {\r\n                            const update = {[file.name]: filePath}\r\n                            return prevState ? {...prevState, ...update} : update\r\n                        })\r\n                    });\r\n                });\r\n        }))\r\n    }\r\n    ;\r\n}\r\n\r\nexport default upload","import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props: any) => {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LinearProgressWithLabel","import React, {useEffect, useState} from 'react'\r\nimport firebase from '../../../util/Firebase'\r\nimport upload from \"./Upload\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\n\r\n\r\nconst CustomFileWidget = (props: any) => {\r\n    const {schema, uiSchema, disabled, name, formContext, value} = props;\r\n    const {campaignId, chainId, stageId, userId, taskId} = formContext;\r\n    const [fileBeingUploaded, setFileBeingUploaded] = useState<any>({})\r\n    const [fileLinks, setFileLinks] = useState({})\r\n    const privateUpload = uiSchema[\"ui:options\"] ? uiSchema[\"ui:options\"].private : false\r\n\r\n    let pathToFolder: any = undefined\r\n    if (campaignId && chainId && stageId && userId && taskId) {\r\n        pathToFolder = firebase.storage()\r\n        if (privateUpload) {\r\n            pathToFolder = pathToFolder.ref(\"private\")\r\n        } else {\r\n            pathToFolder = pathToFolder.ref(\"public\")\r\n        }\r\n        pathToFolder = pathToFolder.child(campaignId)\r\n                .child(chainId)\r\n                .child(stageId)\r\n                .child(userId)\r\n                .child(taskId)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"value\", value)\r\n        console.log(\"uiSchema\", uiSchema)\r\n        if (value) {\r\n            try {\r\n                const parsed = JSON.parse(value)\r\n                Object.keys(parsed).forEach(filename => {\r\n                    getDownloadUrl(parsed[filename])\r\n                        .then(url => setFileBeingUploaded((prevState: any) => ({\r\n                            ...prevState,\r\n                            [filename]: {url: url, status: \"complete\"}\r\n                        })))\r\n                })\r\n            } catch (error) {\r\n                // setFileBeingUploaded({})\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    const handleChange = async (event: any) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files], pathToFolder, setFileBeingUploaded, setFileLinks)\r\n    };\r\n\r\n    const getDownloadUrl = (path: string) => {\r\n        return firebase.storage().ref(path).getDownloadURL()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (fileLinks) {\r\n            console.log(\"fileLinks\", fileLinks)\r\n            try {\r\n                let parsed = JSON.parse(value)\r\n                let allFiles = {...parsed, ...fileLinks}\r\n                console.log(allFiles)\r\n                let stringify = JSON.stringify(allFiles)\r\n\r\n                props.onChange(stringify)\r\n            } catch (error) {\r\n                let stringify = JSON.stringify(fileLinks)\r\n\r\n                props.onChange(stringify)\r\n            }\r\n        }\r\n    }, [fileLinks])\r\n\r\n    return (\r\n        <div>\r\n            <label className={\"form-label\"}>{schema?.title}</label>\r\n            <br/>\r\n            <input disabled={disabled} multiple={true} type=\"file\" onChange={handleChange}/>\r\n\r\n            {Object.keys(fileBeingUploaded).map(filename =>\r\n                <div key={filename}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <p>{filename}</p>\r\n                        {fileBeingUploaded[filename].status === 'complete' &&\r\n                        <a className=\"text-success\" href={fileBeingUploaded[filename]?.url}\r\n                           style={{paddingLeft: 10}}>saved</a>}\r\n                    </div>\r\n                    {fileBeingUploaded[filename].status === 'loading' &&\r\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomFileWidget","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setCurrentUser(user)\r\n                user.getIdToken(true).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        });\r\n        firebase.auth().onIdTokenChanged(user => {\r\n            if (user) {\r\n                user.getIdToken(false).then((idToken) => {\r\n                    localStorage.setItem(\"token\", idToken);\r\n                })\r\n            }\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport Form from \"@rjsf/bootstrap-4\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from \"../../util/Axios\";\r\nimport {tasksUrl} from '../../config/Urls'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CustomFileWidget from \"../custom-widgets/file-widget/CustomFileWidget\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Box, CircularProgress, Grid, Typography} from \"@material-ui/core\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Editor} from \"@tinymce/tinymce-react\";\r\n\r\ntype RouterParams = { id: string, campaignId: string }\r\ntype dataForStoragePathParams = { campaignId: number, chainId: number, stageId: number, userId: string, taskId: number }\r\n\r\nconst Task = () => {\r\n    const {id, campaignId} = useParams<RouterParams>();\r\n    const history = useHistory()\r\n    const {currentUser} = useContext(AuthContext)\r\n    const path = `/campaign/${campaignId}/tasks`\r\n\r\n    const [schema, setSchema] = useState({})\r\n    const [uiSchema, setUiSchema] = useState({})\r\n    const [formResponses, setFormResponses] = useState<any>({})\r\n    const [complete, setComplete] = useState(false)\r\n    const [prevTasks, setPrevTasks] = useState<any>([])\r\n    const [dataForStoragePath, setDataForStoragePath] = useState<dataForStoragePathParams | {}>({})\r\n    const [editorData, setEditorData] = useState(\"\")\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const widgets = {\r\n        customfile: CustomFileWidget\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getTask = (stageId?: string | number, caseId?: string | number) => {\r\n            if (stageId && caseId) {\r\n                return axios.get(`${tasksUrl}?stage=${stageId}&case=${caseId}`).then((res: any) => res.data)\r\n            }\r\n            return axios.get(tasksUrl + id + '/').then((res: any) => res.data)\r\n        }\r\n        const setData = async () => {\r\n            let task = await getTask()\r\n            let stage = task.stage\r\n\r\n            if (stage && stage.rich_text) {\r\n                setEditorData(stage.rich_text)\r\n            }\r\n\r\n            setDataForStoragePath({\r\n                campaignId: campaignId.toString(),\r\n                chainId: stage.chain.id.toString(),\r\n                stageId: stage.id.toString(),\r\n                userId: currentUser.uid,\r\n                taskId: task.id.toString()\r\n            })\r\n\r\n            let parsed_schema = JSON.parse(stage.json_schema) ?? {}\r\n            let parsed_ui = JSON.parse(stage.ui_schema) ?? {}\r\n            let caseId = task.case\r\n            let prevStages = stage.displayed_prev_stages\r\n            console.log(prevStages)\r\n            let inTasksPromise = prevStages.map((stageId: number | string) => getTask(stageId, caseId))\r\n            let inTasks = await Promise.all(inTasksPromise)\r\n                .then(res => {\r\n                    console.log(res)\r\n                    return res.map((t: any) => {\r\n                        return t.map((tt: any) => {\r\n                            let brokenUi = JSON.parse(tt.stage.ui_schema)\r\n                            let {file, ...r} = brokenUi\r\n                            if (file && file[\"ui:widget\"] !== \"customfile\") {\r\n                                file = {\"ui:widget\": \"customfile\"}\r\n                            }\r\n                            let fixedUi = {file, ...r}\r\n                            return {\r\n                                responses: tt.responses,\r\n                                json_schema: JSON.parse(tt.stage.json_schema),\r\n                                ui_schema: fixedUi\r\n                            }\r\n                        })\r\n                    }).flat()\r\n                })\r\n\r\n            setPrevTasks(inTasks)\r\n            setFormResponses(task.responses)\r\n            setSchema(parsed_schema)\r\n            setUiSchema(parsed_ui)\r\n            setComplete(task.complete)\r\n        }\r\n        if (id && currentUser) {\r\n            setData()\r\n        }\r\n    }, [id, currentUser])\r\n\r\n    const handleSubmit = () => {\r\n        setLoader(true)\r\n        let data = {responses: formResponses, complete: true}\r\n        axios.patch(tasksUrl + id + '/', data)\r\n            .then(() => alert(\"Saved\"))\r\n            .then(() => setLoader(false))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleRelease = () => {\r\n        axios.post(tasksUrl + id + '/release_assignment/')\r\n            .then(() => alert(\"Released\"))\r\n            .then(() => history.push(path))\r\n    }\r\n\r\n    const handleChange = (e: any) => {\r\n        setFormResponses(e.formData)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: '70%', minWidth: '400px', margin: '0 auto', display: 'block', padding: 10}}>\r\n            {editorData !== \"\" && <div style={{paddingBottom: 20}}>\r\n                <Editor\r\n                    id={\"ViewerTinyMCE\"}\r\n                    value={editorData}\r\n                    toolbar={false}\r\n                    inline={false}\r\n                    disabled={true}\r\n                    tinymceScriptSrc={process.env.PUBLIC_URL + '/tinymce/tinymce.min.js'}\r\n                    init={{\r\n                        plugins: 'autoresize',\r\n                        menubar: false,\r\n                        image_advtab: true,\r\n                        importcss_append: true,\r\n                    }}\r\n                />\r\n            </div>}\r\n\r\n            {prevTasks.length > 0 &&\r\n            <Grid>\r\n                <Typography variant={\"h4\"} align=\"center\" style={{padding: 10}}>Previous Tasks</Typography>\r\n                {prevTasks.map((task: any, i: number) =>\r\n                    <Form\r\n                        key={`prev_task_${i}`}\r\n                        schema={task.json_schema}\r\n                        uiSchema={task.ui_schema}\r\n                        formData={task.responses}\r\n                        widgets={widgets}\r\n                        disabled={true}\r\n                        children={\" \"}\r\n                    />\r\n                )}\r\n            </Grid>\r\n            }\r\n            <Grid>\r\n                {prevTasks.length > 0 &&\r\n                <Typography variant={\"h4\"} align=\"center\" style={{padding: 10}}>Current Task</Typography>}\r\n                <Form\r\n                    schema={schema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formResponses}\r\n                    formContext={dataForStoragePath}\r\n                    widgets={widgets}\r\n                    disabled={complete}\r\n                    onChange={handleChange}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Box display={\"flex\"}>\r\n                        <Button type=\"submit\" disabled={complete}>Submit</Button>\r\n                        {loader && <Box paddingLeft={2}><CircularProgress/></Box>}\r\n                    </Box>\r\n                    {/*<Button variant=\"danger\" disabled={complete} style={{marginLeft: 7}} onClick={handleRelease}>Release</Button>*/}\r\n                </Form>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task\r\n","const projectName = \"GigaTurnip Tasks\"\r\n\r\n\r\nexport {projectName}","import React, {useContext, useState, useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport {\r\n    MenuItem,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    AppBar,\r\n    Button,\r\n    CssBaseline,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography, Grid\r\n} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport axios from '../../util/Axios';\r\n\r\nimport {campaignsUrl} from '../../config/Urls';\r\nimport {projectName} from \"../../config/Config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            alignItems: 'center'\r\n            // minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        select: {},\r\n        selectIcon: {\r\n            fill: 'white',\r\n            top: 'calc(50% - 14px)'\r\n        },\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const {campaignId} = useParams<{ campaignId: string }>();\r\n    const {currentUser} = useContext(AuthContext)\r\n    const {children} = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [campaign, setCampaign] = useState<number | string | unknown>(campaignId);\r\n    const [allCampaigns, setAllCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    console.log(\"CURRENT CAMPAIGN\", campaignId)\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then((res: any) => res.data)\r\n            .then((res: any) => {\r\n                console.log(res)\r\n                setAllCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOptionClick = (page: string) => {\r\n        history.push(`/campaign/${campaignId}/${page}`)\r\n    };\r\n\r\n    const handleCampaignChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        let value = event.target.value;\r\n        console.log(value)\r\n        setCampaign(value)\r\n        history.push(`/campaign/${value}/tasks`)\r\n    }\r\n\r\n    const redirectToMain = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap style={{cursor: \"pointer\"}} onClick={redirectToMain}>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Grid className={classes.title} />\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    <FormControl className={classes.formControl} size=\"small\">\r\n                        <Select\r\n                            className={classes.select}\r\n                            autoWidth\r\n                            labelId=\"campaign-select-label\"\r\n                            id=\"campaign-select-label\"\r\n                            value={campaign}\r\n                            onChange={handleCampaignChange}\r\n                            label=\"Campaign\"\r\n                            disableUnderline\r\n                            style={{color: 'white'}}\r\n                            inputProps={{\r\n                                classes: {\r\n                                    icon: classes.selectIcon,\r\n                                },\r\n                            }}\r\n                        >\r\n                            {allCampaigns.map(camp => <MenuItem key={`${camp.name}_${camp.id}`} value={camp.id}>{camp.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon/> : <ChevronLeftIcon/>}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>\r\n                    <ListItem button onClick={() => handleOptionClick(\"chain\")}>\r\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\r\n                        <ListItemText primary={\"Chains\"}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React, {useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, CssBaseline, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {signInWithGoogle, signOut} from '../../util/Firebase';\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {projectName} from \"../../config/Config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create(['width', 'margin'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: 36,\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create('width', {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            overflowX: 'hidden',\r\n            width: theme.spacing(7) + 1,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(9) + 1,\r\n            },\r\n        },\r\n        toolbar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            // padding: theme.spacing(3),\r\n        },\r\n        title: {\r\n            flexGrow: 1\r\n        }\r\n    }),\r\n);\r\n\r\ntype AppbarProps = { children: React.ReactNode }\r\n\r\nconst Appbar = (props: AppbarProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {children} = props;\r\n    const {currentUser} = useContext(AuthContext)\r\n    const history = useHistory();\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        {projectName}\r\n                    </Typography>\r\n                    <Typography>{currentUser?.email}</Typography>\r\n                    {currentUser ?\r\n                        <Button onClick={signOut} color={\"inherit\"}>\r\n                            Log out\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={signInWithGoogle} color={\"inherit\"}>\r\n                            Login\r\n                        </Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                {children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = { chain: { id: number, name: string, description?: string } }\r\n\r\nconst ChainCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, name, description} = props.chain;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`/campaign/${id}/tasks`)\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.extra} variant=\"subtitle2\" color=\"textSecondary\">\r\n                    ID: {id}\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChainCard","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"../../util/Axios\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport Card from \"./CampaignCard\";\r\nimport {campaignsUrl} from \"../../config/Urls\"\r\n\r\ntype CampaingParams = { id: number, name: string, description?: string };\r\nexport type NewCampaignParams = { name: string, description?: string }\r\n\r\nconst Builder = () => {\r\n    const [campaigns, setCampaigns] = useState<CampaingParams[]>([])\r\n\r\n    useEffect(() => {\r\n        axios.get(campaignsUrl)\r\n            .then(res => res.data)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCampaigns(res)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container justify={\"center\"}>\r\n            {campaigns.map(campaign => (\r\n                <Grid item style={{padding: 10}}>\r\n                    <Card key={campaign.id} chain={campaign}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Builder\r\n\r\n\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\ntype SimpleTabsProps = {\r\n    value: number | string,\r\n    handleChange: (event: any, newValue: number) => void,\r\n    showSelectable: boolean,\r\n    children: any\r\n}\r\n\r\nconst SimpleTabs = (props: SimpleTabsProps) => {\r\n    const classes = useStyles();\r\n    const {value, handleChange} = props;\r\n\r\n    return (\r\n        <Grid>\r\n            <div className={classes.root}>\r\n                <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\r\n                      aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                    {props.showSelectable && <Tab label=\"Доступные\" {...a11yProps(2)} />}\r\n                </Tabs>\r\n            </div>\r\n            {props.children}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SimpleTabs\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {tasksUrl} from \"../../config/Urls\";\r\nimport axios from \"../../util/Axios\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n        // height: 200\r\n    },\r\n    extra: {\r\n        marginBottom: 15\r\n    }\r\n});\r\n\r\ntype CardProps = {\r\n    id: number,\r\n    complete?: boolean,\r\n    name: string,\r\n    description?: string,\r\n    creatable?: boolean,\r\n    selectable?: boolean }\r\n\r\nconst TaskCard = (props: CardProps) => {\r\n    const classes = useStyles();\r\n    const {id, complete, name, description, creatable, selectable} = props;\r\n    const history = useHistory()\r\n\r\n    const handleOpen = () => {\r\n        history.push(`${history.location.pathname}/${id}`)\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        let data = {stage: id}\r\n        console.log(data)\r\n        axios.post(tasksUrl, data)\r\n            .then(res => res.data)\r\n            .then(res => history.push(`${history.location.pathname}/${res.id}`))\r\n            .catch(err => alert(err))\r\n    };\r\n\r\n    const handleSelectable = () => {\r\n        axios.post(tasksUrl + id + '/request_assignment/')\r\n            .then(res => history.push(`${history.location.pathname}/${id}`))\r\n            .catch(err => alert(err))\r\n    }\r\n\r\n    const returnButton = () => {\r\n        if (selectable) {\r\n            return <Button size=\"small\" onClick={handleSelectable}>Open</Button>\r\n        }\r\n        else if (creatable) {\r\n            return <Button size=\"small\" onClick={handleCreate}>Create</Button>\r\n        }\r\n        else {\r\n            return <Button size=\"small\" onClick={handleOpen}>Open</Button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"span\" gutterBottom={true}>\r\n                    {name}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"subtitle2\" component=\"span\">\r\n                    {id && !creatable ? `ID: ${id}` : <br/>}\r\n                </Typography>\r\n                <br/>\r\n                <Typography variant=\"body1\" component=\"span\">\r\n                    {description ? description : <br/>}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {returnButton()}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TaskCard","import React from \"react\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport TaskCard from \"./TaskCard\";\r\n\r\n\r\ntype TaskListProps = {\r\n    complete?: boolean,\r\n    selectable?: boolean,\r\n    creatable?: boolean,\r\n    tasks: any[]\r\n}\r\n\r\nconst TaskList = (props: TaskListProps) => {\r\n    const {complete, selectable, tasks, creatable} = props;\r\n\r\n    const listTasks = () => {\r\n        return tasks.map((task: any) => {\r\n                let id, name, description;\r\n                if (creatable) {\r\n                    id = task.id\r\n                    name = task.name\r\n                    description = task.description\r\n                }\r\n                else {\r\n                    id = task.id\r\n                    name = task.stage.name\r\n                    description = task.stage.description\r\n                }\r\n\r\n                return (\r\n                    <Grid item key={task.id} style={{padding: 10}}>\r\n                        <TaskCard\r\n                            id={id}\r\n                            name={name}\r\n                            description={description}\r\n                            complete={complete}\r\n                            selectable={selectable}\r\n                            creatable={creatable}\r\n                        />\r\n                    </Grid>\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            direction={creatable ? \"row\" : \"column\"}\r\n            alignItems={\"center\"}\r\n            justifyContent={creatable ? \"flex-start\" : \"center\"}\r\n        >\r\n            {listTasks()}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React, {useContext, useEffect, useState} from \"react\";\r\nimport TabPanel from \"../Tabs/TabPanel\";\r\nimport SimpleTabs from \"../Tabs/Tabs\";\r\nimport TaskList from \"./TaskList\";\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport axios from \"../../util/Axios\";\r\nimport {taskstagesUrl, tasksUrl} from \"../../config/Urls\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\ntype RouterParams = { campaignId: string }\r\n\r\nconst TaskMenu = (props: any) => {\r\n    const {campaignId} = useParams<RouterParams>();\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [value, setValue] = useState(0);\r\n    const [selectableTasks, setSelectableTasks] = useState([])\r\n    const [completeTasks, setCompleteTasks] = useState([])\r\n    const [openTasks, setOpenTasks] = useState([])\r\n    const [creatableTasks, setCreatableTasks] = useState([])\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(`${tasksUrl}user_selectable/?stage__chain__campaign=${campaignId}`)\r\n            .then(res => res.data)\r\n            .then(res => setSelectableTasks(res))\r\n\r\n        axios.get(`${tasksUrl}user_relevant/?complete=${true}&stage__chain__campaign=${campaignId}`)\r\n            .then(res => res.data)\r\n            .then(res => setCompleteTasks(res))\r\n\r\n        axios.get(`${tasksUrl}user_relevant/?complete=${false}&stage__chain__campaign=${campaignId}`)\r\n            .then(res => res.data)\r\n            .then(res => setOpenTasks(res))\r\n\r\n        axios.get(taskstagesUrl + `user_relevant/?chain__campaign=${campaignId}`)\r\n            .then(res => res.data)\r\n            .then(res => setCreatableTasks(res))\r\n    }, [campaignId])\r\n\r\n    return (\r\n        currentUser && currentUser.uid &&\r\n        <Grid>\r\n            <TaskList creatable={true} tasks={creatableTasks}/>\r\n            <SimpleTabs value={value} handleChange={handleChange} showSelectable={selectableTasks.length > 0}>\r\n                <TabPanel value={value} index={0}>\r\n                    <TaskList complete={false} tasks={openTasks}/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <TaskList complete={true} tasks={completeTasks}/>\r\n                </TabPanel>\r\n                {selectableTasks.length > 0 &&\r\n                <TabPanel value={value} index={2}>\r\n                    <TaskList selectable={true} tasks={selectableTasks}/>\r\n                </TabPanel>}\r\n            </SimpleTabs>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TaskMenu","import React, {useContext} from \"react\";\r\nimport Task from './components/tasks/Task'\r\nimport Appbar from \"./components/appbar/Appbar\";\r\n\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"./util/Auth\";\r\nimport SimpleAppbar from \"./components/appbar/SimpleAppbar\";\r\nimport Campaigns from \"./components/campaigns/Campaigns\";\r\nimport TaskMenu from \"./components/tasks/TaskMenu\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/campaign/:campaignId\"}>\r\n                        <Appbar>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks\">\r\n                                <TaskMenu/>\r\n                            </Route>\r\n                            <Route exact path=\"/campaign/:campaignId/tasks/:id\">\r\n                                <Task/>\r\n                            </Route>\r\n                        </Appbar>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <SimpleAppbar>\r\n                            <Campaigns/>\r\n                        </SimpleAppbar>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <AuthProvider>\r\n        <App/>\r\n    </AuthProvider>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}